{"id":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","dependencies":[{"name":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/package.json","includedInParent":true,"mtime":1511210065000},{"name":"/Users/nick/projects/personal/package.json","includedInParent":true,"mtime":1545697594915},{"name":"/Users/nick/projects/personal/.babelrc","includedInParent":true,"mtime":1535748626225},{"name":"./scorer","loc":{"line":4,"column":17},"parent":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/lib/pathScorer.js","resolved":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/lib/scorer.js"}],"generated":{"js":"(function() {\n  var computeScore, countDir, file_coeff, getExtension, getExtensionScore, isMatch, scorePath, scoreSize, tau_depth, _ref;\n\n  _ref = require('./scorer'), isMatch = _ref.isMatch, computeScore = _ref.computeScore, scoreSize = _ref.scoreSize;\n\n  tau_depth = 20;\n\n  file_coeff = 2.5;\n\n  exports.score = function(string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    score = scorePath(string, string_lw, score, options);\n    return Math.ceil(score);\n  };\n\n  scorePath = function(subject, subject_lw, fullPathScore, options) {\n    var alpha, basePathScore, basePos, depth, end, extAdjust, fileLength, pathSeparator, preparedQuery, useExtensionBonus;\n    if (fullPathScore === 0) {\n      return 0;\n    }\n    preparedQuery = options.preparedQuery, useExtensionBonus = options.useExtensionBonus, pathSeparator = options.pathSeparator;\n    end = subject.length - 1;\n    while (subject[end] === pathSeparator) {\n      end--;\n    }\n    basePos = subject.lastIndexOf(pathSeparator, end);\n    fileLength = end - basePos;\n    extAdjust = 1.0;\n    if (useExtensionBonus) {\n      extAdjust += getExtensionScore(subject_lw, preparedQuery.ext, basePos, end, 2);\n      fullPathScore *= extAdjust;\n    }\n    if (basePos === -1) {\n      return fullPathScore;\n    }\n    depth = preparedQuery.depth;\n    while (basePos > -1 && depth-- > 0) {\n      basePos = subject.lastIndexOf(pathSeparator, basePos - 1);\n    }\n    basePathScore = basePos === -1 ? fullPathScore : extAdjust * computeScore(subject.slice(basePos + 1, end + 1), subject_lw.slice(basePos + 1, end + 1), preparedQuery);\n    alpha = 0.5 * tau_depth / (tau_depth + countDir(subject, end + 1, pathSeparator));\n    return alpha * basePathScore + (1 - alpha) * fullPathScore * scoreSize(0, file_coeff * fileLength);\n  };\n\n  exports.countDir = countDir = function(path, end, pathSeparator) {\n    var count, i;\n    if (end < 1) {\n      return 0;\n    }\n    count = 0;\n    i = -1;\n    while (++i < end && path[i] === pathSeparator) {\n      continue;\n    }\n    while (++i < end) {\n      if (path[i] === pathSeparator) {\n        count++;\n        while (++i < end && path[i] === pathSeparator) {\n          continue;\n        }\n      }\n    }\n    return count;\n  };\n\n  exports.getExtension = getExtension = function(str) {\n    var pos;\n    pos = str.lastIndexOf(\".\");\n    if (pos < 0) {\n      return \"\";\n    } else {\n      return str.substr(pos + 1);\n    }\n  };\n\n  getExtensionScore = function(candidate, ext, startPos, endPos, maxDepth) {\n    var m, matched, n, pos;\n    if (!ext.length) {\n      return 0;\n    }\n    pos = candidate.lastIndexOf(\".\", endPos);\n    if (!(pos > startPos)) {\n      return 0;\n    }\n    n = ext.length;\n    m = endPos - pos;\n    if (m < n) {\n      n = m;\n      m = ext.length;\n    }\n    pos++;\n    matched = -1;\n    while (++matched < n) {\n      if (candidate[pos + matched] !== ext[matched]) {\n        break;\n      }\n    }\n    if (matched === 0 && maxDepth > 0) {\n      return 0.9 * getExtensionScore(candidate, ext, startPos, pos - 2, maxDepth - 1);\n    }\n    return matched / m;\n  };\n\n}).call(this);\n","map":{"mappings":[{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/pathScorer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}}],"sources":{"node_modules/fuzzaldrin-plus/lib/pathScorer.js":"(function() {\n  var computeScore, countDir, file_coeff, getExtension, getExtensionScore, isMatch, scorePath, scoreSize, tau_depth, _ref;\n\n  _ref = require('./scorer'), isMatch = _ref.isMatch, computeScore = _ref.computeScore, scoreSize = _ref.scoreSize;\n\n  tau_depth = 20;\n\n  file_coeff = 2.5;\n\n  exports.score = function(string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    score = scorePath(string, string_lw, score, options);\n    return Math.ceil(score);\n  };\n\n  scorePath = function(subject, subject_lw, fullPathScore, options) {\n    var alpha, basePathScore, basePos, depth, end, extAdjust, fileLength, pathSeparator, preparedQuery, useExtensionBonus;\n    if (fullPathScore === 0) {\n      return 0;\n    }\n    preparedQuery = options.preparedQuery, useExtensionBonus = options.useExtensionBonus, pathSeparator = options.pathSeparator;\n    end = subject.length - 1;\n    while (subject[end] === pathSeparator) {\n      end--;\n    }\n    basePos = subject.lastIndexOf(pathSeparator, end);\n    fileLength = end - basePos;\n    extAdjust = 1.0;\n    if (useExtensionBonus) {\n      extAdjust += getExtensionScore(subject_lw, preparedQuery.ext, basePos, end, 2);\n      fullPathScore *= extAdjust;\n    }\n    if (basePos === -1) {\n      return fullPathScore;\n    }\n    depth = preparedQuery.depth;\n    while (basePos > -1 && depth-- > 0) {\n      basePos = subject.lastIndexOf(pathSeparator, basePos - 1);\n    }\n    basePathScore = basePos === -1 ? fullPathScore : extAdjust * computeScore(subject.slice(basePos + 1, end + 1), subject_lw.slice(basePos + 1, end + 1), preparedQuery);\n    alpha = 0.5 * tau_depth / (tau_depth + countDir(subject, end + 1, pathSeparator));\n    return alpha * basePathScore + (1 - alpha) * fullPathScore * scoreSize(0, file_coeff * fileLength);\n  };\n\n  exports.countDir = countDir = function(path, end, pathSeparator) {\n    var count, i;\n    if (end < 1) {\n      return 0;\n    }\n    count = 0;\n    i = -1;\n    while (++i < end && path[i] === pathSeparator) {\n      continue;\n    }\n    while (++i < end) {\n      if (path[i] === pathSeparator) {\n        count++;\n        while (++i < end && path[i] === pathSeparator) {\n          continue;\n        }\n      }\n    }\n    return count;\n  };\n\n  exports.getExtension = getExtension = function(str) {\n    var pos;\n    pos = str.lastIndexOf(\".\");\n    if (pos < 0) {\n      return \"\";\n    } else {\n      return str.substr(pos + 1);\n    }\n  };\n\n  getExtensionScore = function(candidate, ext, startPos, endPos, maxDepth) {\n    var m, matched, n, pos;\n    if (!ext.length) {\n      return 0;\n    }\n    pos = candidate.lastIndexOf(\".\", endPos);\n    if (!(pos > startPos)) {\n      return 0;\n    }\n    n = ext.length;\n    m = endPos - pos;\n    if (m < n) {\n      n = m;\n      m = ext.length;\n    }\n    pos++;\n    matched = -1;\n    while (++matched < n) {\n      if (candidate[pos + matched] !== ext[matched]) {\n        break;\n      }\n    }\n    if (matched === 0 && maxDepth > 0) {\n      return 0.9 * getExtensionScore(candidate, ext, startPos, pos - 2, maxDepth - 1);\n    }\n    return matched / m;\n  };\n\n}).call(this);\n"},"lineCount":111}},"hash":"4ce77472419050181975bf9403fd2a1d","cacheData":{"env":{}}}