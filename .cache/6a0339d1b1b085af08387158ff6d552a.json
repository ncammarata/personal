{"id":"node_modules/protobufjs/src/util.js","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/protobufjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534960276803},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"./util/minimal","loc":{"line":7,"column":36},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util/minimal.js"},{"name":"./roots","loc":{"line":9,"column":20},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/roots.js"},{"name":"@protobufjs/codegen","loc":{"line":14,"column":23},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util.js","resolved":"/Users/nick/projects/tomespark/node_modules/@protobufjs/codegen/index.js"},{"name":"@protobufjs/fetch","loc":{"line":15,"column":23},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util.js","resolved":"/Users/nick/projects/tomespark/node_modules/@protobufjs/fetch/index.js"},{"name":"@protobufjs/path","loc":{"line":16,"column":23},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util.js","resolved":"/Users/nick/projects/tomespark/node_modules/@protobufjs/path/index.js"},{"name":"./type","loc":{"line":135,"column":23},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js"},{"name":"./enum","loc":{"line":160,"column":23},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/enum.js"},{"name":"./root","loc":{"line":176,"column":72},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/root.js"}],"generated":{"js":"\"use strict\";\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = require(\"./util/minimal\");\r\n\r\nvar roots = require(\"./roots\");\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = require(\"@protobufjs/codegen\");\r\nutil.fetch   = require(\"@protobufjs/fetch\");\r\nutil.path    = require(\"@protobufjs/path\");\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = require(\"./type\");\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = require(\"./enum\");\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\r\n    }\r\n});\r\n","map":{"mappings":[{"source":"node_modules/protobufjs/src/util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/protobufjs/src/util.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}}],"sources":{"node_modules/protobufjs/src/util.js":"\"use strict\";\r\n\r\n/**\r\n * Various utility functions.\r\n * @namespace\r\n */\r\nvar util = module.exports = require(\"./util/minimal\");\r\n\r\nvar roots = require(\"./roots\");\r\n\r\nvar Type, // cyclic\r\n    Enum;\r\n\r\nutil.codegen = require(\"@protobufjs/codegen\");\r\nutil.fetch   = require(\"@protobufjs/fetch\");\r\nutil.path    = require(\"@protobufjs/path\");\r\n\r\n/**\r\n * Node's fs module if available.\r\n * @type {Object.<string,*>}\r\n */\r\nutil.fs = util.inquire(\"fs\");\r\n\r\n/**\r\n * Converts an object's values to an array.\r\n * @param {Object.<string,*>} object Object to convert\r\n * @returns {Array.<*>} Converted array\r\n */\r\nutil.toArray = function toArray(object) {\r\n    if (object) {\r\n        var keys  = Object.keys(object),\r\n            array = new Array(keys.length),\r\n            index = 0;\r\n        while (index < keys.length)\r\n            array[index] = object[keys[index++]];\r\n        return array;\r\n    }\r\n    return [];\r\n};\r\n\r\n/**\r\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\r\n * @param {Array.<*>} array Array to convert\r\n * @returns {Object.<string,*>} Converted object\r\n */\r\nutil.toObject = function toObject(array) {\r\n    var object = {},\r\n        index  = 0;\r\n    while (index < array.length) {\r\n        var key = array[index++],\r\n            val = array[index++];\r\n        if (val !== undefined)\r\n            object[key] = val;\r\n    }\r\n    return object;\r\n};\r\n\r\nvar safePropBackslashRe = /\\\\/g,\r\n    safePropQuoteRe     = /\"/g;\r\n\r\n/**\r\n * Tests whether the specified name is a reserved word in JS.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nutil.isReserved = function isReserved(name) {\r\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\r\n};\r\n\r\n/**\r\n * Returns a safe property accessor for the specified property name.\r\n * @param {string} prop Property name\r\n * @returns {string} Safe accessor\r\n */\r\nutil.safeProp = function safeProp(prop) {\r\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\r\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\r\n    return \".\" + prop;\r\n};\r\n\r\n/**\r\n * Converts the first character of a string to upper case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.ucFirst = function ucFirst(str) {\r\n    return str.charAt(0).toUpperCase() + str.substring(1);\r\n};\r\n\r\nvar camelCaseRe = /_([a-z])/g;\r\n\r\n/**\r\n * Converts a string to camel case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.camelCase = function camelCase(str) {\r\n    return str.substring(0, 1)\r\n         + str.substring(1)\r\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\r\n};\r\n\r\n/**\r\n * Compares reflected fields by id.\r\n * @param {Field} a First field\r\n * @param {Field} b Second field\r\n * @returns {number} Comparison value\r\n */\r\nutil.compareFieldsById = function compareFieldsById(a, b) {\r\n    return a.id - b.id;\r\n};\r\n\r\n/**\r\n * Decorator helper for types (TypeScript).\r\n * @param {Constructor<T>} ctor Constructor function\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {Type} Reflected type\r\n * @template T extends Message<T>\r\n * @property {Root} root Decorators root\r\n */\r\nutil.decorateType = function decorateType(ctor, typeName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (ctor.$type) {\r\n        if (typeName && ctor.$type.name !== typeName) {\r\n            util.decorateRoot.remove(ctor.$type);\r\n            ctor.$type.name = typeName;\r\n            util.decorateRoot.add(ctor.$type);\r\n        }\r\n        return ctor.$type;\r\n    }\r\n\r\n    /* istanbul ignore next */\r\n    if (!Type)\r\n        Type = require(\"./type\");\r\n\r\n    var type = new Type(typeName || ctor.name);\r\n    util.decorateRoot.add(type);\r\n    type.ctor = ctor; // sets up .encode, .decode etc.\r\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\r\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\r\n    return type;\r\n};\r\n\r\nvar decorateEnumIndex = 0;\r\n\r\n/**\r\n * Decorator helper for enums (TypeScript).\r\n * @param {Object} object Enum object\r\n * @returns {Enum} Reflected enum\r\n */\r\nutil.decorateEnum = function decorateEnum(object) {\r\n\r\n    /* istanbul ignore if */\r\n    if (object.$type)\r\n        return object.$type;\r\n\r\n    /* istanbul ignore next */\r\n    if (!Enum)\r\n        Enum = require(\"./enum\");\r\n\r\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\r\n    util.decorateRoot.add(enm);\r\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\r\n    return enm;\r\n};\r\n\r\n/**\r\n * Decorator root (TypeScript).\r\n * @name util.decorateRoot\r\n * @type {Root}\r\n * @readonly\r\n */\r\nObject.defineProperty(util, \"decorateRoot\", {\r\n    get: function() {\r\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\r\n    }\r\n});\r\n"},"lineCount":179}},"hash":"9a6f3de5d88966922258b433f850077d","cacheData":{"env":{}}}