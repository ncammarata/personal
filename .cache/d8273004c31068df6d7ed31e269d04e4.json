{"id":"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","dependencies":[{"name":"/Users/nick/.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/package.json","includedInParent":true,"mtime":1533685354652},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534960276803},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439}],"generated":{"js":"module.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n  return a\n};","map":{"mappings":[{"source":"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}}],"sources":{"../../.npm-global/lib/node_modules/parcel/node_modules/public-encrypt/xor.js":"module.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n  return a\n};"},"lineCount":8}},"hash":"3bfb093a20de1ea06f25b9725d291c0a","cacheData":{"env":{}}}