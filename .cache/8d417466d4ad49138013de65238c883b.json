{"id":"node_modules/jszip/lib/generate/ZipFileWorker.js","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/jszip/package.json","includedInParent":true,"mtime":1510180218000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1533838770287},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"../utils","loc":{"line":3,"column":20},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/generate/ZipFileWorker.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/utils.js"},{"name":"../stream/GenericWorker","loc":{"line":4,"column":28},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/generate/ZipFileWorker.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/stream/GenericWorker.js"},{"name":"../utf8","loc":{"line":5,"column":19},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/generate/ZipFileWorker.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/utf8.js"},{"name":"../crc32","loc":{"line":6,"column":20},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/generate/ZipFileWorker.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/crc32.js"},{"name":"../signature","loc":{"line":7,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/generate/ZipFileWorker.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/signature.js"}],"generated":{"js":"'use strict';\n\nvar utils = require('../utils');\nvar GenericWorker = require('../stream/GenericWorker');\nvar utf8 = require('../utf8');\nvar crc32 = require('../crc32');\nvar signature = require('../signature');\n\n/**\n * Transform an integer into a string in hexadecimal.\n * @private\n * @param {number} dec the number to convert.\n * @param {number} bytes the number of bytes to generate.\n * @returns {string} the result.\n */\nvar decToHex = function(dec, bytes) {\n    var hex = \"\", i;\n    for (i = 0; i < bytes; i++) {\n        hex += String.fromCharCode(dec & 0xff);\n        dec = dec >>> 8;\n    }\n    return hex;\n};\n\n/**\n * Generate the UNIX part of the external file attributes.\n * @param {Object} unixPermissions the unix permissions or null.\n * @param {Boolean} isDir true if the entry is a directory, false otherwise.\n * @return {Number} a 32 bit integer.\n *\n * adapted from http://unix.stackexchange.com/questions/14705/the-zip-formats-external-file-attribute :\n *\n * TTTTsstrwxrwxrwx0000000000ADVSHR\n * ^^^^____________________________ file type, see zipinfo.c (UNX_*)\n *     ^^^_________________________ setuid, setgid, sticky\n *        ^^^^^^^^^________________ permissions\n *                 ^^^^^^^^^^______ not used ?\n *                           ^^^^^^ DOS attribute bits : Archive, Directory, Volume label, System file, Hidden, Read only\n */\nvar generateUnixExternalFileAttr = function (unixPermissions, isDir) {\n\n    var result = unixPermissions;\n    if (!unixPermissions) {\n        // I can't use octal values in strict mode, hence the hexa.\n        //  040775 => 0x41fd\n        // 0100664 => 0x81b4\n        result = isDir ? 0x41fd : 0x81b4;\n    }\n    return (result & 0xFFFF) << 16;\n};\n\n/**\n * Generate the DOS part of the external file attributes.\n * @param {Object} dosPermissions the dos permissions or null.\n * @param {Boolean} isDir true if the entry is a directory, false otherwise.\n * @return {Number} a 32 bit integer.\n *\n * Bit 0     Read-Only\n * Bit 1     Hidden\n * Bit 2     System\n * Bit 3     Volume Label\n * Bit 4     Directory\n * Bit 5     Archive\n */\nvar generateDosExternalFileAttr = function (dosPermissions, isDir) {\n\n    // the dir flag is already set for compatibility\n    return (dosPermissions || 0)  & 0x3F;\n};\n\n/**\n * Generate the various parts used in the construction of the final zip file.\n * @param {Object} streamInfo the hash with informations about the compressed file.\n * @param {Boolean} streamedContent is the content streamed ?\n * @param {Boolean} streamingEnded is the stream finished ?\n * @param {number} offset the current offset from the start of the zip file.\n * @param {String} platform let's pretend we are this platform (change platform dependents fields)\n * @param {Function} encodeFileName the function to encode the file name / comment.\n * @return {Object} the zip parts.\n */\nvar generateZipParts = function(streamInfo, streamedContent, streamingEnded, offset, platform, encodeFileName) {\n    var file = streamInfo['file'],\n    compression = streamInfo['compression'],\n    useCustomEncoding = encodeFileName !== utf8.utf8encode,\n    encodedFileName = utils.transformTo(\"string\", encodeFileName(file.name)),\n    utfEncodedFileName = utils.transformTo(\"string\", utf8.utf8encode(file.name)),\n    comment = file.comment,\n    encodedComment = utils.transformTo(\"string\", encodeFileName(comment)),\n    utfEncodedComment = utils.transformTo(\"string\", utf8.utf8encode(comment)),\n    useUTF8ForFileName = utfEncodedFileName.length !== file.name.length,\n    useUTF8ForComment = utfEncodedComment.length !== comment.length,\n    dosTime,\n    dosDate,\n    extraFields = \"\",\n    unicodePathExtraField = \"\",\n    unicodeCommentExtraField = \"\",\n    dir = file.dir,\n    date = file.date;\n\n\n    var dataInfo = {\n        crc32 : 0,\n        compressedSize : 0,\n        uncompressedSize : 0\n    };\n\n    // if the content is streamed, the sizes/crc32 are only available AFTER\n    // the end of the stream.\n    if (!streamedContent || streamingEnded) {\n        dataInfo.crc32 = streamInfo['crc32'];\n        dataInfo.compressedSize = streamInfo['compressedSize'];\n        dataInfo.uncompressedSize = streamInfo['uncompressedSize'];\n    }\n\n    var bitflag = 0;\n    if (streamedContent) {\n        // Bit 3: the sizes/crc32 are set to zero in the local header.\n        // The correct values are put in the data descriptor immediately\n        // following the compressed data.\n        bitflag |= 0x0008;\n    }\n    if (!useCustomEncoding && (useUTF8ForFileName || useUTF8ForComment)) {\n        // Bit 11: Language encoding flag (EFS).\n        bitflag |= 0x0800;\n    }\n\n\n    var extFileAttr = 0;\n    var versionMadeBy = 0;\n    if (dir) {\n        // dos or unix, we set the dos dir flag\n        extFileAttr |= 0x00010;\n    }\n    if(platform === \"UNIX\") {\n        versionMadeBy = 0x031E; // UNIX, version 3.0\n        extFileAttr |= generateUnixExternalFileAttr(file.unixPermissions, dir);\n    } else { // DOS or other, fallback to DOS\n        versionMadeBy = 0x0014; // DOS, version 2.0\n        extFileAttr |= generateDosExternalFileAttr(file.dosPermissions, dir);\n    }\n\n    // date\n    // @see http://www.delorie.com/djgpp/doc/rbinter/it/52/13.html\n    // @see http://www.delorie.com/djgpp/doc/rbinter/it/65/16.html\n    // @see http://www.delorie.com/djgpp/doc/rbinter/it/66/16.html\n\n    dosTime = date.getUTCHours();\n    dosTime = dosTime << 6;\n    dosTime = dosTime | date.getUTCMinutes();\n    dosTime = dosTime << 5;\n    dosTime = dosTime | date.getUTCSeconds() / 2;\n\n    dosDate = date.getUTCFullYear() - 1980;\n    dosDate = dosDate << 4;\n    dosDate = dosDate | (date.getUTCMonth() + 1);\n    dosDate = dosDate << 5;\n    dosDate = dosDate | date.getUTCDate();\n\n    if (useUTF8ForFileName) {\n        // set the unicode path extra field. unzip needs at least one extra\n        // field to correctly handle unicode path, so using the path is as good\n        // as any other information. This could improve the situation with\n        // other archive managers too.\n        // This field is usually used without the utf8 flag, with a non\n        // unicode path in the header (winrar, winzip). This helps (a bit)\n        // with the messy Windows' default compressed folders feature but\n        // breaks on p7zip which doesn't seek the unicode path extra field.\n        // So for now, UTF-8 everywhere !\n        unicodePathExtraField =\n            // Version\n            decToHex(1, 1) +\n            // NameCRC32\n            decToHex(crc32(encodedFileName), 4) +\n            // UnicodeName\n            utfEncodedFileName;\n\n        extraFields +=\n            // Info-ZIP Unicode Path Extra Field\n            \"\\x75\\x70\" +\n            // size\n            decToHex(unicodePathExtraField.length, 2) +\n            // content\n            unicodePathExtraField;\n    }\n\n    if(useUTF8ForComment) {\n\n        unicodeCommentExtraField =\n            // Version\n            decToHex(1, 1) +\n            // CommentCRC32\n            decToHex(crc32(encodedComment), 4) +\n            // UnicodeName\n            utfEncodedComment;\n\n        extraFields +=\n            // Info-ZIP Unicode Path Extra Field\n            \"\\x75\\x63\" +\n            // size\n            decToHex(unicodeCommentExtraField.length, 2) +\n            // content\n            unicodeCommentExtraField;\n    }\n\n    var header = \"\";\n\n    // version needed to extract\n    header += \"\\x0A\\x00\";\n    // general purpose bit flag\n    header += decToHex(bitflag, 2);\n    // compression method\n    header += compression.magic;\n    // last mod file time\n    header += decToHex(dosTime, 2);\n    // last mod file date\n    header += decToHex(dosDate, 2);\n    // crc-32\n    header += decToHex(dataInfo.crc32, 4);\n    // compressed size\n    header += decToHex(dataInfo.compressedSize, 4);\n    // uncompressed size\n    header += decToHex(dataInfo.uncompressedSize, 4);\n    // file name length\n    header += decToHex(encodedFileName.length, 2);\n    // extra field length\n    header += decToHex(extraFields.length, 2);\n\n\n    var fileRecord = signature.LOCAL_FILE_HEADER + header + encodedFileName + extraFields;\n\n    var dirRecord = signature.CENTRAL_FILE_HEADER +\n        // version made by (00: DOS)\n        decToHex(versionMadeBy, 2) +\n        // file header (common to file and central directory)\n        header +\n        // file comment length\n        decToHex(encodedComment.length, 2) +\n        // disk number start\n        \"\\x00\\x00\" +\n        // internal file attributes TODO\n        \"\\x00\\x00\" +\n        // external file attributes\n        decToHex(extFileAttr, 4) +\n        // relative offset of local header\n        decToHex(offset, 4) +\n        // file name\n        encodedFileName +\n        // extra field\n        extraFields +\n        // file comment\n        encodedComment;\n\n    return {\n        fileRecord: fileRecord,\n        dirRecord: dirRecord\n    };\n};\n\n/**\n * Generate the EOCD record.\n * @param {Number} entriesCount the number of entries in the zip file.\n * @param {Number} centralDirLength the length (in bytes) of the central dir.\n * @param {Number} localDirLength the length (in bytes) of the local dir.\n * @param {String} comment the zip file comment as a binary string.\n * @param {Function} encodeFileName the function to encode the comment.\n * @return {String} the EOCD record.\n */\nvar generateCentralDirectoryEnd = function (entriesCount, centralDirLength, localDirLength, comment, encodeFileName) {\n    var dirEnd = \"\";\n    var encodedComment = utils.transformTo(\"string\", encodeFileName(comment));\n\n    // end of central dir signature\n    dirEnd = signature.CENTRAL_DIRECTORY_END +\n        // number of this disk\n        \"\\x00\\x00\" +\n        // number of the disk with the start of the central directory\n        \"\\x00\\x00\" +\n        // total number of entries in the central directory on this disk\n        decToHex(entriesCount, 2) +\n        // total number of entries in the central directory\n        decToHex(entriesCount, 2) +\n        // size of the central directory   4 bytes\n        decToHex(centralDirLength, 4) +\n        // offset of start of central directory with respect to the starting disk number\n        decToHex(localDirLength, 4) +\n        // .ZIP file comment length\n        decToHex(encodedComment.length, 2) +\n        // .ZIP file comment\n        encodedComment;\n\n    return dirEnd;\n};\n\n/**\n * Generate data descriptors for a file entry.\n * @param {Object} streamInfo the hash generated by a worker, containing informations\n * on the file entry.\n * @return {String} the data descriptors.\n */\nvar generateDataDescriptors = function (streamInfo) {\n    var descriptor = \"\";\n    descriptor = signature.DATA_DESCRIPTOR +\n        // crc-32                          4 bytes\n        decToHex(streamInfo['crc32'], 4) +\n        // compressed size                 4 bytes\n        decToHex(streamInfo['compressedSize'], 4) +\n        // uncompressed size               4 bytes\n        decToHex(streamInfo['uncompressedSize'], 4);\n\n    return descriptor;\n};\n\n\n/**\n * A worker to concatenate other workers to create a zip file.\n * @param {Boolean} streamFiles `true` to stream the content of the files,\n * `false` to accumulate it.\n * @param {String} comment the comment to use.\n * @param {String} platform the platform to use, \"UNIX\" or \"DOS\".\n * @param {Function} encodeFileName the function to encode file names and comments.\n */\nfunction ZipFileWorker(streamFiles, comment, platform, encodeFileName) {\n    GenericWorker.call(this, \"ZipFileWorker\");\n    // The number of bytes written so far. This doesn't count accumulated chunks.\n    this.bytesWritten = 0;\n    // The comment of the zip file\n    this.zipComment = comment;\n    // The platform \"generating\" the zip file.\n    this.zipPlatform = platform;\n    // the function to encode file names and comments.\n    this.encodeFileName = encodeFileName;\n    // Should we stream the content of the files ?\n    this.streamFiles = streamFiles;\n    // If `streamFiles` is false, we will need to accumulate the content of the\n    // files to calculate sizes / crc32 (and write them *before* the content).\n    // This boolean indicates if we are accumulating chunks (it will change a lot\n    // during the lifetime of this worker).\n    this.accumulate = false;\n    // The buffer receiving chunks when accumulating content.\n    this.contentBuffer = [];\n    // The list of generated directory records.\n    this.dirRecords = [];\n    // The offset (in bytes) from the beginning of the zip file for the current source.\n    this.currentSourceOffset = 0;\n    // The total number of entries in this zip file.\n    this.entriesCount = 0;\n    // the name of the file currently being added, null when handling the end of the zip file.\n    // Used for the emited metadata.\n    this.currentFile = null;\n\n\n\n    this._sources = [];\n}\nutils.inherits(ZipFileWorker, GenericWorker);\n\n/**\n * @see GenericWorker.push\n */\nZipFileWorker.prototype.push = function (chunk) {\n\n    var currentFilePercent = chunk.meta.percent || 0;\n    var entriesCount = this.entriesCount;\n    var remainingFiles = this._sources.length;\n\n    if(this.accumulate) {\n        this.contentBuffer.push(chunk);\n    } else {\n        this.bytesWritten += chunk.data.length;\n\n        GenericWorker.prototype.push.call(this, {\n            data : chunk.data,\n            meta : {\n                currentFile : this.currentFile,\n                percent : entriesCount ? (currentFilePercent + 100 * (entriesCount - remainingFiles - 1)) / entriesCount : 100\n            }\n        });\n    }\n};\n\n/**\n * The worker started a new source (an other worker).\n * @param {Object} streamInfo the streamInfo object from the new source.\n */\nZipFileWorker.prototype.openedSource = function (streamInfo) {\n    this.currentSourceOffset = this.bytesWritten;\n    this.currentFile = streamInfo['file'].name;\n\n    var streamedContent = this.streamFiles && !streamInfo['file'].dir;\n\n    // don't stream folders (because they don't have any content)\n    if(streamedContent) {\n        var record = generateZipParts(streamInfo, streamedContent, false, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);\n        this.push({\n            data : record.fileRecord,\n            meta : {percent:0}\n        });\n    } else {\n        // we need to wait for the whole file before pushing anything\n        this.accumulate = true;\n    }\n};\n\n/**\n * The worker finished a source (an other worker).\n * @param {Object} streamInfo the streamInfo object from the finished source.\n */\nZipFileWorker.prototype.closedSource = function (streamInfo) {\n    this.accumulate = false;\n    var streamedContent = this.streamFiles && !streamInfo['file'].dir;\n    var record = generateZipParts(streamInfo, streamedContent, true, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);\n\n    this.dirRecords.push(record.dirRecord);\n    if(streamedContent) {\n        // after the streamed file, we put data descriptors\n        this.push({\n            data : generateDataDescriptors(streamInfo),\n            meta : {percent:100}\n        });\n    } else {\n        // the content wasn't streamed, we need to push everything now\n        // first the file record, then the content\n        this.push({\n            data : record.fileRecord,\n            meta : {percent:0}\n        });\n        while(this.contentBuffer.length) {\n            this.push(this.contentBuffer.shift());\n        }\n    }\n    this.currentFile = null;\n};\n\n/**\n * @see GenericWorker.flush\n */\nZipFileWorker.prototype.flush = function () {\n\n    var localDirLength = this.bytesWritten;\n    for(var i = 0; i < this.dirRecords.length; i++) {\n        this.push({\n            data : this.dirRecords[i],\n            meta : {percent:100}\n        });\n    }\n    var centralDirLength = this.bytesWritten - localDirLength;\n\n    var dirEnd = generateCentralDirectoryEnd(this.dirRecords.length, centralDirLength, localDirLength, this.zipComment, this.encodeFileName);\n\n    this.push({\n        data : dirEnd,\n        meta : {percent:100}\n    });\n};\n\n/**\n * Prepare the next source to be read.\n */\nZipFileWorker.prototype.prepareNextSource = function () {\n    this.previous = this._sources.shift();\n    this.openedSource(this.previous.streamInfo);\n    if (this.isPaused) {\n        this.previous.pause();\n    } else {\n        this.previous.resume();\n    }\n};\n\n/**\n * @see GenericWorker.registerPrevious\n */\nZipFileWorker.prototype.registerPrevious = function (previous) {\n    this._sources.push(previous);\n    var self = this;\n\n    previous.on('data', function (chunk) {\n        self.processChunk(chunk);\n    });\n    previous.on('end', function () {\n        self.closedSource(self.previous.streamInfo);\n        if(self._sources.length) {\n            self.prepareNextSource();\n        } else {\n            self.end();\n        }\n    });\n    previous.on('error', function (e) {\n        self.error(e);\n    });\n    return this;\n};\n\n/**\n * @see GenericWorker.resume\n */\nZipFileWorker.prototype.resume = function () {\n    if(!GenericWorker.prototype.resume.call(this)) {\n        return false;\n    }\n\n    if (!this.previous && this._sources.length) {\n        this.prepareNextSource();\n        return true;\n    }\n    if (!this.previous && !this._sources.length && !this.generatedError) {\n        this.end();\n        return true;\n    }\n};\n\n/**\n * @see GenericWorker.error\n */\nZipFileWorker.prototype.error = function (e) {\n    var sources = this._sources;\n    if(!GenericWorker.prototype.error.call(this, e)) {\n        return false;\n    }\n    for(var i = 0; i < sources.length; i++) {\n        try {\n            sources[i].error(e);\n        } catch(e) {\n            // the `error` exploded, nothing to do\n        }\n    }\n    return true;\n};\n\n/**\n * @see GenericWorker.lock\n */\nZipFileWorker.prototype.lock = function () {\n    GenericWorker.prototype.lock.call(this);\n    var sources = this._sources;\n    for(var i = 0; i < sources.length; i++) {\n        sources[i].lock();\n    }\n};\n\nmodule.exports = ZipFileWorker;\n","map":{"mappings":[{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/jszip/lib/generate/ZipFileWorker.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}}],"sources":{"node_modules/jszip/lib/generate/ZipFileWorker.js":"'use strict';\n\nvar utils = require('../utils');\nvar GenericWorker = require('../stream/GenericWorker');\nvar utf8 = require('../utf8');\nvar crc32 = require('../crc32');\nvar signature = require('../signature');\n\n/**\n * Transform an integer into a string in hexadecimal.\n * @private\n * @param {number} dec the number to convert.\n * @param {number} bytes the number of bytes to generate.\n * @returns {string} the result.\n */\nvar decToHex = function(dec, bytes) {\n    var hex = \"\", i;\n    for (i = 0; i < bytes; i++) {\n        hex += String.fromCharCode(dec & 0xff);\n        dec = dec >>> 8;\n    }\n    return hex;\n};\n\n/**\n * Generate the UNIX part of the external file attributes.\n * @param {Object} unixPermissions the unix permissions or null.\n * @param {Boolean} isDir true if the entry is a directory, false otherwise.\n * @return {Number} a 32 bit integer.\n *\n * adapted from http://unix.stackexchange.com/questions/14705/the-zip-formats-external-file-attribute :\n *\n * TTTTsstrwxrwxrwx0000000000ADVSHR\n * ^^^^____________________________ file type, see zipinfo.c (UNX_*)\n *     ^^^_________________________ setuid, setgid, sticky\n *        ^^^^^^^^^________________ permissions\n *                 ^^^^^^^^^^______ not used ?\n *                           ^^^^^^ DOS attribute bits : Archive, Directory, Volume label, System file, Hidden, Read only\n */\nvar generateUnixExternalFileAttr = function (unixPermissions, isDir) {\n\n    var result = unixPermissions;\n    if (!unixPermissions) {\n        // I can't use octal values in strict mode, hence the hexa.\n        //  040775 => 0x41fd\n        // 0100664 => 0x81b4\n        result = isDir ? 0x41fd : 0x81b4;\n    }\n    return (result & 0xFFFF) << 16;\n};\n\n/**\n * Generate the DOS part of the external file attributes.\n * @param {Object} dosPermissions the dos permissions or null.\n * @param {Boolean} isDir true if the entry is a directory, false otherwise.\n * @return {Number} a 32 bit integer.\n *\n * Bit 0     Read-Only\n * Bit 1     Hidden\n * Bit 2     System\n * Bit 3     Volume Label\n * Bit 4     Directory\n * Bit 5     Archive\n */\nvar generateDosExternalFileAttr = function (dosPermissions, isDir) {\n\n    // the dir flag is already set for compatibility\n    return (dosPermissions || 0)  & 0x3F;\n};\n\n/**\n * Generate the various parts used in the construction of the final zip file.\n * @param {Object} streamInfo the hash with informations about the compressed file.\n * @param {Boolean} streamedContent is the content streamed ?\n * @param {Boolean} streamingEnded is the stream finished ?\n * @param {number} offset the current offset from the start of the zip file.\n * @param {String} platform let's pretend we are this platform (change platform dependents fields)\n * @param {Function} encodeFileName the function to encode the file name / comment.\n * @return {Object} the zip parts.\n */\nvar generateZipParts = function(streamInfo, streamedContent, streamingEnded, offset, platform, encodeFileName) {\n    var file = streamInfo['file'],\n    compression = streamInfo['compression'],\n    useCustomEncoding = encodeFileName !== utf8.utf8encode,\n    encodedFileName = utils.transformTo(\"string\", encodeFileName(file.name)),\n    utfEncodedFileName = utils.transformTo(\"string\", utf8.utf8encode(file.name)),\n    comment = file.comment,\n    encodedComment = utils.transformTo(\"string\", encodeFileName(comment)),\n    utfEncodedComment = utils.transformTo(\"string\", utf8.utf8encode(comment)),\n    useUTF8ForFileName = utfEncodedFileName.length !== file.name.length,\n    useUTF8ForComment = utfEncodedComment.length !== comment.length,\n    dosTime,\n    dosDate,\n    extraFields = \"\",\n    unicodePathExtraField = \"\",\n    unicodeCommentExtraField = \"\",\n    dir = file.dir,\n    date = file.date;\n\n\n    var dataInfo = {\n        crc32 : 0,\n        compressedSize : 0,\n        uncompressedSize : 0\n    };\n\n    // if the content is streamed, the sizes/crc32 are only available AFTER\n    // the end of the stream.\n    if (!streamedContent || streamingEnded) {\n        dataInfo.crc32 = streamInfo['crc32'];\n        dataInfo.compressedSize = streamInfo['compressedSize'];\n        dataInfo.uncompressedSize = streamInfo['uncompressedSize'];\n    }\n\n    var bitflag = 0;\n    if (streamedContent) {\n        // Bit 3: the sizes/crc32 are set to zero in the local header.\n        // The correct values are put in the data descriptor immediately\n        // following the compressed data.\n        bitflag |= 0x0008;\n    }\n    if (!useCustomEncoding && (useUTF8ForFileName || useUTF8ForComment)) {\n        // Bit 11: Language encoding flag (EFS).\n        bitflag |= 0x0800;\n    }\n\n\n    var extFileAttr = 0;\n    var versionMadeBy = 0;\n    if (dir) {\n        // dos or unix, we set the dos dir flag\n        extFileAttr |= 0x00010;\n    }\n    if(platform === \"UNIX\") {\n        versionMadeBy = 0x031E; // UNIX, version 3.0\n        extFileAttr |= generateUnixExternalFileAttr(file.unixPermissions, dir);\n    } else { // DOS or other, fallback to DOS\n        versionMadeBy = 0x0014; // DOS, version 2.0\n        extFileAttr |= generateDosExternalFileAttr(file.dosPermissions, dir);\n    }\n\n    // date\n    // @see http://www.delorie.com/djgpp/doc/rbinter/it/52/13.html\n    // @see http://www.delorie.com/djgpp/doc/rbinter/it/65/16.html\n    // @see http://www.delorie.com/djgpp/doc/rbinter/it/66/16.html\n\n    dosTime = date.getUTCHours();\n    dosTime = dosTime << 6;\n    dosTime = dosTime | date.getUTCMinutes();\n    dosTime = dosTime << 5;\n    dosTime = dosTime | date.getUTCSeconds() / 2;\n\n    dosDate = date.getUTCFullYear() - 1980;\n    dosDate = dosDate << 4;\n    dosDate = dosDate | (date.getUTCMonth() + 1);\n    dosDate = dosDate << 5;\n    dosDate = dosDate | date.getUTCDate();\n\n    if (useUTF8ForFileName) {\n        // set the unicode path extra field. unzip needs at least one extra\n        // field to correctly handle unicode path, so using the path is as good\n        // as any other information. This could improve the situation with\n        // other archive managers too.\n        // This field is usually used without the utf8 flag, with a non\n        // unicode path in the header (winrar, winzip). This helps (a bit)\n        // with the messy Windows' default compressed folders feature but\n        // breaks on p7zip which doesn't seek the unicode path extra field.\n        // So for now, UTF-8 everywhere !\n        unicodePathExtraField =\n            // Version\n            decToHex(1, 1) +\n            // NameCRC32\n            decToHex(crc32(encodedFileName), 4) +\n            // UnicodeName\n            utfEncodedFileName;\n\n        extraFields +=\n            // Info-ZIP Unicode Path Extra Field\n            \"\\x75\\x70\" +\n            // size\n            decToHex(unicodePathExtraField.length, 2) +\n            // content\n            unicodePathExtraField;\n    }\n\n    if(useUTF8ForComment) {\n\n        unicodeCommentExtraField =\n            // Version\n            decToHex(1, 1) +\n            // CommentCRC32\n            decToHex(crc32(encodedComment), 4) +\n            // UnicodeName\n            utfEncodedComment;\n\n        extraFields +=\n            // Info-ZIP Unicode Path Extra Field\n            \"\\x75\\x63\" +\n            // size\n            decToHex(unicodeCommentExtraField.length, 2) +\n            // content\n            unicodeCommentExtraField;\n    }\n\n    var header = \"\";\n\n    // version needed to extract\n    header += \"\\x0A\\x00\";\n    // general purpose bit flag\n    header += decToHex(bitflag, 2);\n    // compression method\n    header += compression.magic;\n    // last mod file time\n    header += decToHex(dosTime, 2);\n    // last mod file date\n    header += decToHex(dosDate, 2);\n    // crc-32\n    header += decToHex(dataInfo.crc32, 4);\n    // compressed size\n    header += decToHex(dataInfo.compressedSize, 4);\n    // uncompressed size\n    header += decToHex(dataInfo.uncompressedSize, 4);\n    // file name length\n    header += decToHex(encodedFileName.length, 2);\n    // extra field length\n    header += decToHex(extraFields.length, 2);\n\n\n    var fileRecord = signature.LOCAL_FILE_HEADER + header + encodedFileName + extraFields;\n\n    var dirRecord = signature.CENTRAL_FILE_HEADER +\n        // version made by (00: DOS)\n        decToHex(versionMadeBy, 2) +\n        // file header (common to file and central directory)\n        header +\n        // file comment length\n        decToHex(encodedComment.length, 2) +\n        // disk number start\n        \"\\x00\\x00\" +\n        // internal file attributes TODO\n        \"\\x00\\x00\" +\n        // external file attributes\n        decToHex(extFileAttr, 4) +\n        // relative offset of local header\n        decToHex(offset, 4) +\n        // file name\n        encodedFileName +\n        // extra field\n        extraFields +\n        // file comment\n        encodedComment;\n\n    return {\n        fileRecord: fileRecord,\n        dirRecord: dirRecord\n    };\n};\n\n/**\n * Generate the EOCD record.\n * @param {Number} entriesCount the number of entries in the zip file.\n * @param {Number} centralDirLength the length (in bytes) of the central dir.\n * @param {Number} localDirLength the length (in bytes) of the local dir.\n * @param {String} comment the zip file comment as a binary string.\n * @param {Function} encodeFileName the function to encode the comment.\n * @return {String} the EOCD record.\n */\nvar generateCentralDirectoryEnd = function (entriesCount, centralDirLength, localDirLength, comment, encodeFileName) {\n    var dirEnd = \"\";\n    var encodedComment = utils.transformTo(\"string\", encodeFileName(comment));\n\n    // end of central dir signature\n    dirEnd = signature.CENTRAL_DIRECTORY_END +\n        // number of this disk\n        \"\\x00\\x00\" +\n        // number of the disk with the start of the central directory\n        \"\\x00\\x00\" +\n        // total number of entries in the central directory on this disk\n        decToHex(entriesCount, 2) +\n        // total number of entries in the central directory\n        decToHex(entriesCount, 2) +\n        // size of the central directory   4 bytes\n        decToHex(centralDirLength, 4) +\n        // offset of start of central directory with respect to the starting disk number\n        decToHex(localDirLength, 4) +\n        // .ZIP file comment length\n        decToHex(encodedComment.length, 2) +\n        // .ZIP file comment\n        encodedComment;\n\n    return dirEnd;\n};\n\n/**\n * Generate data descriptors for a file entry.\n * @param {Object} streamInfo the hash generated by a worker, containing informations\n * on the file entry.\n * @return {String} the data descriptors.\n */\nvar generateDataDescriptors = function (streamInfo) {\n    var descriptor = \"\";\n    descriptor = signature.DATA_DESCRIPTOR +\n        // crc-32                          4 bytes\n        decToHex(streamInfo['crc32'], 4) +\n        // compressed size                 4 bytes\n        decToHex(streamInfo['compressedSize'], 4) +\n        // uncompressed size               4 bytes\n        decToHex(streamInfo['uncompressedSize'], 4);\n\n    return descriptor;\n};\n\n\n/**\n * A worker to concatenate other workers to create a zip file.\n * @param {Boolean} streamFiles `true` to stream the content of the files,\n * `false` to accumulate it.\n * @param {String} comment the comment to use.\n * @param {String} platform the platform to use, \"UNIX\" or \"DOS\".\n * @param {Function} encodeFileName the function to encode file names and comments.\n */\nfunction ZipFileWorker(streamFiles, comment, platform, encodeFileName) {\n    GenericWorker.call(this, \"ZipFileWorker\");\n    // The number of bytes written so far. This doesn't count accumulated chunks.\n    this.bytesWritten = 0;\n    // The comment of the zip file\n    this.zipComment = comment;\n    // The platform \"generating\" the zip file.\n    this.zipPlatform = platform;\n    // the function to encode file names and comments.\n    this.encodeFileName = encodeFileName;\n    // Should we stream the content of the files ?\n    this.streamFiles = streamFiles;\n    // If `streamFiles` is false, we will need to accumulate the content of the\n    // files to calculate sizes / crc32 (and write them *before* the content).\n    // This boolean indicates if we are accumulating chunks (it will change a lot\n    // during the lifetime of this worker).\n    this.accumulate = false;\n    // The buffer receiving chunks when accumulating content.\n    this.contentBuffer = [];\n    // The list of generated directory records.\n    this.dirRecords = [];\n    // The offset (in bytes) from the beginning of the zip file for the current source.\n    this.currentSourceOffset = 0;\n    // The total number of entries in this zip file.\n    this.entriesCount = 0;\n    // the name of the file currently being added, null when handling the end of the zip file.\n    // Used for the emited metadata.\n    this.currentFile = null;\n\n\n\n    this._sources = [];\n}\nutils.inherits(ZipFileWorker, GenericWorker);\n\n/**\n * @see GenericWorker.push\n */\nZipFileWorker.prototype.push = function (chunk) {\n\n    var currentFilePercent = chunk.meta.percent || 0;\n    var entriesCount = this.entriesCount;\n    var remainingFiles = this._sources.length;\n\n    if(this.accumulate) {\n        this.contentBuffer.push(chunk);\n    } else {\n        this.bytesWritten += chunk.data.length;\n\n        GenericWorker.prototype.push.call(this, {\n            data : chunk.data,\n            meta : {\n                currentFile : this.currentFile,\n                percent : entriesCount ? (currentFilePercent + 100 * (entriesCount - remainingFiles - 1)) / entriesCount : 100\n            }\n        });\n    }\n};\n\n/**\n * The worker started a new source (an other worker).\n * @param {Object} streamInfo the streamInfo object from the new source.\n */\nZipFileWorker.prototype.openedSource = function (streamInfo) {\n    this.currentSourceOffset = this.bytesWritten;\n    this.currentFile = streamInfo['file'].name;\n\n    var streamedContent = this.streamFiles && !streamInfo['file'].dir;\n\n    // don't stream folders (because they don't have any content)\n    if(streamedContent) {\n        var record = generateZipParts(streamInfo, streamedContent, false, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);\n        this.push({\n            data : record.fileRecord,\n            meta : {percent:0}\n        });\n    } else {\n        // we need to wait for the whole file before pushing anything\n        this.accumulate = true;\n    }\n};\n\n/**\n * The worker finished a source (an other worker).\n * @param {Object} streamInfo the streamInfo object from the finished source.\n */\nZipFileWorker.prototype.closedSource = function (streamInfo) {\n    this.accumulate = false;\n    var streamedContent = this.streamFiles && !streamInfo['file'].dir;\n    var record = generateZipParts(streamInfo, streamedContent, true, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);\n\n    this.dirRecords.push(record.dirRecord);\n    if(streamedContent) {\n        // after the streamed file, we put data descriptors\n        this.push({\n            data : generateDataDescriptors(streamInfo),\n            meta : {percent:100}\n        });\n    } else {\n        // the content wasn't streamed, we need to push everything now\n        // first the file record, then the content\n        this.push({\n            data : record.fileRecord,\n            meta : {percent:0}\n        });\n        while(this.contentBuffer.length) {\n            this.push(this.contentBuffer.shift());\n        }\n    }\n    this.currentFile = null;\n};\n\n/**\n * @see GenericWorker.flush\n */\nZipFileWorker.prototype.flush = function () {\n\n    var localDirLength = this.bytesWritten;\n    for(var i = 0; i < this.dirRecords.length; i++) {\n        this.push({\n            data : this.dirRecords[i],\n            meta : {percent:100}\n        });\n    }\n    var centralDirLength = this.bytesWritten - localDirLength;\n\n    var dirEnd = generateCentralDirectoryEnd(this.dirRecords.length, centralDirLength, localDirLength, this.zipComment, this.encodeFileName);\n\n    this.push({\n        data : dirEnd,\n        meta : {percent:100}\n    });\n};\n\n/**\n * Prepare the next source to be read.\n */\nZipFileWorker.prototype.prepareNextSource = function () {\n    this.previous = this._sources.shift();\n    this.openedSource(this.previous.streamInfo);\n    if (this.isPaused) {\n        this.previous.pause();\n    } else {\n        this.previous.resume();\n    }\n};\n\n/**\n * @see GenericWorker.registerPrevious\n */\nZipFileWorker.prototype.registerPrevious = function (previous) {\n    this._sources.push(previous);\n    var self = this;\n\n    previous.on('data', function (chunk) {\n        self.processChunk(chunk);\n    });\n    previous.on('end', function () {\n        self.closedSource(self.previous.streamInfo);\n        if(self._sources.length) {\n            self.prepareNextSource();\n        } else {\n            self.end();\n        }\n    });\n    previous.on('error', function (e) {\n        self.error(e);\n    });\n    return this;\n};\n\n/**\n * @see GenericWorker.resume\n */\nZipFileWorker.prototype.resume = function () {\n    if(!GenericWorker.prototype.resume.call(this)) {\n        return false;\n    }\n\n    if (!this.previous && this._sources.length) {\n        this.prepareNextSource();\n        return true;\n    }\n    if (!this.previous && !this._sources.length && !this.generatedError) {\n        this.end();\n        return true;\n    }\n};\n\n/**\n * @see GenericWorker.error\n */\nZipFileWorker.prototype.error = function (e) {\n    var sources = this._sources;\n    if(!GenericWorker.prototype.error.call(this, e)) {\n        return false;\n    }\n    for(var i = 0; i < sources.length; i++) {\n        try {\n            sources[i].error(e);\n        } catch(e) {\n            // the `error` exploded, nothing to do\n        }\n    }\n    return true;\n};\n\n/**\n * @see GenericWorker.lock\n */\nZipFileWorker.prototype.lock = function () {\n    GenericWorker.prototype.lock.call(this);\n    var sources = this._sources;\n    for(var i = 0; i < sources.length; i++) {\n        sources[i].lock();\n    }\n};\n\nmodule.exports = ZipFileWorker;\n"},"lineCount":541}},"hash":"35d21f358941e4e22a02759802368cc1","cacheData":{"env":{}}}