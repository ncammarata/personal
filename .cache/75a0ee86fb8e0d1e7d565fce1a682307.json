{"id":"node_modules/grpc/src/common.js","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/grpc/package.json","includedInParent":true,"mtime":499162500000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534960276803},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"lodash","loc":{"line":21,"column":16},"parent":"/Users/nick/projects/tomespark/node_modules/grpc/src/common.js","resolved":"/Users/nick/projects/tomespark/node_modules/lodash/lodash.js"},{"name":"./constants","loc":{"line":22,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/grpc/src/common.js","resolved":"/Users/nick/projects/tomespark/node_modules/grpc/src/constants.js"}],"generated":{"js":"/**\n * @license\n * Copyright 2015 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar constants = require('./constants');\n\n/**\n * Wrap a function to pass null-like values through without calling it. If no\n * function is given, just uses the identity.\n * @private\n * @param {?function} func The function to wrap\n * @return {function} The wrapped function\n */\nexports.wrapIgnoreNull = function wrapIgnoreNull(func) {\n  if (!func) {\n    return _.identity;\n  }\n  return function (arg) {\n    if (arg === null || arg === undefined) {\n      return null;\n    }\n    return func(arg);\n  };\n};\n\n/**\n * The logger object for the gRPC module. Defaults to console.\n * @private\n */\nexports.logger = console;\n\n/**\n * The current logging verbosity. 0 corresponds to logging everything\n * @private\n */\nexports.logVerbosity = 0;\n\n/**\n * Log a message if the severity is at least as high as the current verbosity\n * @private\n * @param {Number} severity A value of the grpc.logVerbosity map\n * @param {String} message The message to log\n */\nexports.log = function log(severity, message) {\n  if (severity >= exports.logVerbosity) {\n    exports.logger.error(message);\n  }\n};\n\n/**\n * Default options for loading proto files into gRPC\n * @alias grpc~defaultLoadOptions\n */\nexports.defaultGrpcOptions = {\n  convertFieldsToCamelCase: false,\n  binaryAsBase64: false,\n  longsAsStrings: true,\n  enumsAsStrings: true,\n  deprecatedArgumentOrder: false\n};\n\n/**\n * Create an Error object from a status object\n * @param {grpc~StatusObject} status The status object\n * @return {Error} The resulting Error\n */\nexports.createStatusError = function (status) {\n  let statusName = _.invert(constants.status)[status.code];\n  let message = status.code + ' ' + statusName + ': ' + status.details;\n  let error = new Error(message);\n  error.code = status.code;\n  error.metadata = status.metadata;\n  error.details = status.details;\n  return error;\n};\n\n/**\n * Get a method's type from its definition\n * @param {grpc~MethodDefinition} method_definition\n * @return {number}\n */\nexports.getMethodType = function (method_definition) {\n  if (method_definition.requestStream) {\n    if (method_definition.responseStream) {\n      return constants.methodTypes.BIDI_STREAMING;\n    } else {\n      return constants.methodTypes.CLIENT_STREAMING;\n    }\n  } else {\n    if (method_definition.responseStream) {\n      return constants.methodTypes.SERVER_STREAMING;\n    } else {\n      return constants.methodTypes.UNARY;\n    }\n  }\n};\n\n// JSDoc definitions that are used in multiple other modules\n\n/**\n * Represents the status of a completed request. If `code` is\n * {@link grpc.status}.OK, then the request has completed successfully.\n * Otherwise, the request has failed, `details` will contain a description of\n * the error. Either way, `metadata` contains the trailing response metadata\n * sent by the server when it finishes processing the call.\n * @typedef {object} grpc~StatusObject\n * @property {number} code The error code, a key of {@link grpc.status}\n * @property {string} details Human-readable description of the status\n * @property {grpc.Metadata} metadata Trailing metadata sent with the status,\n *     if applicable\n */\n\n/**\n * Describes how a request has failed. The member `message` will be the same as\n * `details` in {@link grpc~StatusObject}, and `code` and `metadata` are the\n * same as in that object.\n * @typedef {Error} grpc~ServiceError\n * @property {number} code The error code, a key of {@link grpc.status} that is\n *     not `grpc.status.OK`\n * @property {grpc.Metadata} metadata Trailing metadata sent with the status,\n *     if applicable\n */\n\n/**\n * The EventEmitter class in the event standard module\n * @external EventEmitter\n * @see https://nodejs.org/api/events.html#events_class_eventemitter\n */\n\n/**\n * The Readable class in the stream standard module\n * @external Readable\n * @see https://nodejs.org/api/stream.html#stream_readable_streams\n */\n\n/**\n * The Writable class in the stream standard module\n * @external Writable\n * @see https://nodejs.org/api/stream.html#stream_writable_streams\n */\n\n/**\n * The Duplex class in the stream standard module\n * @external Duplex\n * @see https://nodejs.org/api/stream.html#stream_class_stream_duplex\n */\n\n/**\n * A serialization function\n * @callback grpc~serialize\n * @param {*} value The value to serialize\n * @return {Buffer} The value serialized as a byte sequence\n */\n\n/**\n * A deserialization function\n * @callback grpc~deserialize\n * @param {Buffer} data The byte sequence to deserialize\n * @return {*} The data deserialized as a value\n */\n\n/**\n * The deadline of an operation. If it is a date, the deadline is reached at\n * the date and time specified. If it is a finite number, it is treated as\n * a number of milliseconds since the Unix Epoch. If it is Infinity, the\n * deadline will never be reached. If it is -Infinity, the deadline has already\n * passed.\n * @typedef {(number|Date)} grpc~Deadline\n */\n\n/**\n * An object that completely defines a service method signature.\n * @typedef {Object} grpc~MethodDefinition\n * @property {string} path The method's URL path\n * @property {boolean} requestStream Indicates whether the method accepts\n *     a stream of requests\n * @property {boolean} responseStream Indicates whether the method returns\n *     a stream of responses\n * @property {grpc~serialize} requestSerialize Serialization\n *     function for request values\n * @property {grpc~serialize} responseSerialize Serialization\n *     function for response values\n * @property {grpc~deserialize} requestDeserialize Deserialization\n *     function for request data\n * @property {grpc~deserialize} responseDeserialize Deserialization\n *     function for repsonse data\n */\n\n/**\n * @function MetadataListener\n * @param {grpc.Metadata} metadata The response metadata.\n * @param {function} next Passes metadata to the next interceptor.\n */\n\n/**\n * @function MessageListener\n * @param {jspb.Message} message The response message.\n * @param {function} next Passes a message to the next interceptor.\n */\n\n/**\n * @function StatusListener\n * @param {grpc~StatusObject} status The response status.\n * @param {function} next Passes a status to the next interceptor.\n */\n\n/**\n * A set of interceptor functions triggered by responses\n * @typedef {object} grpc~Listener\n * @property {MetadataListener=} onReceiveMetadata A function triggered by\n *     response metadata.\n * @property {MessageListener=} onReceiveMessage A function triggered by a\n *     response message.\n * @property {StatusListener=} onReceiveStatus A function triggered by a\n *     response status.\n */\n\n/**\n * @function MetadataRequester\n * @param {grpc.Metadata} metadata The request metadata.\n * @param {grpc~Listener} listener A listener wired to the previous layers\n *     in the interceptor stack.\n * @param {function} next Passes metadata and a listener to the next\n *      interceptor.\n */\n\n/**\n * @function MessageRequester\n * @param {jspb.Message} message The request message.\n * @param {function} next Passes a message to the next interceptor.\n */\n\n/**\n * @function CloseRequester\n * @param {function} next Calls the next interceptor.\n */\n\n/**\n * @function CancelRequester\n * @param {function} next Calls the next interceptor.\n */\n\n/**\n * @function GetPeerRequester\n * @param {function} next Calls the next interceptor.\n * @return {string}\n */\n\n/**\n * @typedef {object} grpc~Requester\n * @param {MetadataRequester=} start A function triggered when the call begins.\n * @param {MessageRequester=} sendMessage A function triggered by the request\n *     message.\n * @param {CloseRequester=} halfClose A function triggered when the client\n *     closes the call.\n * @param {CancelRequester=} cancel A function triggered when the call is\n *     cancelled.\n * @param {GetPeerRequester=} getPeer A function triggered when the endpoint is\n *     requested.\n */\n\n/**\n * An object that completely defines a service.\n * @typedef {Object.<string, grpc~MethodDefinition>} grpc~ServiceDefinition\n */\n\n/**\n * An object that defines a package hierarchy with multiple services\n * @typedef {Object.<string, grpc~ServiceDefinition>} grpc~PackageDefinition\n */\n\n/**\n * A function for dynamically assigning an interceptor to a call.\n * @function InterceptorProvider\n * @param {grpc~MethodDefinition} method_definition The method to provide\n *     an interceptor for.\n * @return {Interceptor|null} The interceptor to provide or nothing\n */\n\n/**\n * A function which can modify call options and produce methods to intercept\n * RPC operations.\n * @function Interceptor\n * @param {object} options The grpc call options\n * @param {NextCall} nextCall\n * @return {InterceptingCall}\n */\n\n/**\n * A function which produces the next InterceptingCall.\n * @function NextCall\n * @param {object} options The grpc call options\n * @return {InterceptingCall|null}\n */","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":1,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":19,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":21,"column":0}},{"name":"_","generated":{"line":21,"column":4},"source":"node_modules/grpc/src/common.js","original":{"line":21,"column":4}},{"name":"require","generated":{"line":21,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":21,"column":8}},{"generated":{"line":21,"column":16},"source":"node_modules/grpc/src/common.js","original":{"line":21,"column":16}},{"generated":{"line":21,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":21,"column":8}},{"generated":{"line":21,"column":25},"source":"node_modules/grpc/src/common.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":22,"column":0}},{"name":"constants","generated":{"line":22,"column":4},"source":"node_modules/grpc/src/common.js","original":{"line":22,"column":4}},{"name":"require","generated":{"line":22,"column":16},"source":"node_modules/grpc/src/common.js","original":{"line":22,"column":16}},{"generated":{"line":22,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":22,"column":24}},{"generated":{"line":22,"column":37},"source":"node_modules/grpc/src/common.js","original":{"line":22,"column":16}},{"generated":{"line":22,"column":38},"source":"node_modules/grpc/src/common.js","original":{"line":22,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":24,"column":0}},{"name":"exports","generated":{"line":31,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":0}},{"name":"wrapIgnoreNull","generated":{"line":31,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":8}},{"generated":{"line":31,"column":22},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":0}},{"generated":{"line":31,"column":25},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":25}},{"name":"wrapIgnoreNull","generated":{"line":31,"column":34},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":34}},{"generated":{"line":31,"column":48},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":25}},{"name":"func","generated":{"line":31,"column":49},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":49}},{"generated":{"line":31,"column":53},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":25}},{"generated":{"line":31,"column":55},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":55}},{"generated":{"line":32,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":32,"column":2}},{"generated":{"line":32,"column":6},"source":"node_modules/grpc/src/common.js","original":{"line":32,"column":6}},{"name":"func","generated":{"line":32,"column":7},"source":"node_modules/grpc/src/common.js","original":{"line":32,"column":7}},{"generated":{"line":32,"column":11},"source":"node_modules/grpc/src/common.js","original":{"line":32,"column":2}},{"generated":{"line":32,"column":13},"source":"node_modules/grpc/src/common.js","original":{"line":32,"column":13}},{"generated":{"line":33,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":33,"column":4}},{"name":"_","generated":{"line":33,"column":11},"source":"node_modules/grpc/src/common.js","original":{"line":33,"column":11}},{"name":"identity","generated":{"line":33,"column":13},"source":"node_modules/grpc/src/common.js","original":{"line":33,"column":13}},{"generated":{"line":33,"column":21},"source":"node_modules/grpc/src/common.js","original":{"line":33,"column":4}},{"generated":{"line":34,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":34,"column":3}},{"generated":{"line":35,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":35,"column":2}},{"generated":{"line":35,"column":9},"source":"node_modules/grpc/src/common.js","original":{"line":35,"column":9}},{"name":"arg","generated":{"line":35,"column":19},"source":"node_modules/grpc/src/common.js","original":{"line":35,"column":18}},{"generated":{"line":35,"column":22},"source":"node_modules/grpc/src/common.js","original":{"line":35,"column":9}},{"generated":{"line":35,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":35,"column":23}},{"generated":{"line":36,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":36,"column":4}},{"name":"arg","generated":{"line":36,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":36,"column":8}},{"generated":{"line":36,"column":16},"source":"node_modules/grpc/src/common.js","original":{"line":36,"column":16}},{"generated":{"line":36,"column":20},"source":"node_modules/grpc/src/common.js","original":{"line":36,"column":8}},{"name":"arg","generated":{"line":36,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":36,"column":24}},{"name":"undefined","generated":{"line":36,"column":32},"source":"node_modules/grpc/src/common.js","original":{"line":36,"column":32}},{"generated":{"line":36,"column":41},"source":"node_modules/grpc/src/common.js","original":{"line":36,"column":4}},{"generated":{"line":36,"column":43},"source":"node_modules/grpc/src/common.js","original":{"line":36,"column":43}},{"generated":{"line":37,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":37,"column":6}},{"generated":{"line":37,"column":13},"source":"node_modules/grpc/src/common.js","original":{"line":37,"column":13}},{"generated":{"line":37,"column":17},"source":"node_modules/grpc/src/common.js","original":{"line":37,"column":6}},{"generated":{"line":38,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":38,"column":5}},{"generated":{"line":39,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":39,"column":4}},{"name":"func","generated":{"line":39,"column":11},"source":"node_modules/grpc/src/common.js","original":{"line":39,"column":11}},{"name":"arg","generated":{"line":39,"column":16},"source":"node_modules/grpc/src/common.js","original":{"line":39,"column":16}},{"generated":{"line":39,"column":19},"source":"node_modules/grpc/src/common.js","original":{"line":39,"column":11}},{"generated":{"line":39,"column":20},"source":"node_modules/grpc/src/common.js","original":{"line":39,"column":4}},{"generated":{"line":40,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":40,"column":3}},{"generated":{"line":40,"column":3},"source":"node_modules/grpc/src/common.js","original":{"line":35,"column":2}},{"generated":{"line":41,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":41,"column":1}},{"generated":{"line":41,"column":1},"source":"node_modules/grpc/src/common.js","original":{"line":31,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":43,"column":0}},{"name":"exports","generated":{"line":47,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":47,"column":0}},{"name":"logger","generated":{"line":47,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":47,"column":8}},{"generated":{"line":47,"column":14},"source":"node_modules/grpc/src/common.js","original":{"line":47,"column":0}},{"name":"console","generated":{"line":47,"column":17},"source":"node_modules/grpc/src/common.js","original":{"line":47,"column":17}},{"generated":{"line":47,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":47,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":49,"column":0}},{"name":"exports","generated":{"line":53,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":53,"column":0}},{"name":"logVerbosity","generated":{"line":53,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":53,"column":8}},{"generated":{"line":53,"column":20},"source":"node_modules/grpc/src/common.js","original":{"line":53,"column":0}},{"generated":{"line":53,"column":23},"source":"node_modules/grpc/src/common.js","original":{"line":53,"column":23}},{"generated":{"line":53,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":53,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":55,"column":0}},{"name":"exports","generated":{"line":61,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":0}},{"name":"log","generated":{"line":61,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":8}},{"generated":{"line":61,"column":11},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":0}},{"generated":{"line":61,"column":14},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":14}},{"name":"log","generated":{"line":61,"column":23},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":23}},{"generated":{"line":61,"column":26},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":14}},{"name":"severity","generated":{"line":61,"column":27},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":27}},{"generated":{"line":61,"column":35},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":14}},{"name":"message","generated":{"line":61,"column":37},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":37}},{"generated":{"line":61,"column":44},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":14}},{"generated":{"line":61,"column":46},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":46}},{"generated":{"line":62,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":62,"column":2}},{"name":"severity","generated":{"line":62,"column":6},"source":"node_modules/grpc/src/common.js","original":{"line":62,"column":6}},{"name":"exports","generated":{"line":62,"column":18},"source":"node_modules/grpc/src/common.js","original":{"line":62,"column":18}},{"name":"logVerbosity","generated":{"line":62,"column":26},"source":"node_modules/grpc/src/common.js","original":{"line":62,"column":26}},{"generated":{"line":62,"column":38},"source":"node_modules/grpc/src/common.js","original":{"line":62,"column":2}},{"generated":{"line":62,"column":40},"source":"node_modules/grpc/src/common.js","original":{"line":62,"column":40}},{"name":"exports","generated":{"line":63,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":63,"column":4}},{"name":"logger","generated":{"line":63,"column":12},"source":"node_modules/grpc/src/common.js","original":{"line":63,"column":12}},{"generated":{"line":63,"column":18},"source":"node_modules/grpc/src/common.js","original":{"line":63,"column":4}},{"name":"error","generated":{"line":63,"column":19},"source":"node_modules/grpc/src/common.js","original":{"line":63,"column":19}},{"generated":{"line":63,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":63,"column":4}},{"name":"message","generated":{"line":63,"column":25},"source":"node_modules/grpc/src/common.js","original":{"line":63,"column":25}},{"generated":{"line":63,"column":32},"source":"node_modules/grpc/src/common.js","original":{"line":63,"column":4}},{"generated":{"line":64,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":64,"column":3}},{"generated":{"line":65,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":65,"column":1}},{"generated":{"line":65,"column":1},"source":"node_modules/grpc/src/common.js","original":{"line":61,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":67,"column":0}},{"name":"exports","generated":{"line":71,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":0}},{"name":"defaultGrpcOptions","generated":{"line":71,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":8}},{"generated":{"line":71,"column":26},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":0}},{"generated":{"line":71,"column":29},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":29}},{"name":"convertFieldsToCamelCase","generated":{"line":72,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":72,"column":2}},{"generated":{"line":72,"column":28},"source":"node_modules/grpc/src/common.js","original":{"line":72,"column":28}},{"generated":{"line":72,"column":33},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":29}},{"name":"binaryAsBase64","generated":{"line":73,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":73,"column":2}},{"generated":{"line":73,"column":18},"source":"node_modules/grpc/src/common.js","original":{"line":73,"column":18}},{"generated":{"line":73,"column":23},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":29}},{"name":"longsAsStrings","generated":{"line":74,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":74,"column":2}},{"generated":{"line":74,"column":18},"source":"node_modules/grpc/src/common.js","original":{"line":74,"column":18}},{"generated":{"line":74,"column":22},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":29}},{"name":"enumsAsStrings","generated":{"line":75,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":75,"column":2}},{"generated":{"line":75,"column":18},"source":"node_modules/grpc/src/common.js","original":{"line":75,"column":18}},{"generated":{"line":75,"column":22},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":29}},{"name":"deprecatedArgumentOrder","generated":{"line":76,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":76,"column":2}},{"generated":{"line":76,"column":27},"source":"node_modules/grpc/src/common.js","original":{"line":76,"column":27}},{"generated":{"line":77,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":29}},{"generated":{"line":77,"column":1},"source":"node_modules/grpc/src/common.js","original":{"line":71,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":79,"column":0}},{"name":"exports","generated":{"line":84,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":84,"column":0}},{"name":"createStatusError","generated":{"line":84,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":84,"column":8}},{"generated":{"line":84,"column":25},"source":"node_modules/grpc/src/common.js","original":{"line":84,"column":0}},{"generated":{"line":84,"column":28},"source":"node_modules/grpc/src/common.js","original":{"line":84,"column":28}},{"name":"status","generated":{"line":84,"column":38},"source":"node_modules/grpc/src/common.js","original":{"line":84,"column":37}},{"generated":{"line":84,"column":44},"source":"node_modules/grpc/src/common.js","original":{"line":84,"column":28}},{"generated":{"line":84,"column":46},"source":"node_modules/grpc/src/common.js","original":{"line":84,"column":45}},{"generated":{"line":85,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":2}},{"name":"statusName","generated":{"line":85,"column":6},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":6}},{"name":"_","generated":{"line":85,"column":19},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":19}},{"name":"invert","generated":{"line":85,"column":21},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":21}},{"generated":{"line":85,"column":27},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":19}},{"name":"constants","generated":{"line":85,"column":28},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":28}},{"name":"status","generated":{"line":85,"column":38},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":38}},{"generated":{"line":85,"column":44},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":19}},{"name":"status","generated":{"line":85,"column":46},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":46}},{"name":"code","generated":{"line":85,"column":53},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":53}},{"generated":{"line":85,"column":57},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":19}},{"generated":{"line":85,"column":58},"source":"node_modules/grpc/src/common.js","original":{"line":85,"column":2}},{"generated":{"line":86,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":2}},{"name":"message","generated":{"line":86,"column":6},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":6}},{"name":"status","generated":{"line":86,"column":16},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":19}},{"name":"code","generated":{"line":86,"column":23},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":26}},{"generated":{"line":86,"column":27},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":6}},{"name":"statusName","generated":{"line":86,"column":36},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":34}},{"generated":{"line":86,"column":46},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":6}},{"name":"status","generated":{"line":86,"column":56},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":49}},{"name":"details","generated":{"line":86,"column":63},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":56}},{"generated":{"line":86,"column":70},"source":"node_modules/grpc/src/common.js","original":{"line":86,"column":2}},{"generated":{"line":87,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":87,"column":2}},{"name":"error","generated":{"line":87,"column":6},"source":"node_modules/grpc/src/common.js","original":{"line":87,"column":6}},{"generated":{"line":87,"column":14},"source":"node_modules/grpc/src/common.js","original":{"line":87,"column":14}},{"name":"Error","generated":{"line":87,"column":18},"source":"node_modules/grpc/src/common.js","original":{"line":87,"column":18}},{"generated":{"line":87,"column":23},"source":"node_modules/grpc/src/common.js","original":{"line":87,"column":14}},{"name":"message","generated":{"line":87,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":87,"column":24}},{"generated":{"line":87,"column":31},"source":"node_modules/grpc/src/common.js","original":{"line":87,"column":14}},{"generated":{"line":87,"column":32},"source":"node_modules/grpc/src/common.js","original":{"line":87,"column":2}},{"name":"error","generated":{"line":88,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":88,"column":2}},{"name":"code","generated":{"line":88,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":88,"column":8}},{"generated":{"line":88,"column":12},"source":"node_modules/grpc/src/common.js","original":{"line":88,"column":2}},{"name":"status","generated":{"line":88,"column":15},"source":"node_modules/grpc/src/common.js","original":{"line":88,"column":15}},{"name":"code","generated":{"line":88,"column":22},"source":"node_modules/grpc/src/common.js","original":{"line":88,"column":22}},{"generated":{"line":88,"column":26},"source":"node_modules/grpc/src/common.js","original":{"line":88,"column":2}},{"name":"error","generated":{"line":89,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":89,"column":2}},{"name":"metadata","generated":{"line":89,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":89,"column":8}},{"generated":{"line":89,"column":16},"source":"node_modules/grpc/src/common.js","original":{"line":89,"column":2}},{"name":"status","generated":{"line":89,"column":19},"source":"node_modules/grpc/src/common.js","original":{"line":89,"column":19}},{"name":"metadata","generated":{"line":89,"column":26},"source":"node_modules/grpc/src/common.js","original":{"line":89,"column":26}},{"generated":{"line":89,"column":34},"source":"node_modules/grpc/src/common.js","original":{"line":89,"column":2}},{"name":"error","generated":{"line":90,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":90,"column":2}},{"name":"details","generated":{"line":90,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":90,"column":8}},{"generated":{"line":90,"column":15},"source":"node_modules/grpc/src/common.js","original":{"line":90,"column":2}},{"name":"status","generated":{"line":90,"column":18},"source":"node_modules/grpc/src/common.js","original":{"line":90,"column":18}},{"name":"details","generated":{"line":90,"column":25},"source":"node_modules/grpc/src/common.js","original":{"line":90,"column":25}},{"generated":{"line":90,"column":32},"source":"node_modules/grpc/src/common.js","original":{"line":90,"column":2}},{"generated":{"line":91,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":91,"column":2}},{"name":"error","generated":{"line":91,"column":9},"source":"node_modules/grpc/src/common.js","original":{"line":91,"column":9}},{"generated":{"line":91,"column":14},"source":"node_modules/grpc/src/common.js","original":{"line":91,"column":2}},{"generated":{"line":92,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":92,"column":1}},{"generated":{"line":92,"column":1},"source":"node_modules/grpc/src/common.js","original":{"line":84,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":94,"column":0}},{"name":"exports","generated":{"line":99,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":99,"column":0}},{"name":"getMethodType","generated":{"line":99,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":99,"column":8}},{"generated":{"line":99,"column":21},"source":"node_modules/grpc/src/common.js","original":{"line":99,"column":0}},{"generated":{"line":99,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":99,"column":24}},{"name":"method_definition","generated":{"line":99,"column":34},"source":"node_modules/grpc/src/common.js","original":{"line":99,"column":33}},{"generated":{"line":99,"column":51},"source":"node_modules/grpc/src/common.js","original":{"line":99,"column":24}},{"generated":{"line":99,"column":53},"source":"node_modules/grpc/src/common.js","original":{"line":99,"column":52}},{"generated":{"line":100,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":100,"column":2}},{"name":"method_definition","generated":{"line":100,"column":6},"source":"node_modules/grpc/src/common.js","original":{"line":100,"column":6}},{"name":"requestStream","generated":{"line":100,"column":24},"source":"node_modules/grpc/src/common.js","original":{"line":100,"column":24}},{"generated":{"line":100,"column":37},"source":"node_modules/grpc/src/common.js","original":{"line":100,"column":2}},{"generated":{"line":100,"column":39},"source":"node_modules/grpc/src/common.js","original":{"line":100,"column":39}},{"generated":{"line":101,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":101,"column":4}},{"name":"method_definition","generated":{"line":101,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":101,"column":8}},{"name":"responseStream","generated":{"line":101,"column":26},"source":"node_modules/grpc/src/common.js","original":{"line":101,"column":26}},{"generated":{"line":101,"column":40},"source":"node_modules/grpc/src/common.js","original":{"line":101,"column":4}},{"generated":{"line":101,"column":42},"source":"node_modules/grpc/src/common.js","original":{"line":101,"column":42}},{"generated":{"line":102,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":102,"column":6}},{"name":"constants","generated":{"line":102,"column":13},"source":"node_modules/grpc/src/common.js","original":{"line":102,"column":13}},{"name":"methodTypes","generated":{"line":102,"column":23},"source":"node_modules/grpc/src/common.js","original":{"line":102,"column":23}},{"generated":{"line":102,"column":34},"source":"node_modules/grpc/src/common.js","original":{"line":102,"column":13}},{"name":"BIDI_STREAMING","generated":{"line":102,"column":35},"source":"node_modules/grpc/src/common.js","original":{"line":102,"column":35}},{"generated":{"line":102,"column":49},"source":"node_modules/grpc/src/common.js","original":{"line":102,"column":6}},{"generated":{"line":103,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":103,"column":5}},{"generated":{"line":103,"column":5},"source":"node_modules/grpc/src/common.js","original":{"line":101,"column":4}},{"generated":{"line":103,"column":11},"source":"node_modules/grpc/src/common.js","original":{"line":103,"column":11}},{"generated":{"line":104,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":104,"column":6}},{"name":"constants","generated":{"line":104,"column":13},"source":"node_modules/grpc/src/common.js","original":{"line":104,"column":13}},{"name":"methodTypes","generated":{"line":104,"column":23},"source":"node_modules/grpc/src/common.js","original":{"line":104,"column":23}},{"generated":{"line":104,"column":34},"source":"node_modules/grpc/src/common.js","original":{"line":104,"column":13}},{"name":"CLIENT_STREAMING","generated":{"line":104,"column":35},"source":"node_modules/grpc/src/common.js","original":{"line":104,"column":35}},{"generated":{"line":104,"column":51},"source":"node_modules/grpc/src/common.js","original":{"line":104,"column":6}},{"generated":{"line":105,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":105,"column":5}},{"generated":{"line":106,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":106,"column":3}},{"generated":{"line":106,"column":3},"source":"node_modules/grpc/src/common.js","original":{"line":100,"column":2}},{"generated":{"line":106,"column":9},"source":"node_modules/grpc/src/common.js","original":{"line":106,"column":9}},{"generated":{"line":107,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":107,"column":4}},{"name":"method_definition","generated":{"line":107,"column":8},"source":"node_modules/grpc/src/common.js","original":{"line":107,"column":8}},{"name":"responseStream","generated":{"line":107,"column":26},"source":"node_modules/grpc/src/common.js","original":{"line":107,"column":26}},{"generated":{"line":107,"column":40},"source":"node_modules/grpc/src/common.js","original":{"line":107,"column":4}},{"generated":{"line":107,"column":42},"source":"node_modules/grpc/src/common.js","original":{"line":107,"column":42}},{"generated":{"line":108,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":108,"column":6}},{"name":"constants","generated":{"line":108,"column":13},"source":"node_modules/grpc/src/common.js","original":{"line":108,"column":13}},{"name":"methodTypes","generated":{"line":108,"column":23},"source":"node_modules/grpc/src/common.js","original":{"line":108,"column":23}},{"generated":{"line":108,"column":34},"source":"node_modules/grpc/src/common.js","original":{"line":108,"column":13}},{"name":"SERVER_STREAMING","generated":{"line":108,"column":35},"source":"node_modules/grpc/src/common.js","original":{"line":108,"column":35}},{"generated":{"line":108,"column":51},"source":"node_modules/grpc/src/common.js","original":{"line":108,"column":6}},{"generated":{"line":109,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":109,"column":5}},{"generated":{"line":109,"column":5},"source":"node_modules/grpc/src/common.js","original":{"line":107,"column":4}},{"generated":{"line":109,"column":11},"source":"node_modules/grpc/src/common.js","original":{"line":109,"column":11}},{"generated":{"line":110,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":110,"column":6}},{"name":"constants","generated":{"line":110,"column":13},"source":"node_modules/grpc/src/common.js","original":{"line":110,"column":13}},{"name":"methodTypes","generated":{"line":110,"column":23},"source":"node_modules/grpc/src/common.js","original":{"line":110,"column":23}},{"generated":{"line":110,"column":34},"source":"node_modules/grpc/src/common.js","original":{"line":110,"column":13}},{"name":"UNARY","generated":{"line":110,"column":35},"source":"node_modules/grpc/src/common.js","original":{"line":110,"column":35}},{"generated":{"line":110,"column":40},"source":"node_modules/grpc/src/common.js","original":{"line":110,"column":6}},{"generated":{"line":111,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":111,"column":5}},{"generated":{"line":112,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":112,"column":3}},{"generated":{"line":113,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":113,"column":1}},{"generated":{"line":113,"column":1},"source":"node_modules/grpc/src/common.js","original":{"line":99,"column":0}},{"generated":{"line":115,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":115,"column":0}},{"generated":{"line":117,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":117,"column":0}},{"generated":{"line":130,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":130,"column":0}},{"generated":{"line":141,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":141,"column":0}},{"generated":{"line":147,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":147,"column":0}},{"generated":{"line":153,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":153,"column":0}},{"generated":{"line":159,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":159,"column":0}},{"generated":{"line":165,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":165,"column":0}},{"generated":{"line":172,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":172,"column":0}},{"generated":{"line":179,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":179,"column":0}},{"generated":{"line":188,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":188,"column":0}},{"generated":{"line":206,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":206,"column":0}},{"generated":{"line":212,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":212,"column":0}},{"generated":{"line":218,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":218,"column":0}},{"generated":{"line":224,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":224,"column":0}},{"generated":{"line":235,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":235,"column":0}},{"generated":{"line":244,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":244,"column":0}},{"generated":{"line":250,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":250,"column":0}},{"generated":{"line":255,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":255,"column":0}},{"generated":{"line":260,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":260,"column":0}},{"generated":{"line":266,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":266,"column":0}},{"generated":{"line":279,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":279,"column":0}},{"generated":{"line":284,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":284,"column":0}},{"generated":{"line":289,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":289,"column":0}},{"generated":{"line":297,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":297,"column":0}},{"generated":{"line":306,"column":0},"source":"node_modules/grpc/src/common.js","original":{"line":306,"column":0}}],"sources":{"node_modules/grpc/src/common.js":"/**\n * @license\n * Copyright 2015 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n'use strict';\n\nvar _ = require('lodash');\nvar constants = require('./constants');\n\n/**\n * Wrap a function to pass null-like values through without calling it. If no\n * function is given, just uses the identity.\n * @private\n * @param {?function} func The function to wrap\n * @return {function} The wrapped function\n */\nexports.wrapIgnoreNull = function wrapIgnoreNull(func) {\n  if (!func) {\n    return _.identity;\n  }\n  return function(arg) {\n    if (arg === null || arg === undefined) {\n      return null;\n    }\n    return func(arg);\n  };\n};\n\n/**\n * The logger object for the gRPC module. Defaults to console.\n * @private\n */\nexports.logger = console;\n\n/**\n * The current logging verbosity. 0 corresponds to logging everything\n * @private\n */\nexports.logVerbosity = 0;\n\n/**\n * Log a message if the severity is at least as high as the current verbosity\n * @private\n * @param {Number} severity A value of the grpc.logVerbosity map\n * @param {String} message The message to log\n */\nexports.log = function log(severity, message) {\n  if (severity >= exports.logVerbosity) {\n    exports.logger.error(message);\n  }\n};\n\n/**\n * Default options for loading proto files into gRPC\n * @alias grpc~defaultLoadOptions\n */\nexports.defaultGrpcOptions = {\n  convertFieldsToCamelCase: false,\n  binaryAsBase64: false,\n  longsAsStrings: true,\n  enumsAsStrings: true,\n  deprecatedArgumentOrder: false\n};\n\n/**\n * Create an Error object from a status object\n * @param {grpc~StatusObject} status The status object\n * @return {Error} The resulting Error\n */\nexports.createStatusError = function(status) {\n  let statusName = _.invert(constants.status)[status.code];\n  let message = `${status.code} ${statusName}: ${status.details}`;\n  let error = new Error(message);\n  error.code = status.code;\n  error.metadata = status.metadata;\n  error.details = status.details;\n  return error;\n};\n\n/**\n * Get a method's type from its definition\n * @param {grpc~MethodDefinition} method_definition\n * @return {number}\n */\nexports.getMethodType = function(method_definition) {\n  if (method_definition.requestStream) {\n    if (method_definition.responseStream) {\n      return constants.methodTypes.BIDI_STREAMING;\n    } else {\n      return constants.methodTypes.CLIENT_STREAMING;\n    }\n  } else {\n    if (method_definition.responseStream) {\n      return constants.methodTypes.SERVER_STREAMING;\n    } else {\n      return constants.methodTypes.UNARY;\n    }\n  }\n};\n\n// JSDoc definitions that are used in multiple other modules\n\n/**\n * Represents the status of a completed request. If `code` is\n * {@link grpc.status}.OK, then the request has completed successfully.\n * Otherwise, the request has failed, `details` will contain a description of\n * the error. Either way, `metadata` contains the trailing response metadata\n * sent by the server when it finishes processing the call.\n * @typedef {object} grpc~StatusObject\n * @property {number} code The error code, a key of {@link grpc.status}\n * @property {string} details Human-readable description of the status\n * @property {grpc.Metadata} metadata Trailing metadata sent with the status,\n *     if applicable\n */\n\n/**\n * Describes how a request has failed. The member `message` will be the same as\n * `details` in {@link grpc~StatusObject}, and `code` and `metadata` are the\n * same as in that object.\n * @typedef {Error} grpc~ServiceError\n * @property {number} code The error code, a key of {@link grpc.status} that is\n *     not `grpc.status.OK`\n * @property {grpc.Metadata} metadata Trailing metadata sent with the status,\n *     if applicable\n */\n\n/**\n * The EventEmitter class in the event standard module\n * @external EventEmitter\n * @see https://nodejs.org/api/events.html#events_class_eventemitter\n */\n\n/**\n * The Readable class in the stream standard module\n * @external Readable\n * @see https://nodejs.org/api/stream.html#stream_readable_streams\n */\n\n/**\n * The Writable class in the stream standard module\n * @external Writable\n * @see https://nodejs.org/api/stream.html#stream_writable_streams\n */\n\n/**\n * The Duplex class in the stream standard module\n * @external Duplex\n * @see https://nodejs.org/api/stream.html#stream_class_stream_duplex\n */\n\n/**\n * A serialization function\n * @callback grpc~serialize\n * @param {*} value The value to serialize\n * @return {Buffer} The value serialized as a byte sequence\n */\n\n/**\n * A deserialization function\n * @callback grpc~deserialize\n * @param {Buffer} data The byte sequence to deserialize\n * @return {*} The data deserialized as a value\n */\n\n/**\n * The deadline of an operation. If it is a date, the deadline is reached at\n * the date and time specified. If it is a finite number, it is treated as\n * a number of milliseconds since the Unix Epoch. If it is Infinity, the\n * deadline will never be reached. If it is -Infinity, the deadline has already\n * passed.\n * @typedef {(number|Date)} grpc~Deadline\n */\n\n/**\n * An object that completely defines a service method signature.\n * @typedef {Object} grpc~MethodDefinition\n * @property {string} path The method's URL path\n * @property {boolean} requestStream Indicates whether the method accepts\n *     a stream of requests\n * @property {boolean} responseStream Indicates whether the method returns\n *     a stream of responses\n * @property {grpc~serialize} requestSerialize Serialization\n *     function for request values\n * @property {grpc~serialize} responseSerialize Serialization\n *     function for response values\n * @property {grpc~deserialize} requestDeserialize Deserialization\n *     function for request data\n * @property {grpc~deserialize} responseDeserialize Deserialization\n *     function for repsonse data\n */\n\n/**\n * @function MetadataListener\n * @param {grpc.Metadata} metadata The response metadata.\n * @param {function} next Passes metadata to the next interceptor.\n */\n\n/**\n * @function MessageListener\n * @param {jspb.Message} message The response message.\n * @param {function} next Passes a message to the next interceptor.\n */\n\n/**\n * @function StatusListener\n * @param {grpc~StatusObject} status The response status.\n * @param {function} next Passes a status to the next interceptor.\n */\n\n/**\n * A set of interceptor functions triggered by responses\n * @typedef {object} grpc~Listener\n * @property {MetadataListener=} onReceiveMetadata A function triggered by\n *     response metadata.\n * @property {MessageListener=} onReceiveMessage A function triggered by a\n *     response message.\n * @property {StatusListener=} onReceiveStatus A function triggered by a\n *     response status.\n */\n\n/**\n * @function MetadataRequester\n * @param {grpc.Metadata} metadata The request metadata.\n * @param {grpc~Listener} listener A listener wired to the previous layers\n *     in the interceptor stack.\n * @param {function} next Passes metadata and a listener to the next\n *      interceptor.\n */\n\n/**\n * @function MessageRequester\n * @param {jspb.Message} message The request message.\n * @param {function} next Passes a message to the next interceptor.\n */\n\n/**\n * @function CloseRequester\n * @param {function} next Calls the next interceptor.\n */\n\n/**\n * @function CancelRequester\n * @param {function} next Calls the next interceptor.\n */\n\n/**\n * @function GetPeerRequester\n * @param {function} next Calls the next interceptor.\n * @return {string}\n */\n\n/**\n * @typedef {object} grpc~Requester\n * @param {MetadataRequester=} start A function triggered when the call begins.\n * @param {MessageRequester=} sendMessage A function triggered by the request\n *     message.\n * @param {CloseRequester=} halfClose A function triggered when the client\n *     closes the call.\n * @param {CancelRequester=} cancel A function triggered when the call is\n *     cancelled.\n * @param {GetPeerRequester=} getPeer A function triggered when the endpoint is\n *     requested.\n */\n\n/**\n * An object that completely defines a service.\n * @typedef {Object.<string, grpc~MethodDefinition>} grpc~ServiceDefinition\n */\n\n/**\n * An object that defines a package hierarchy with multiple services\n * @typedef {Object.<string, grpc~ServiceDefinition>} grpc~PackageDefinition\n */\n\n/**\n * A function for dynamically assigning an interceptor to a call.\n * @function InterceptorProvider\n * @param {grpc~MethodDefinition} method_definition The method to provide\n *     an interceptor for.\n * @return {Interceptor|null} The interceptor to provide or nothing\n */\n\n/**\n * A function which can modify call options and produce methods to intercept\n * RPC operations.\n * @function Interceptor\n * @param {object} options The grpc call options\n * @param {NextCall} nextCall\n * @return {InterceptingCall}\n */\n\n/**\n * A function which produces the next InterceptingCall.\n * @function NextCall\n * @param {object} options The grpc call options\n * @return {InterceptingCall|null}\n */\n"},"lineCount":null}},"hash":"5e7dd93aeec87df3779e9b6335e15873","cacheData":{"env":{}}}