{"id":"rYQg","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/jszip/package.json","includedInParent":true,"mtime":1510180218000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534115700413},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"./utils","loc":{"line":3,"column":20},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/crc32.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/utils.js"}],"generated":{"js":"'use strict';\n\nvar utils = require('./utils');\n\n/**\n * The following functions come from pako, from pako/lib/zlib/crc32.js\n * released under the MIT license, see pako https://github.com/nodeca/pako/\n */\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n    var c, table = [];\n\n    for(var n =0; n < 256; n++){\n        c = n;\n        for(var k =0; k < 8; k++){\n            c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n        }\n        table[n] = c;\n    }\n\n    return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n    var t = crcTable, end = pos + len;\n\n    crc = crc ^ (-1);\n\n    for (var i = pos; i < end; i++ ) {\n        crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n    }\n\n    return (crc ^ (-1)); // >>> 0;\n}\n\n// That's all for the pako functions.\n\n/**\n * Compute the crc32 of a string.\n * This is almost the same as the function crc32, but for strings. Using the\n * same function for the two use cases leads to horrible performances.\n * @param {Number} crc the starting value of the crc.\n * @param {String} str the string to use.\n * @param {Number} len the length of the string.\n * @param {Number} pos the starting position for the crc32 computation.\n * @return {Number} the computed crc32.\n */\nfunction crc32str(crc, str, len, pos) {\n    var t = crcTable, end = pos + len;\n\n    crc = crc ^ (-1);\n\n    for (var i = pos; i < end; i++ ) {\n        crc = (crc >>> 8) ^ t[(crc ^ str.charCodeAt(i)) & 0xFF];\n    }\n\n    return (crc ^ (-1)); // >>> 0;\n}\n\nmodule.exports = function crc32wrapper(input, crc) {\n    if (typeof input === \"undefined\" || !input.length) {\n        return 0;\n    }\n\n    var isArray = utils.getTypeOf(input) !== \"string\";\n\n    if(isArray) {\n        return crc32(crc|0, input, input.length, 0);\n    } else {\n        return crc32str(crc|0, input, input.length, 0);\n    }\n};\n","map":{"mappings":[{"source":"node_modules/jszip/lib/crc32.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jszip/lib/crc32.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}}],"sources":{"node_modules/jszip/lib/crc32.js":"'use strict';\n\nvar utils = require('./utils');\n\n/**\n * The following functions come from pako, from pako/lib/zlib/crc32.js\n * released under the MIT license, see pako https://github.com/nodeca/pako/\n */\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n    var c, table = [];\n\n    for(var n =0; n < 256; n++){\n        c = n;\n        for(var k =0; k < 8; k++){\n            c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n        }\n        table[n] = c;\n    }\n\n    return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n    var t = crcTable, end = pos + len;\n\n    crc = crc ^ (-1);\n\n    for (var i = pos; i < end; i++ ) {\n        crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n    }\n\n    return (crc ^ (-1)); // >>> 0;\n}\n\n// That's all for the pako functions.\n\n/**\n * Compute the crc32 of a string.\n * This is almost the same as the function crc32, but for strings. Using the\n * same function for the two use cases leads to horrible performances.\n * @param {Number} crc the starting value of the crc.\n * @param {String} str the string to use.\n * @param {Number} len the length of the string.\n * @param {Number} pos the starting position for the crc32 computation.\n * @return {Number} the computed crc32.\n */\nfunction crc32str(crc, str, len, pos) {\n    var t = crcTable, end = pos + len;\n\n    crc = crc ^ (-1);\n\n    for (var i = pos; i < end; i++ ) {\n        crc = (crc >>> 8) ^ t[(crc ^ str.charCodeAt(i)) & 0xFF];\n    }\n\n    return (crc ^ (-1)); // >>> 0;\n}\n\nmodule.exports = function crc32wrapper(input, crc) {\n    if (typeof input === \"undefined\" || !input.length) {\n        return 0;\n    }\n\n    var isArray = utils.getTypeOf(input) !== \"string\";\n\n    if(isArray) {\n        return crc32(crc|0, input, input.length, 0);\n    } else {\n        return crc32str(crc|0, input, input.length, 0);\n    }\n};\n"},"lineCount":78}},"hash":"e611db47ce8ac94fafd7df8240be1875","cacheData":{"env":{}}}