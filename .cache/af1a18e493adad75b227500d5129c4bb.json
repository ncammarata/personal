{"id":"node_modules/jszip/lib/zipEntry.js","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/jszip/package.json","includedInParent":true,"mtime":1510180218000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1535346284235},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"./reader/readerFor","loc":{"line":2,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipEntry.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/reader/readerFor.js"},{"name":"./utils","loc":{"line":3,"column":20},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipEntry.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/utils.js"},{"name":"./compressedObject","loc":{"line":4,"column":31},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipEntry.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/compressedObject.js"},{"name":"./crc32","loc":{"line":5,"column":22},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipEntry.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/crc32.js"},{"name":"./utf8","loc":{"line":6,"column":19},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipEntry.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/utf8.js"},{"name":"./compressions","loc":{"line":7,"column":27},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipEntry.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/compressions.js"},{"name":"./support","loc":{"line":8,"column":22},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipEntry.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/support.js"}],"generated":{"js":"'use strict';\nvar readerFor = require('./reader/readerFor');\nvar utils = require('./utils');\nvar CompressedObject = require('./compressedObject');\nvar crc32fn = require('./crc32');\nvar utf8 = require('./utf8');\nvar compressions = require('./compressions');\nvar support = require('./support');\n\nvar MADE_BY_DOS = 0x00;\nvar MADE_BY_UNIX = 0x03;\n\n/**\n * Find a compression registered in JSZip.\n * @param {string} compressionMethod the method magic to find.\n * @return {Object|null} the JSZip compression object, null if none found.\n */\nvar findCompression = function(compressionMethod) {\n    for (var method in compressions) {\n        if (!compressions.hasOwnProperty(method)) {\n            continue;\n        }\n        if (compressions[method].magic === compressionMethod) {\n            return compressions[method];\n        }\n    }\n    return null;\n};\n\n// class ZipEntry {{{\n/**\n * An entry in the zip file.\n * @constructor\n * @param {Object} options Options of the current file.\n * @param {Object} loadOptions Options for loading the stream.\n */\nfunction ZipEntry(options, loadOptions) {\n    this.options = options;\n    this.loadOptions = loadOptions;\n}\nZipEntry.prototype = {\n    /**\n     * say if the file is encrypted.\n     * @return {boolean} true if the file is encrypted, false otherwise.\n     */\n    isEncrypted: function() {\n        // bit 1 is set\n        return (this.bitFlag & 0x0001) === 0x0001;\n    },\n    /**\n     * say if the file has utf-8 filename/comment.\n     * @return {boolean} true if the filename/comment is in utf-8, false otherwise.\n     */\n    useUTF8: function() {\n        // bit 11 is set\n        return (this.bitFlag & 0x0800) === 0x0800;\n    },\n    /**\n     * Read the local part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readLocalPart: function(reader) {\n        var compression, localExtraFieldsLength;\n\n        // we already know everything from the central dir !\n        // If the central dir data are false, we are doomed.\n        // On the bright side, the local part is scary  : zip64, data descriptors, both, etc.\n        // The less data we get here, the more reliable this should be.\n        // Let's skip the whole header and dash to the data !\n        reader.skip(22);\n        // in some zip created on windows, the filename stored in the central dir contains \\ instead of /.\n        // Strangely, the filename here is OK.\n        // I would love to treat these zip files as corrupted (see http://www.info-zip.org/FAQ.html#backslashes\n        // or APPNOTE#4.4.17.1, \"All slashes MUST be forward slashes '/'\") but there are a lot of bad zip generators...\n        // Search \"unzip mismatching \"local\" filename continuing with \"central\" filename version\" on\n        // the internet.\n        //\n        // I think I see the logic here : the central directory is used to display\n        // content and the local directory is used to extract the files. Mixing / and \\\n        // may be used to display \\ to windows users and use / when extracting the files.\n        // Unfortunately, this lead also to some issues : http://seclists.org/fulldisclosure/2009/Sep/394\n        this.fileNameLength = reader.readInt(2);\n        localExtraFieldsLength = reader.readInt(2); // can't be sure this will be the same as the central dir\n        // the fileName is stored as binary data, the handleUTF8 method will take care of the encoding.\n        this.fileName = reader.readData(this.fileNameLength);\n        reader.skip(localExtraFieldsLength);\n\n        if (this.compressedSize === -1 || this.uncompressedSize === -1) {\n            throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory \" + \"(compressedSize === -1 || uncompressedSize === -1)\");\n        }\n\n        compression = findCompression(this.compressionMethod);\n        if (compression === null) { // no compression found\n            throw new Error(\"Corrupted zip : compression \" + utils.pretty(this.compressionMethod) + \" unknown (inner file : \" + utils.transformTo(\"string\", this.fileName) + \")\");\n        }\n        this.decompressed = new CompressedObject(this.compressedSize, this.uncompressedSize, this.crc32, compression, reader.readData(this.compressedSize));\n    },\n\n    /**\n     * Read the central part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readCentralPart: function(reader) {\n        this.versionMadeBy = reader.readInt(2);\n        reader.skip(2);\n        // this.versionNeeded = reader.readInt(2);\n        this.bitFlag = reader.readInt(2);\n        this.compressionMethod = reader.readString(2);\n        this.date = reader.readDate();\n        this.crc32 = reader.readInt(4);\n        this.compressedSize = reader.readInt(4);\n        this.uncompressedSize = reader.readInt(4);\n        var fileNameLength = reader.readInt(2);\n        this.extraFieldsLength = reader.readInt(2);\n        this.fileCommentLength = reader.readInt(2);\n        this.diskNumberStart = reader.readInt(2);\n        this.internalFileAttributes = reader.readInt(2);\n        this.externalFileAttributes = reader.readInt(4);\n        this.localHeaderOffset = reader.readInt(4);\n\n        if (this.isEncrypted()) {\n            throw new Error(\"Encrypted zip are not supported\");\n        }\n\n        // will be read in the local part, see the comments there\n        reader.skip(fileNameLength);\n        this.readExtraFields(reader);\n        this.parseZIP64ExtraField(reader);\n        this.fileComment = reader.readData(this.fileCommentLength);\n    },\n\n    /**\n     * Parse the external file attributes and get the unix/dos permissions.\n     */\n    processAttributes: function () {\n        this.unixPermissions = null;\n        this.dosPermissions = null;\n        var madeBy = this.versionMadeBy >> 8;\n\n        // Check if we have the DOS directory flag set.\n        // We look for it in the DOS and UNIX permissions\n        // but some unknown platform could set it as a compatibility flag.\n        this.dir = this.externalFileAttributes & 0x0010 ? true : false;\n\n        if(madeBy === MADE_BY_DOS) {\n            // first 6 bits (0 to 5)\n            this.dosPermissions = this.externalFileAttributes & 0x3F;\n        }\n\n        if(madeBy === MADE_BY_UNIX) {\n            this.unixPermissions = (this.externalFileAttributes >> 16) & 0xFFFF;\n            // the octal permissions are in (this.unixPermissions & 0x01FF).toString(8);\n        }\n\n        // fail safe : if the name ends with a / it probably means a folder\n        if (!this.dir && this.fileNameStr.slice(-1) === '/') {\n            this.dir = true;\n        }\n    },\n\n    /**\n     * Parse the ZIP64 extra field and merge the info in the current ZipEntry.\n     * @param {DataReader} reader the reader to use.\n     */\n    parseZIP64ExtraField: function(reader) {\n\n        if (!this.extraFields[0x0001]) {\n            return;\n        }\n\n        // should be something, preparing the extra reader\n        var extraReader = readerFor(this.extraFields[0x0001].value);\n\n        // I really hope that these 64bits integer can fit in 32 bits integer, because js\n        // won't let us have more.\n        if (this.uncompressedSize === utils.MAX_VALUE_32BITS) {\n            this.uncompressedSize = extraReader.readInt(8);\n        }\n        if (this.compressedSize === utils.MAX_VALUE_32BITS) {\n            this.compressedSize = extraReader.readInt(8);\n        }\n        if (this.localHeaderOffset === utils.MAX_VALUE_32BITS) {\n            this.localHeaderOffset = extraReader.readInt(8);\n        }\n        if (this.diskNumberStart === utils.MAX_VALUE_32BITS) {\n            this.diskNumberStart = extraReader.readInt(4);\n        }\n    },\n    /**\n     * Read the central part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readExtraFields: function(reader) {\n        var end = reader.index + this.extraFieldsLength,\n            extraFieldId,\n            extraFieldLength,\n            extraFieldValue;\n\n        if (!this.extraFields) {\n            this.extraFields = {};\n        }\n\n        while (reader.index < end) {\n            extraFieldId = reader.readInt(2);\n            extraFieldLength = reader.readInt(2);\n            extraFieldValue = reader.readData(extraFieldLength);\n\n            this.extraFields[extraFieldId] = {\n                id: extraFieldId,\n                length: extraFieldLength,\n                value: extraFieldValue\n            };\n        }\n    },\n    /**\n     * Apply an UTF8 transformation if needed.\n     */\n    handleUTF8: function() {\n        var decodeParamType = support.uint8array ? \"uint8array\" : \"array\";\n        if (this.useUTF8()) {\n            this.fileNameStr = utf8.utf8decode(this.fileName);\n            this.fileCommentStr = utf8.utf8decode(this.fileComment);\n        } else {\n            var upath = this.findExtraFieldUnicodePath();\n            if (upath !== null) {\n                this.fileNameStr = upath;\n            } else {\n                // ASCII text or unsupported code page\n                var fileNameByteArray =  utils.transformTo(decodeParamType, this.fileName);\n                this.fileNameStr = this.loadOptions.decodeFileName(fileNameByteArray);\n            }\n\n            var ucomment = this.findExtraFieldUnicodeComment();\n            if (ucomment !== null) {\n                this.fileCommentStr = ucomment;\n            } else {\n                // ASCII text or unsupported code page\n                var commentByteArray =  utils.transformTo(decodeParamType, this.fileComment);\n                this.fileCommentStr = this.loadOptions.decodeFileName(commentByteArray);\n            }\n        }\n    },\n\n    /**\n     * Find the unicode path declared in the extra field, if any.\n     * @return {String} the unicode path, null otherwise.\n     */\n    findExtraFieldUnicodePath: function() {\n        var upathField = this.extraFields[0x7075];\n        if (upathField) {\n            var extraReader = readerFor(upathField.value);\n\n            // wrong version\n            if (extraReader.readInt(1) !== 1) {\n                return null;\n            }\n\n            // the crc of the filename changed, this field is out of date.\n            if (crc32fn(this.fileName) !== extraReader.readInt(4)) {\n                return null;\n            }\n\n            return utf8.utf8decode(extraReader.readData(upathField.length - 5));\n        }\n        return null;\n    },\n\n    /**\n     * Find the unicode comment declared in the extra field, if any.\n     * @return {String} the unicode comment, null otherwise.\n     */\n    findExtraFieldUnicodeComment: function() {\n        var ucommentField = this.extraFields[0x6375];\n        if (ucommentField) {\n            var extraReader = readerFor(ucommentField.value);\n\n            // wrong version\n            if (extraReader.readInt(1) !== 1) {\n                return null;\n            }\n\n            // the crc of the comment changed, this field is out of date.\n            if (crc32fn(this.fileComment) !== extraReader.readInt(4)) {\n                return null;\n            }\n\n            return utf8.utf8decode(extraReader.readData(ucommentField.length - 5));\n        }\n        return null;\n    }\n};\nmodule.exports = ZipEntry;\n","map":{"mappings":[{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/jszip/lib/zipEntry.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}}],"sources":{"node_modules/jszip/lib/zipEntry.js":"'use strict';\nvar readerFor = require('./reader/readerFor');\nvar utils = require('./utils');\nvar CompressedObject = require('./compressedObject');\nvar crc32fn = require('./crc32');\nvar utf8 = require('./utf8');\nvar compressions = require('./compressions');\nvar support = require('./support');\n\nvar MADE_BY_DOS = 0x00;\nvar MADE_BY_UNIX = 0x03;\n\n/**\n * Find a compression registered in JSZip.\n * @param {string} compressionMethod the method magic to find.\n * @return {Object|null} the JSZip compression object, null if none found.\n */\nvar findCompression = function(compressionMethod) {\n    for (var method in compressions) {\n        if (!compressions.hasOwnProperty(method)) {\n            continue;\n        }\n        if (compressions[method].magic === compressionMethod) {\n            return compressions[method];\n        }\n    }\n    return null;\n};\n\n// class ZipEntry {{{\n/**\n * An entry in the zip file.\n * @constructor\n * @param {Object} options Options of the current file.\n * @param {Object} loadOptions Options for loading the stream.\n */\nfunction ZipEntry(options, loadOptions) {\n    this.options = options;\n    this.loadOptions = loadOptions;\n}\nZipEntry.prototype = {\n    /**\n     * say if the file is encrypted.\n     * @return {boolean} true if the file is encrypted, false otherwise.\n     */\n    isEncrypted: function() {\n        // bit 1 is set\n        return (this.bitFlag & 0x0001) === 0x0001;\n    },\n    /**\n     * say if the file has utf-8 filename/comment.\n     * @return {boolean} true if the filename/comment is in utf-8, false otherwise.\n     */\n    useUTF8: function() {\n        // bit 11 is set\n        return (this.bitFlag & 0x0800) === 0x0800;\n    },\n    /**\n     * Read the local part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readLocalPart: function(reader) {\n        var compression, localExtraFieldsLength;\n\n        // we already know everything from the central dir !\n        // If the central dir data are false, we are doomed.\n        // On the bright side, the local part is scary  : zip64, data descriptors, both, etc.\n        // The less data we get here, the more reliable this should be.\n        // Let's skip the whole header and dash to the data !\n        reader.skip(22);\n        // in some zip created on windows, the filename stored in the central dir contains \\ instead of /.\n        // Strangely, the filename here is OK.\n        // I would love to treat these zip files as corrupted (see http://www.info-zip.org/FAQ.html#backslashes\n        // or APPNOTE#4.4.17.1, \"All slashes MUST be forward slashes '/'\") but there are a lot of bad zip generators...\n        // Search \"unzip mismatching \"local\" filename continuing with \"central\" filename version\" on\n        // the internet.\n        //\n        // I think I see the logic here : the central directory is used to display\n        // content and the local directory is used to extract the files. Mixing / and \\\n        // may be used to display \\ to windows users and use / when extracting the files.\n        // Unfortunately, this lead also to some issues : http://seclists.org/fulldisclosure/2009/Sep/394\n        this.fileNameLength = reader.readInt(2);\n        localExtraFieldsLength = reader.readInt(2); // can't be sure this will be the same as the central dir\n        // the fileName is stored as binary data, the handleUTF8 method will take care of the encoding.\n        this.fileName = reader.readData(this.fileNameLength);\n        reader.skip(localExtraFieldsLength);\n\n        if (this.compressedSize === -1 || this.uncompressedSize === -1) {\n            throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory \" + \"(compressedSize === -1 || uncompressedSize === -1)\");\n        }\n\n        compression = findCompression(this.compressionMethod);\n        if (compression === null) { // no compression found\n            throw new Error(\"Corrupted zip : compression \" + utils.pretty(this.compressionMethod) + \" unknown (inner file : \" + utils.transformTo(\"string\", this.fileName) + \")\");\n        }\n        this.decompressed = new CompressedObject(this.compressedSize, this.uncompressedSize, this.crc32, compression, reader.readData(this.compressedSize));\n    },\n\n    /**\n     * Read the central part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readCentralPart: function(reader) {\n        this.versionMadeBy = reader.readInt(2);\n        reader.skip(2);\n        // this.versionNeeded = reader.readInt(2);\n        this.bitFlag = reader.readInt(2);\n        this.compressionMethod = reader.readString(2);\n        this.date = reader.readDate();\n        this.crc32 = reader.readInt(4);\n        this.compressedSize = reader.readInt(4);\n        this.uncompressedSize = reader.readInt(4);\n        var fileNameLength = reader.readInt(2);\n        this.extraFieldsLength = reader.readInt(2);\n        this.fileCommentLength = reader.readInt(2);\n        this.diskNumberStart = reader.readInt(2);\n        this.internalFileAttributes = reader.readInt(2);\n        this.externalFileAttributes = reader.readInt(4);\n        this.localHeaderOffset = reader.readInt(4);\n\n        if (this.isEncrypted()) {\n            throw new Error(\"Encrypted zip are not supported\");\n        }\n\n        // will be read in the local part, see the comments there\n        reader.skip(fileNameLength);\n        this.readExtraFields(reader);\n        this.parseZIP64ExtraField(reader);\n        this.fileComment = reader.readData(this.fileCommentLength);\n    },\n\n    /**\n     * Parse the external file attributes and get the unix/dos permissions.\n     */\n    processAttributes: function () {\n        this.unixPermissions = null;\n        this.dosPermissions = null;\n        var madeBy = this.versionMadeBy >> 8;\n\n        // Check if we have the DOS directory flag set.\n        // We look for it in the DOS and UNIX permissions\n        // but some unknown platform could set it as a compatibility flag.\n        this.dir = this.externalFileAttributes & 0x0010 ? true : false;\n\n        if(madeBy === MADE_BY_DOS) {\n            // first 6 bits (0 to 5)\n            this.dosPermissions = this.externalFileAttributes & 0x3F;\n        }\n\n        if(madeBy === MADE_BY_UNIX) {\n            this.unixPermissions = (this.externalFileAttributes >> 16) & 0xFFFF;\n            // the octal permissions are in (this.unixPermissions & 0x01FF).toString(8);\n        }\n\n        // fail safe : if the name ends with a / it probably means a folder\n        if (!this.dir && this.fileNameStr.slice(-1) === '/') {\n            this.dir = true;\n        }\n    },\n\n    /**\n     * Parse the ZIP64 extra field and merge the info in the current ZipEntry.\n     * @param {DataReader} reader the reader to use.\n     */\n    parseZIP64ExtraField: function(reader) {\n\n        if (!this.extraFields[0x0001]) {\n            return;\n        }\n\n        // should be something, preparing the extra reader\n        var extraReader = readerFor(this.extraFields[0x0001].value);\n\n        // I really hope that these 64bits integer can fit in 32 bits integer, because js\n        // won't let us have more.\n        if (this.uncompressedSize === utils.MAX_VALUE_32BITS) {\n            this.uncompressedSize = extraReader.readInt(8);\n        }\n        if (this.compressedSize === utils.MAX_VALUE_32BITS) {\n            this.compressedSize = extraReader.readInt(8);\n        }\n        if (this.localHeaderOffset === utils.MAX_VALUE_32BITS) {\n            this.localHeaderOffset = extraReader.readInt(8);\n        }\n        if (this.diskNumberStart === utils.MAX_VALUE_32BITS) {\n            this.diskNumberStart = extraReader.readInt(4);\n        }\n    },\n    /**\n     * Read the central part of a zip file and add the info in this object.\n     * @param {DataReader} reader the reader to use.\n     */\n    readExtraFields: function(reader) {\n        var end = reader.index + this.extraFieldsLength,\n            extraFieldId,\n            extraFieldLength,\n            extraFieldValue;\n\n        if (!this.extraFields) {\n            this.extraFields = {};\n        }\n\n        while (reader.index < end) {\n            extraFieldId = reader.readInt(2);\n            extraFieldLength = reader.readInt(2);\n            extraFieldValue = reader.readData(extraFieldLength);\n\n            this.extraFields[extraFieldId] = {\n                id: extraFieldId,\n                length: extraFieldLength,\n                value: extraFieldValue\n            };\n        }\n    },\n    /**\n     * Apply an UTF8 transformation if needed.\n     */\n    handleUTF8: function() {\n        var decodeParamType = support.uint8array ? \"uint8array\" : \"array\";\n        if (this.useUTF8()) {\n            this.fileNameStr = utf8.utf8decode(this.fileName);\n            this.fileCommentStr = utf8.utf8decode(this.fileComment);\n        } else {\n            var upath = this.findExtraFieldUnicodePath();\n            if (upath !== null) {\n                this.fileNameStr = upath;\n            } else {\n                // ASCII text or unsupported code page\n                var fileNameByteArray =  utils.transformTo(decodeParamType, this.fileName);\n                this.fileNameStr = this.loadOptions.decodeFileName(fileNameByteArray);\n            }\n\n            var ucomment = this.findExtraFieldUnicodeComment();\n            if (ucomment !== null) {\n                this.fileCommentStr = ucomment;\n            } else {\n                // ASCII text or unsupported code page\n                var commentByteArray =  utils.transformTo(decodeParamType, this.fileComment);\n                this.fileCommentStr = this.loadOptions.decodeFileName(commentByteArray);\n            }\n        }\n    },\n\n    /**\n     * Find the unicode path declared in the extra field, if any.\n     * @return {String} the unicode path, null otherwise.\n     */\n    findExtraFieldUnicodePath: function() {\n        var upathField = this.extraFields[0x7075];\n        if (upathField) {\n            var extraReader = readerFor(upathField.value);\n\n            // wrong version\n            if (extraReader.readInt(1) !== 1) {\n                return null;\n            }\n\n            // the crc of the filename changed, this field is out of date.\n            if (crc32fn(this.fileName) !== extraReader.readInt(4)) {\n                return null;\n            }\n\n            return utf8.utf8decode(extraReader.readData(upathField.length - 5));\n        }\n        return null;\n    },\n\n    /**\n     * Find the unicode comment declared in the extra field, if any.\n     * @return {String} the unicode comment, null otherwise.\n     */\n    findExtraFieldUnicodeComment: function() {\n        var ucommentField = this.extraFields[0x6375];\n        if (ucommentField) {\n            var extraReader = readerFor(ucommentField.value);\n\n            // wrong version\n            if (extraReader.readInt(1) !== 1) {\n                return null;\n            }\n\n            // the crc of the comment changed, this field is out of date.\n            if (crc32fn(this.fileComment) !== extraReader.readInt(4)) {\n                return null;\n            }\n\n            return utf8.utf8decode(extraReader.readData(ucommentField.length - 5));\n        }\n        return null;\n    }\n};\nmodule.exports = ZipEntry;\n"},"lineCount":293}},"hash":"7b92ed7dd96dd21d116c18ca0c1ed594","cacheData":{"env":{}}}