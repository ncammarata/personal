{"id":"3KwL","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/sbd/package.json","includedInParent":true,"mtime":0},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1535346284235},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"sanitize-html","loc":{"line":4,"column":27},"parent":"/Users/nick/projects/tomespark/node_modules/sbd/lib/tokenizer.js","resolved":"/Users/nick/projects/tomespark/node_modules/sbd/lib/sanitize-html-browser.js"},{"name":"./stringHelper","loc":{"line":6,"column":27},"parent":"/Users/nick/projects/tomespark/node_modules/sbd/lib/tokenizer.js","resolved":"/Users/nick/projects/tomespark/node_modules/sbd/lib/stringHelper.js"},{"name":"./Match","loc":{"line":7,"column":21},"parent":"/Users/nick/projects/tomespark/node_modules/sbd/lib/tokenizer.js","resolved":"/Users/nick/projects/tomespark/node_modules/sbd/lib/Match.js"}],"generated":{"js":"/*jshint node:true, laxcomma:true */\r\n\"use strict\";\r\n\r\nvar sanitizeHtml = require('sanitize-html');\r\n\r\nvar stringHelper = require('./stringHelper');\r\nvar Match  = require('./Match');\r\n\r\nvar newline_placeholder = \" @~@ \";\r\nvar newline_placeholder_t = newline_placeholder.trim();\r\n\r\n\r\nvar whiteSpaceCheck = new RegExp(\"\\\\S\", \"\");\r\nvar addNewLineBoundaries = new RegExp(\"\\\\n+|[-#=_+*]{4,}\", \"g\");\r\nvar splitIntoWords = new RegExp(\"\\\\S+|\\\\n\", \"g\");\r\n\r\n\r\n// Split the entry into sentences.\r\nexports.sentences = function(text, user_options) {\r\n    if (!text || typeof text !== \"string\" || !text.length) {\r\n        return [];\r\n    }\r\n\r\n    if (!whiteSpaceCheck.test(text)) {\r\n      // whitespace-only string has no sentences\r\n      return [];\r\n    }\r\n\r\n    var options = {\r\n        \"newline_boundaries\"  : false,\r\n        \"html_boundaries\"     : false,\r\n        \"html_boundaries_tags\": [\"p\",\"div\",\"ul\",\"ol\"],\r\n        \"sanitize\"            : false,\r\n        \"allowed_tags\"        : false,\r\n        \"preserve_whitespace\" : false,\r\n        \"abbreviations\"       : null\r\n    };\r\n\r\n    if (typeof user_options === \"boolean\") {\r\n        // Deprecated quick option\r\n        options.newline_boundaries = true;\r\n    }\r\n    else {\r\n        // Extend options\r\n        for (var k in user_options) {\r\n            options[k] = user_options[k];\r\n        }\r\n    }\r\n\r\n    Match.setAbbreviations(options.abbreviations);\r\n\r\n    if (options.newline_boundaries) {\r\n        text = text.replace(addNewLineBoundaries, newline_placeholder);\r\n    }\r\n\r\n    if (options.html_boundaries) {\r\n        var html_boundaries_regexp = \"(<br\\\\s*\\\\/?>|<\\\\/(\" + options.html_boundaries_tags.join(\"|\") + \")>)\";\r\n        var re = new RegExp(html_boundaries_regexp, \"g\");\r\n        text = text.replace(re, \"$1\" + newline_placeholder);\r\n    }\r\n\r\n    if (options.sanitize || options.allowed_tags) {\r\n        if (! options.allowed_tags) {\r\n            options.allowed_tags = [\"\"];\r\n        }\r\n\r\n        text = sanitizeHtml(text, { \"allowedTags\" : options.allowed_tags });\r\n    }\r\n\r\n\r\n    // Split the text into words\r\n    var words;\r\n    var tokens;\r\n\r\n    // Split the text into words\r\n    if (options.preserve_whitespace) {\r\n        // <br> tags are the odd man out, as whitespace is allowed inside the tag\r\n        tokens = text.split(/(<br\\s*\\/?>|\\S+|\\n+)/);\r\n\r\n        // every other token is a word\r\n        words = tokens.filter(function (token, ii) {\r\n          return ii % 2;\r\n        });\r\n    }\r\n    else {\r\n        // - see http://blog.tompawlak.org/split-string-into-tokens-javascript\r\n        words = text.trim().match(splitIntoWords);\r\n    }\r\n\r\n\r\n    var wordCount = 0;\r\n    var index = 0;\r\n    var temp  = [];\r\n    var sentences = [];\r\n    var current   = [];\r\n\r\n    // If given text is only whitespace (or nothing of \\S+)\r\n    if (!words || !words.length) {\r\n        return [];\r\n    }\r\n\r\n    for (var i=0, L=words.length; i < L; i++) {\r\n        wordCount++;\r\n\r\n        // Add the word to current sentence\r\n        current.push(words[i]);\r\n\r\n        // Sub-sentences, reset counter\r\n        if (~words[i].indexOf(',')) {\r\n            wordCount = 0;\r\n        }\r\n\r\n        if (Match.isBoundaryChar(words[i]) || stringHelper.endsWithChar(words[i], \"?!\") || words[i] === newline_placeholder_t) {\r\n            if ((options.newline_boundaries || options.html_boundaries) && words[i] === newline_placeholder_t) {\r\n                current.pop();\r\n            }\r\n\r\n            sentences.push(current);\r\n\r\n            wordCount = 0;\r\n            current   = [];\r\n\r\n            continue;\r\n        }\r\n\r\n\r\n        if (stringHelper.endsWithChar(words[i], \"\\\"\") || stringHelper.endsWithChar(words[i], \"”\")) {\r\n            words[i] = words[i].slice(0, -1);\r\n        }\r\n\r\n        // A dot might indicate the end sentences\r\n        // Exception: The next sentence starts with a word (non abbreviation)\r\n        //            that has a capital letter.\r\n        if (stringHelper.endsWithChar(words[i], '.')) {\r\n            // Check if there is a next word\r\n            // This probably needs to be improved with machine learning\r\n            if (i+1 < L) {\r\n                // Single character abbr.\r\n                if (words[i].length === 2 && isNaN(words[i].charAt(0))) {\r\n                    continue;\r\n                }\r\n\r\n                // Common abbr. that often do not end sentences\r\n                if (Match.isCommonAbbreviation(words[i])) {\r\n                    continue;\r\n                }\r\n\r\n                // Next word starts with capital word, but current sentence is\r\n                // quite short\r\n                if (Match.isSentenceStarter(words[i+1])) {\r\n                    if (Match.isTimeAbbreviation(words[i], words[i+1])) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Dealing with names at the start of sentences\r\n                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 6))) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (Match.isNumber(words[i+1])) {\r\n                        if (Match.isCustomAbbreviation(words[i])) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Skip ellipsis\r\n                    if (stringHelper.endsWith(words[i], \"..\")) {\r\n                        continue;\r\n                    }\r\n\r\n                    //// Skip abbreviations\r\n                    // Short words + dot or a dot after each letter\r\n                    if (Match.isDottedAbbreviation(words[i])) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 5))) {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            sentences.push(current);\r\n            current   = [];\r\n            wordCount = 0;\r\n\r\n            continue;\r\n        }\r\n\r\n        // Check if the word has a dot in it\r\n        if ((index = words[i].indexOf(\".\")) > -1) {\r\n            if (Match.isNumber(words[i], index)) {\r\n                continue;\r\n            }\r\n\r\n            // Custom dotted abbreviations (like K.L.M or I.C.T)\r\n            if (Match.isDottedAbbreviation(words[i])) {\r\n                continue;\r\n            }\r\n\r\n            // Skip urls / emails and the like\r\n            if (Match.isURL(words[i]) || Match.isPhoneNr(words[i])) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (temp = Match.isConcatenated(words[i])) {\r\n            current.pop();\r\n            current.push(temp[0]);\r\n            sentences.push(current);\r\n\r\n            current = [];\r\n            wordCount = 0;\r\n            current.push(temp[1]);\r\n        }\r\n    }\r\n\r\n    if (current.length) {\r\n        sentences.push(current);\r\n    }\r\n\r\n\r\n    // Clear \"empty\" sentences\r\n    sentences = sentences.filter(function(s) {\r\n        return s.length > 0;\r\n    });\r\n\r\n    var result = sentences.slice(1).reduce(function (out, sentence) {\r\n      var lastSentence = out[out.length - 1];\r\n      // Single words, could be \"enumeration lists\"\r\n      if (lastSentence.length === 1 && /^.{1,2}[.]$/.test(lastSentence[0])) {\r\n          // Check if there is a next sentence\r\n          // It should not be another list item\r\n          if (!/[.]/.test(sentence[0])) {\r\n              out.pop()\r\n              out.push(lastSentence.concat(sentence));\r\n              return out;\r\n          }\r\n      }\r\n      out.push(sentence);\r\n      return out;\r\n    }, [ sentences[0] ]);\r\n\r\n    // join tokens back together\r\n    return result.map(function (sentence, ii) {\r\n      if (options.preserve_whitespace && !options.newline_boundaries && !options.html_boundaries) {\r\n        // tokens looks like so: [leading-space token, non-space token, space\r\n        // token, non-space token, space token... ]. In other words, the first\r\n        // item is the leading space (or the empty string), and the rest of\r\n        // the tokens are [non-space, space] token pairs.\r\n        var tokenCount = sentence.length * 2;\r\n        if (ii === 0) {\r\n          tokenCount += 1;\r\n        }\r\n        return tokens.splice(0, tokenCount).join('');\r\n      }\r\n      return sentence.join(\" \");\r\n    });\r\n};\r\n","map":{"mappings":[{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/sbd/lib/tokenizer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}}],"sources":{"node_modules/sbd/lib/tokenizer.js":"/*jshint node:true, laxcomma:true */\r\n\"use strict\";\r\n\r\nvar sanitizeHtml = require('sanitize-html');\r\n\r\nvar stringHelper = require('./stringHelper');\r\nvar Match  = require('./Match');\r\n\r\nvar newline_placeholder = \" @~@ \";\r\nvar newline_placeholder_t = newline_placeholder.trim();\r\n\r\n\r\nvar whiteSpaceCheck = new RegExp(\"\\\\S\", \"\");\r\nvar addNewLineBoundaries = new RegExp(\"\\\\n+|[-#=_+*]{4,}\", \"g\");\r\nvar splitIntoWords = new RegExp(\"\\\\S+|\\\\n\", \"g\");\r\n\r\n\r\n// Split the entry into sentences.\r\nexports.sentences = function(text, user_options) {\r\n    if (!text || typeof text !== \"string\" || !text.length) {\r\n        return [];\r\n    }\r\n\r\n    if (!whiteSpaceCheck.test(text)) {\r\n      // whitespace-only string has no sentences\r\n      return [];\r\n    }\r\n\r\n    var options = {\r\n        \"newline_boundaries\"  : false,\r\n        \"html_boundaries\"     : false,\r\n        \"html_boundaries_tags\": [\"p\",\"div\",\"ul\",\"ol\"],\r\n        \"sanitize\"            : false,\r\n        \"allowed_tags\"        : false,\r\n        \"preserve_whitespace\" : false,\r\n        \"abbreviations\"       : null\r\n    };\r\n\r\n    if (typeof user_options === \"boolean\") {\r\n        // Deprecated quick option\r\n        options.newline_boundaries = true;\r\n    }\r\n    else {\r\n        // Extend options\r\n        for (var k in user_options) {\r\n            options[k] = user_options[k];\r\n        }\r\n    }\r\n\r\n    Match.setAbbreviations(options.abbreviations);\r\n\r\n    if (options.newline_boundaries) {\r\n        text = text.replace(addNewLineBoundaries, newline_placeholder);\r\n    }\r\n\r\n    if (options.html_boundaries) {\r\n        var html_boundaries_regexp = \"(<br\\\\s*\\\\/?>|<\\\\/(\" + options.html_boundaries_tags.join(\"|\") + \")>)\";\r\n        var re = new RegExp(html_boundaries_regexp, \"g\");\r\n        text = text.replace(re, \"$1\" + newline_placeholder);\r\n    }\r\n\r\n    if (options.sanitize || options.allowed_tags) {\r\n        if (! options.allowed_tags) {\r\n            options.allowed_tags = [\"\"];\r\n        }\r\n\r\n        text = sanitizeHtml(text, { \"allowedTags\" : options.allowed_tags });\r\n    }\r\n\r\n\r\n    // Split the text into words\r\n    var words;\r\n    var tokens;\r\n\r\n    // Split the text into words\r\n    if (options.preserve_whitespace) {\r\n        // <br> tags are the odd man out, as whitespace is allowed inside the tag\r\n        tokens = text.split(/(<br\\s*\\/?>|\\S+|\\n+)/);\r\n\r\n        // every other token is a word\r\n        words = tokens.filter(function (token, ii) {\r\n          return ii % 2;\r\n        });\r\n    }\r\n    else {\r\n        // - see http://blog.tompawlak.org/split-string-into-tokens-javascript\r\n        words = text.trim().match(splitIntoWords);\r\n    }\r\n\r\n\r\n    var wordCount = 0;\r\n    var index = 0;\r\n    var temp  = [];\r\n    var sentences = [];\r\n    var current   = [];\r\n\r\n    // If given text is only whitespace (or nothing of \\S+)\r\n    if (!words || !words.length) {\r\n        return [];\r\n    }\r\n\r\n    for (var i=0, L=words.length; i < L; i++) {\r\n        wordCount++;\r\n\r\n        // Add the word to current sentence\r\n        current.push(words[i]);\r\n\r\n        // Sub-sentences, reset counter\r\n        if (~words[i].indexOf(',')) {\r\n            wordCount = 0;\r\n        }\r\n\r\n        if (Match.isBoundaryChar(words[i]) || stringHelper.endsWithChar(words[i], \"?!\") || words[i] === newline_placeholder_t) {\r\n            if ((options.newline_boundaries || options.html_boundaries) && words[i] === newline_placeholder_t) {\r\n                current.pop();\r\n            }\r\n\r\n            sentences.push(current);\r\n\r\n            wordCount = 0;\r\n            current   = [];\r\n\r\n            continue;\r\n        }\r\n\r\n\r\n        if (stringHelper.endsWithChar(words[i], \"\\\"\") || stringHelper.endsWithChar(words[i], \"”\")) {\r\n            words[i] = words[i].slice(0, -1);\r\n        }\r\n\r\n        // A dot might indicate the end sentences\r\n        // Exception: The next sentence starts with a word (non abbreviation)\r\n        //            that has a capital letter.\r\n        if (stringHelper.endsWithChar(words[i], '.')) {\r\n            // Check if there is a next word\r\n            // This probably needs to be improved with machine learning\r\n            if (i+1 < L) {\r\n                // Single character abbr.\r\n                if (words[i].length === 2 && isNaN(words[i].charAt(0))) {\r\n                    continue;\r\n                }\r\n\r\n                // Common abbr. that often do not end sentences\r\n                if (Match.isCommonAbbreviation(words[i])) {\r\n                    continue;\r\n                }\r\n\r\n                // Next word starts with capital word, but current sentence is\r\n                // quite short\r\n                if (Match.isSentenceStarter(words[i+1])) {\r\n                    if (Match.isTimeAbbreviation(words[i], words[i+1])) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Dealing with names at the start of sentences\r\n                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 6))) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (Match.isNumber(words[i+1])) {\r\n                        if (Match.isCustomAbbreviation(words[i])) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Skip ellipsis\r\n                    if (stringHelper.endsWith(words[i], \"..\")) {\r\n                        continue;\r\n                    }\r\n\r\n                    //// Skip abbreviations\r\n                    // Short words + dot or a dot after each letter\r\n                    if (Match.isDottedAbbreviation(words[i])) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (Match.isNameAbbreviation(wordCount, words.slice(i, 5))) {\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            sentences.push(current);\r\n            current   = [];\r\n            wordCount = 0;\r\n\r\n            continue;\r\n        }\r\n\r\n        // Check if the word has a dot in it\r\n        if ((index = words[i].indexOf(\".\")) > -1) {\r\n            if (Match.isNumber(words[i], index)) {\r\n                continue;\r\n            }\r\n\r\n            // Custom dotted abbreviations (like K.L.M or I.C.T)\r\n            if (Match.isDottedAbbreviation(words[i])) {\r\n                continue;\r\n            }\r\n\r\n            // Skip urls / emails and the like\r\n            if (Match.isURL(words[i]) || Match.isPhoneNr(words[i])) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (temp = Match.isConcatenated(words[i])) {\r\n            current.pop();\r\n            current.push(temp[0]);\r\n            sentences.push(current);\r\n\r\n            current = [];\r\n            wordCount = 0;\r\n            current.push(temp[1]);\r\n        }\r\n    }\r\n\r\n    if (current.length) {\r\n        sentences.push(current);\r\n    }\r\n\r\n\r\n    // Clear \"empty\" sentences\r\n    sentences = sentences.filter(function(s) {\r\n        return s.length > 0;\r\n    });\r\n\r\n    var result = sentences.slice(1).reduce(function (out, sentence) {\r\n      var lastSentence = out[out.length - 1];\r\n      // Single words, could be \"enumeration lists\"\r\n      if (lastSentence.length === 1 && /^.{1,2}[.]$/.test(lastSentence[0])) {\r\n          // Check if there is a next sentence\r\n          // It should not be another list item\r\n          if (!/[.]/.test(sentence[0])) {\r\n              out.pop()\r\n              out.push(lastSentence.concat(sentence));\r\n              return out;\r\n          }\r\n      }\r\n      out.push(sentence);\r\n      return out;\r\n    }, [ sentences[0] ]);\r\n\r\n    // join tokens back together\r\n    return result.map(function (sentence, ii) {\r\n      if (options.preserve_whitespace && !options.newline_boundaries && !options.html_boundaries) {\r\n        // tokens looks like so: [leading-space token, non-space token, space\r\n        // token, non-space token, space token... ]. In other words, the first\r\n        // item is the leading space (or the empty string), and the rest of\r\n        // the tokens are [non-space, space] token pairs.\r\n        var tokenCount = sentence.length * 2;\r\n        if (ii === 0) {\r\n          tokenCount += 1;\r\n        }\r\n        return tokens.splice(0, tokenCount).join('');\r\n      }\r\n      return sentence.join(\" \");\r\n    });\r\n};\r\n"},"lineCount":261}},"hash":"240cab305b4899fb5412bc0a25f864e5","cacheData":{"env":{}}}