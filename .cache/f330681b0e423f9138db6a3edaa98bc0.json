{"id":"nZ65","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/jszip/package.json","includedInParent":true,"mtime":1510180218000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1535346284235},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439}],"generated":{"js":"'use strict';\n\n/**\n * A worker that does nothing but passing chunks to the next one. This is like\n * a nodejs stream but with some differences. On the good side :\n * - it works on IE 6-9 without any issue / polyfill\n * - it weights less than the full dependencies bundled with browserify\n * - it forwards errors (no need to declare an error handler EVERYWHERE)\n *\n * A chunk is an object with 2 attributes : `meta` and `data`. The former is an\n * object containing anything (`percent` for example), see each worker for more\n * details. The latter is the real data (String, Uint8Array, etc).\n *\n * @constructor\n * @param {String} name the name of the stream (mainly used for debugging purposes)\n */\nfunction GenericWorker(name) {\n    // the name of the worker\n    this.name = name || \"default\";\n    // an object containing metadata about the workers chain\n    this.streamInfo = {};\n    // an error which happened when the worker was paused\n    this.generatedError = null;\n    // an object containing metadata to be merged by this worker into the general metadata\n    this.extraStreamInfo = {};\n    // true if the stream is paused (and should not do anything), false otherwise\n    this.isPaused = true;\n    // true if the stream is finished (and should not do anything), false otherwise\n    this.isFinished = false;\n    // true if the stream is locked to prevent further structure updates (pipe), false otherwise\n    this.isLocked = false;\n    // the event listeners\n    this._listeners = {\n        'data':[],\n        'end':[],\n        'error':[]\n    };\n    // the previous worker, if any\n    this.previous = null;\n}\n\nGenericWorker.prototype = {\n    /**\n     * Push a chunk to the next workers.\n     * @param {Object} chunk the chunk to push\n     */\n    push : function (chunk) {\n        this.emit(\"data\", chunk);\n    },\n    /**\n     * End the stream.\n     * @return {Boolean} true if this call ended the worker, false otherwise.\n     */\n    end : function () {\n        if (this.isFinished) {\n            return false;\n        }\n\n        this.flush();\n        try {\n            this.emit(\"end\");\n            this.cleanUp();\n            this.isFinished = true;\n        } catch (e) {\n            this.emit(\"error\", e);\n        }\n        return true;\n    },\n    /**\n     * End the stream with an error.\n     * @param {Error} e the error which caused the premature end.\n     * @return {Boolean} true if this call ended the worker with an error, false otherwise.\n     */\n    error : function (e) {\n        if (this.isFinished) {\n            return false;\n        }\n\n        if(this.isPaused) {\n            this.generatedError = e;\n        } else {\n            this.isFinished = true;\n\n            this.emit(\"error\", e);\n\n            // in the workers chain exploded in the middle of the chain,\n            // the error event will go downward but we also need to notify\n            // workers upward that there has been an error.\n            if(this.previous) {\n                this.previous.error(e);\n            }\n\n            this.cleanUp();\n        }\n        return true;\n    },\n    /**\n     * Add a callback on an event.\n     * @param {String} name the name of the event (data, end, error)\n     * @param {Function} listener the function to call when the event is triggered\n     * @return {GenericWorker} the current object for chainability\n     */\n    on : function (name, listener) {\n        this._listeners[name].push(listener);\n        return this;\n    },\n    /**\n     * Clean any references when a worker is ending.\n     */\n    cleanUp : function () {\n        this.streamInfo = this.generatedError = this.extraStreamInfo = null;\n        this._listeners = [];\n    },\n    /**\n     * Trigger an event. This will call registered callback with the provided arg.\n     * @param {String} name the name of the event (data, end, error)\n     * @param {Object} arg the argument to call the callback with.\n     */\n    emit : function (name, arg) {\n        if (this._listeners[name]) {\n            for(var i = 0; i < this._listeners[name].length; i++) {\n                this._listeners[name][i].call(this, arg);\n            }\n        }\n    },\n    /**\n     * Chain a worker with an other.\n     * @param {Worker} next the worker receiving events from the current one.\n     * @return {worker} the next worker for chainability\n     */\n    pipe : function (next) {\n        return next.registerPrevious(this);\n    },\n    /**\n     * Same as `pipe` in the other direction.\n     * Using an API with `pipe(next)` is very easy.\n     * Implementing the API with the point of view of the next one registering\n     * a source is easier, see the ZipFileWorker.\n     * @param {Worker} previous the previous worker, sending events to this one\n     * @return {Worker} the current worker for chainability\n     */\n    registerPrevious : function (previous) {\n        if (this.isLocked) {\n            throw new Error(\"The stream '\" + this + \"' has already been used.\");\n        }\n\n        // sharing the streamInfo...\n        this.streamInfo = previous.streamInfo;\n        // ... and adding our own bits\n        this.mergeStreamInfo();\n        this.previous =  previous;\n        var self = this;\n        previous.on('data', function (chunk) {\n            self.processChunk(chunk);\n        });\n        previous.on('end', function () {\n            self.end();\n        });\n        previous.on('error', function (e) {\n            self.error(e);\n        });\n        return this;\n    },\n    /**\n     * Pause the stream so it doesn't send events anymore.\n     * @return {Boolean} true if this call paused the worker, false otherwise.\n     */\n    pause : function () {\n        if(this.isPaused || this.isFinished) {\n            return false;\n        }\n        this.isPaused = true;\n\n        if(this.previous) {\n            this.previous.pause();\n        }\n        return true;\n    },\n    /**\n     * Resume a paused stream.\n     * @return {Boolean} true if this call resumed the worker, false otherwise.\n     */\n    resume : function () {\n        if(!this.isPaused || this.isFinished) {\n            return false;\n        }\n        this.isPaused = false;\n\n        // if true, the worker tried to resume but failed\n        var withError = false;\n        if(this.generatedError) {\n            this.error(this.generatedError);\n            withError = true;\n        }\n        if(this.previous) {\n            this.previous.resume();\n        }\n\n        return !withError;\n    },\n    /**\n     * Flush any remaining bytes as the stream is ending.\n     */\n    flush : function () {},\n    /**\n     * Process a chunk. This is usually the method overridden.\n     * @param {Object} chunk the chunk to process.\n     */\n    processChunk : function(chunk) {\n        this.push(chunk);\n    },\n    /**\n     * Add a key/value to be added in the workers chain streamInfo once activated.\n     * @param {String} key the key to use\n     * @param {Object} value the associated value\n     * @return {Worker} the current worker for chainability\n     */\n    withStreamInfo : function (key, value) {\n        this.extraStreamInfo[key] = value;\n        this.mergeStreamInfo();\n        return this;\n    },\n    /**\n     * Merge this worker's streamInfo into the chain's streamInfo.\n     */\n    mergeStreamInfo : function () {\n        for(var key in this.extraStreamInfo) {\n            if (!this.extraStreamInfo.hasOwnProperty(key)) {\n                continue;\n            }\n            this.streamInfo[key] = this.extraStreamInfo[key];\n        }\n    },\n\n    /**\n     * Lock the stream to prevent further updates on the workers chain.\n     * After calling this method, all calls to pipe will fail.\n     */\n    lock: function () {\n        if (this.isLocked) {\n            throw new Error(\"The stream '\" + this + \"' has already been used.\");\n        }\n        this.isLocked = true;\n        if (this.previous) {\n            this.previous.lock();\n        }\n    },\n\n    /**\n     *\n     * Pretty print the workers chain.\n     */\n    toString : function () {\n        var me = \"Worker \" + this.name;\n        if (this.previous) {\n            return this.previous + \" -> \" + me;\n        } else {\n            return me;\n        }\n    }\n};\n\nmodule.exports = GenericWorker;\n","map":{"mappings":[{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/jszip/lib/stream/GenericWorker.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}}],"sources":{"node_modules/jszip/lib/stream/GenericWorker.js":"'use strict';\n\n/**\n * A worker that does nothing but passing chunks to the next one. This is like\n * a nodejs stream but with some differences. On the good side :\n * - it works on IE 6-9 without any issue / polyfill\n * - it weights less than the full dependencies bundled with browserify\n * - it forwards errors (no need to declare an error handler EVERYWHERE)\n *\n * A chunk is an object with 2 attributes : `meta` and `data`. The former is an\n * object containing anything (`percent` for example), see each worker for more\n * details. The latter is the real data (String, Uint8Array, etc).\n *\n * @constructor\n * @param {String} name the name of the stream (mainly used for debugging purposes)\n */\nfunction GenericWorker(name) {\n    // the name of the worker\n    this.name = name || \"default\";\n    // an object containing metadata about the workers chain\n    this.streamInfo = {};\n    // an error which happened when the worker was paused\n    this.generatedError = null;\n    // an object containing metadata to be merged by this worker into the general metadata\n    this.extraStreamInfo = {};\n    // true if the stream is paused (and should not do anything), false otherwise\n    this.isPaused = true;\n    // true if the stream is finished (and should not do anything), false otherwise\n    this.isFinished = false;\n    // true if the stream is locked to prevent further structure updates (pipe), false otherwise\n    this.isLocked = false;\n    // the event listeners\n    this._listeners = {\n        'data':[],\n        'end':[],\n        'error':[]\n    };\n    // the previous worker, if any\n    this.previous = null;\n}\n\nGenericWorker.prototype = {\n    /**\n     * Push a chunk to the next workers.\n     * @param {Object} chunk the chunk to push\n     */\n    push : function (chunk) {\n        this.emit(\"data\", chunk);\n    },\n    /**\n     * End the stream.\n     * @return {Boolean} true if this call ended the worker, false otherwise.\n     */\n    end : function () {\n        if (this.isFinished) {\n            return false;\n        }\n\n        this.flush();\n        try {\n            this.emit(\"end\");\n            this.cleanUp();\n            this.isFinished = true;\n        } catch (e) {\n            this.emit(\"error\", e);\n        }\n        return true;\n    },\n    /**\n     * End the stream with an error.\n     * @param {Error} e the error which caused the premature end.\n     * @return {Boolean} true if this call ended the worker with an error, false otherwise.\n     */\n    error : function (e) {\n        if (this.isFinished) {\n            return false;\n        }\n\n        if(this.isPaused) {\n            this.generatedError = e;\n        } else {\n            this.isFinished = true;\n\n            this.emit(\"error\", e);\n\n            // in the workers chain exploded in the middle of the chain,\n            // the error event will go downward but we also need to notify\n            // workers upward that there has been an error.\n            if(this.previous) {\n                this.previous.error(e);\n            }\n\n            this.cleanUp();\n        }\n        return true;\n    },\n    /**\n     * Add a callback on an event.\n     * @param {String} name the name of the event (data, end, error)\n     * @param {Function} listener the function to call when the event is triggered\n     * @return {GenericWorker} the current object for chainability\n     */\n    on : function (name, listener) {\n        this._listeners[name].push(listener);\n        return this;\n    },\n    /**\n     * Clean any references when a worker is ending.\n     */\n    cleanUp : function () {\n        this.streamInfo = this.generatedError = this.extraStreamInfo = null;\n        this._listeners = [];\n    },\n    /**\n     * Trigger an event. This will call registered callback with the provided arg.\n     * @param {String} name the name of the event (data, end, error)\n     * @param {Object} arg the argument to call the callback with.\n     */\n    emit : function (name, arg) {\n        if (this._listeners[name]) {\n            for(var i = 0; i < this._listeners[name].length; i++) {\n                this._listeners[name][i].call(this, arg);\n            }\n        }\n    },\n    /**\n     * Chain a worker with an other.\n     * @param {Worker} next the worker receiving events from the current one.\n     * @return {worker} the next worker for chainability\n     */\n    pipe : function (next) {\n        return next.registerPrevious(this);\n    },\n    /**\n     * Same as `pipe` in the other direction.\n     * Using an API with `pipe(next)` is very easy.\n     * Implementing the API with the point of view of the next one registering\n     * a source is easier, see the ZipFileWorker.\n     * @param {Worker} previous the previous worker, sending events to this one\n     * @return {Worker} the current worker for chainability\n     */\n    registerPrevious : function (previous) {\n        if (this.isLocked) {\n            throw new Error(\"The stream '\" + this + \"' has already been used.\");\n        }\n\n        // sharing the streamInfo...\n        this.streamInfo = previous.streamInfo;\n        // ... and adding our own bits\n        this.mergeStreamInfo();\n        this.previous =  previous;\n        var self = this;\n        previous.on('data', function (chunk) {\n            self.processChunk(chunk);\n        });\n        previous.on('end', function () {\n            self.end();\n        });\n        previous.on('error', function (e) {\n            self.error(e);\n        });\n        return this;\n    },\n    /**\n     * Pause the stream so it doesn't send events anymore.\n     * @return {Boolean} true if this call paused the worker, false otherwise.\n     */\n    pause : function () {\n        if(this.isPaused || this.isFinished) {\n            return false;\n        }\n        this.isPaused = true;\n\n        if(this.previous) {\n            this.previous.pause();\n        }\n        return true;\n    },\n    /**\n     * Resume a paused stream.\n     * @return {Boolean} true if this call resumed the worker, false otherwise.\n     */\n    resume : function () {\n        if(!this.isPaused || this.isFinished) {\n            return false;\n        }\n        this.isPaused = false;\n\n        // if true, the worker tried to resume but failed\n        var withError = false;\n        if(this.generatedError) {\n            this.error(this.generatedError);\n            withError = true;\n        }\n        if(this.previous) {\n            this.previous.resume();\n        }\n\n        return !withError;\n    },\n    /**\n     * Flush any remaining bytes as the stream is ending.\n     */\n    flush : function () {},\n    /**\n     * Process a chunk. This is usually the method overridden.\n     * @param {Object} chunk the chunk to process.\n     */\n    processChunk : function(chunk) {\n        this.push(chunk);\n    },\n    /**\n     * Add a key/value to be added in the workers chain streamInfo once activated.\n     * @param {String} key the key to use\n     * @param {Object} value the associated value\n     * @return {Worker} the current worker for chainability\n     */\n    withStreamInfo : function (key, value) {\n        this.extraStreamInfo[key] = value;\n        this.mergeStreamInfo();\n        return this;\n    },\n    /**\n     * Merge this worker's streamInfo into the chain's streamInfo.\n     */\n    mergeStreamInfo : function () {\n        for(var key in this.extraStreamInfo) {\n            if (!this.extraStreamInfo.hasOwnProperty(key)) {\n                continue;\n            }\n            this.streamInfo[key] = this.extraStreamInfo[key];\n        }\n    },\n\n    /**\n     * Lock the stream to prevent further updates on the workers chain.\n     * After calling this method, all calls to pipe will fail.\n     */\n    lock: function () {\n        if (this.isLocked) {\n            throw new Error(\"The stream '\" + this + \"' has already been used.\");\n        }\n        this.isLocked = true;\n        if (this.previous) {\n            this.previous.lock();\n        }\n    },\n\n    /**\n     *\n     * Pretty print the workers chain.\n     */\n    toString : function () {\n        var me = \"Worker \" + this.name;\n        if (this.previous) {\n            return this.previous + \" -> \" + me;\n        } else {\n            return me;\n        }\n    }\n};\n\nmodule.exports = GenericWorker;\n"},"lineCount":264}},"hash":"6ea87fc33f1331c8782a6fcefc3ca621","cacheData":{"env":{}}}