{"id":"node_modules/random-gradient/index.js","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/random-gradient/package.json","includedInParent":true,"mtime":1496885464000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1533850120610},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"string-hash","loc":{"line":4,"column":21},"parent":"/Users/nick/projects/tomespark/node_modules/random-gradient/index.js","resolved":"/Users/nick/projects/tomespark/node_modules/string-hash/index.js"},{"name":"tinycolor2","loc":{"line":5,"column":22},"parent":"/Users/nick/projects/tomespark/node_modules/random-gradient/index.js","resolved":"/Users/nick/projects/tomespark/node_modules/tinycolor2/tinycolor.js"}],"generated":{"js":"\n'use strict'\n\nconst hash = require('string-hash')\nconst color = require('tinycolor2')\n\nmodule.exports = (uid, type = 'diagonal') => {\n  if (uid) {\n    const n = hash(uid)\n    const c1 = color({h: n % 360, s: 0.95, l: 0.5})\n    const c1_ = c1.toHexString()\n    const c2 = c1.triad()[1].toHexString()\n\n    switch (type) {\n      case 'diagonal':\n        return `linear-gradient(to top right, ${c1_}, ${c2})`\n\n      case 'radial':\n        return `radial-gradient(circle, ${c1_}, ${c2})`\n\n      case 'horizontal':\n        return `linear-gradient(${c1_}, ${c2})`\n\n      case 'vertical':\n        return `linear-gradient(to right, ${c1_}, ${c2})`\n\n      default:\n        return `linear-gradient(to top right, ${c1_}, ${c2})`\n    }\n  }\n\n  throw new TypeError('uid is required')\n}\n","map":{"mappings":[{"source":"node_modules/random-gradient/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/random-gradient/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/random-gradient/index.js":"\n'use strict'\n\nconst hash = require('string-hash')\nconst color = require('tinycolor2')\n\nmodule.exports = (uid, type = 'diagonal') => {\n  if (uid) {\n    const n = hash(uid)\n    const c1 = color({h: n % 360, s: 0.95, l: 0.5})\n    const c1_ = c1.toHexString()\n    const c2 = c1.triad()[1].toHexString()\n\n    switch (type) {\n      case 'diagonal':\n        return `linear-gradient(to top right, ${c1_}, ${c2})`\n\n      case 'radial':\n        return `radial-gradient(circle, ${c1_}, ${c2})`\n\n      case 'horizontal':\n        return `linear-gradient(${c1_}, ${c2})`\n\n      case 'vertical':\n        return `linear-gradient(to right, ${c1_}, ${c2})`\n\n      default:\n        return `linear-gradient(to top right, ${c1_}, ${c2})`\n    }\n  }\n\n  throw new TypeError('uid is required')\n}\n"},"lineCount":34}},"hash":"2dca0faee940870076557227285c6b1f","cacheData":{"env":{}}}