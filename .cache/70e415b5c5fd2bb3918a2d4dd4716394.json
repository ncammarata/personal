{"id":"hk8q","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/jszip/package.json","includedInParent":true,"mtime":1510180218000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534960276803},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"./utils","loc":{"line":5,"column":20},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/load.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/utils.js"},{"name":"./external","loc":{"line":3,"column":23},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/load.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/external.js"},{"name":"./utf8","loc":{"line":4,"column":19},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/load.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/utf8.js"},{"name":"./zipEntries","loc":{"line":6,"column":25},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/load.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipEntries.js"},{"name":"./stream/Crc32Probe","loc":{"line":7,"column":25},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/load.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/stream/Crc32Probe.js"},{"name":"./nodejsUtils","loc":{"line":8,"column":26},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/load.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/nodejsUtils.js"}],"generated":{"js":"'use strict';\nvar utils = require('./utils');\nvar external = require(\"./external\");\nvar utf8 = require('./utf8');\nvar utils = require('./utils');\nvar ZipEntries = require('./zipEntries');\nvar Crc32Probe = require('./stream/Crc32Probe');\nvar nodejsUtils = require(\"./nodejsUtils\");\n\n/**\n * Check the CRC32 of an entry.\n * @param {ZipEntry} zipEntry the zip entry to check.\n * @return {Promise} the result.\n */\nfunction checkEntryCRC32(zipEntry) {\n    return new external.Promise(function (resolve, reject) {\n        var worker = zipEntry.decompressed.getContentWorker().pipe(new Crc32Probe());\n        worker.on(\"error\", function (e) {\n            reject(e);\n        })\n        .on(\"end\", function () {\n            if (worker.streamInfo.crc32 !== zipEntry.decompressed.crc32) {\n                reject(new Error(\"Corrupted zip : CRC32 mismatch\"));\n            } else {\n                resolve();\n            }\n        })\n        .resume();\n    });\n}\n\nmodule.exports = function(data, options) {\n    var zip = this;\n    options = utils.extend(options || {}, {\n        base64: false,\n        checkCRC32: false,\n        optimizedBinaryString: false,\n        createFolders: false,\n        decodeFileName: utf8.utf8decode\n    });\n\n    if (nodejsUtils.isNode && nodejsUtils.isStream(data)) {\n        return external.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\"));\n    }\n\n    return utils.prepareContent(\"the loaded zip file\", data, true, options.optimizedBinaryString, options.base64)\n    .then(function(data) {\n        var zipEntries = new ZipEntries(options);\n        zipEntries.load(data);\n        return zipEntries;\n    }).then(function checkCRC32(zipEntries) {\n        var promises = [external.Promise.resolve(zipEntries)];\n        var files = zipEntries.files;\n        if (options.checkCRC32) {\n            for (var i = 0; i < files.length; i++) {\n                promises.push(checkEntryCRC32(files[i]));\n            }\n        }\n        return external.Promise.all(promises);\n    }).then(function addFiles(results) {\n        var zipEntries = results.shift();\n        var files = zipEntries.files;\n        for (var i = 0; i < files.length; i++) {\n            var input = files[i];\n            zip.file(input.fileNameStr, input.decompressed, {\n                binary: true,\n                optimizedBinaryString: true,\n                date: input.date,\n                dir: input.dir,\n                comment : input.fileCommentStr.length ? input.fileCommentStr : null,\n                unixPermissions : input.unixPermissions,\n                dosPermissions : input.dosPermissions,\n                createFolders: options.createFolders\n            });\n        }\n        if (zipEntries.zipComment.length) {\n            zip.comment = zipEntries.zipComment;\n        }\n\n        return zip;\n    });\n};\n","map":{"mappings":[{"source":"node_modules/jszip/lib/load.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jszip/lib/load.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}}],"sources":{"node_modules/jszip/lib/load.js":"'use strict';\nvar utils = require('./utils');\nvar external = require(\"./external\");\nvar utf8 = require('./utf8');\nvar utils = require('./utils');\nvar ZipEntries = require('./zipEntries');\nvar Crc32Probe = require('./stream/Crc32Probe');\nvar nodejsUtils = require(\"./nodejsUtils\");\n\n/**\n * Check the CRC32 of an entry.\n * @param {ZipEntry} zipEntry the zip entry to check.\n * @return {Promise} the result.\n */\nfunction checkEntryCRC32(zipEntry) {\n    return new external.Promise(function (resolve, reject) {\n        var worker = zipEntry.decompressed.getContentWorker().pipe(new Crc32Probe());\n        worker.on(\"error\", function (e) {\n            reject(e);\n        })\n        .on(\"end\", function () {\n            if (worker.streamInfo.crc32 !== zipEntry.decompressed.crc32) {\n                reject(new Error(\"Corrupted zip : CRC32 mismatch\"));\n            } else {\n                resolve();\n            }\n        })\n        .resume();\n    });\n}\n\nmodule.exports = function(data, options) {\n    var zip = this;\n    options = utils.extend(options || {}, {\n        base64: false,\n        checkCRC32: false,\n        optimizedBinaryString: false,\n        createFolders: false,\n        decodeFileName: utf8.utf8decode\n    });\n\n    if (nodejsUtils.isNode && nodejsUtils.isStream(data)) {\n        return external.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\"));\n    }\n\n    return utils.prepareContent(\"the loaded zip file\", data, true, options.optimizedBinaryString, options.base64)\n    .then(function(data) {\n        var zipEntries = new ZipEntries(options);\n        zipEntries.load(data);\n        return zipEntries;\n    }).then(function checkCRC32(zipEntries) {\n        var promises = [external.Promise.resolve(zipEntries)];\n        var files = zipEntries.files;\n        if (options.checkCRC32) {\n            for (var i = 0; i < files.length; i++) {\n                promises.push(checkEntryCRC32(files[i]));\n            }\n        }\n        return external.Promise.all(promises);\n    }).then(function addFiles(results) {\n        var zipEntries = results.shift();\n        var files = zipEntries.files;\n        for (var i = 0; i < files.length; i++) {\n            var input = files[i];\n            zip.file(input.fileNameStr, input.decompressed, {\n                binary: true,\n                optimizedBinaryString: true,\n                date: input.date,\n                dir: input.dir,\n                comment : input.fileCommentStr.length ? input.fileCommentStr : null,\n                unixPermissions : input.unixPermissions,\n                dosPermissions : input.dosPermissions,\n                createFolders: options.createFolders\n            });\n        }\n        if (zipEntries.zipComment.length) {\n            zip.comment = zipEntries.zipComment;\n        }\n\n        return zip;\n    });\n};\n"},"lineCount":83}},"hash":"5dbfa11d8eba1282f0f119fda0e5d7e6","cacheData":{"env":{}}}