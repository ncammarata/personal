{"dependencies":[{"name":"mobx"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _desc, _value, _class, _descriptor, _descriptor2, _descriptor3;\n\nvar _mobx = require(\"mobx\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _initDefineProp(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n}\n\nvar Store = (_class = function Store() {\n  var _this = this;\n\n  _classCallCheck(this, Store);\n\n  _initDefineProp(this, \"book\", _descriptor, this);\n\n  _initDefineProp(this, \"comments\", _descriptor2, this);\n\n  _initDefineProp(this, \"currentTitle\", _descriptor3, this);\n\n  this.commentsRef = null;\n\n  this.setTitle = function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(title) {\n      var book;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"http://localhost:3000?title=\" + title);\n\n            case 2:\n              _context.next = 4;\n              return _context.sent.json();\n\n            case 4:\n              book = _context.sent;\n\n              _this.book = book;\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, _this);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.addComment = function (key, val) {\n    console.log(\"adding comment\");\n    var comments = _extends({}, (0, _mobx.toJS)(_this.comments), _defineProperty({}, key, val));\n    _this.commentsRef.set(comments);\n  };\n\n  this.setComments = function (snapshot) {\n    console.log(\"val is\", snapshot.val());\n    var val = snapshot.val();\n    if (val) {\n      _this.comments = snapshot.val();\n    }\n  };\n\n  window.setTitle = this.setTitle;\n\n  (0, _mobx.observe)(this, \"currentTitle\", function () {\n    if (_this.commentsRef) {\n      _this.commentsRef.off(\"value\", _this.setComments);\n    }\n\n    _this.commentsRef = firebase.database().ref(_this.currentTitle + \"/comments\");\n\n    _this.commentsRef.on(\"value\", _this.setComments);\n  }, true);\n\n  this.setTitle(\"skin\");\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"book\", [_mobx.observable], {\n  enumerable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"comments\", [_mobx.observable], {\n  enumerable: true,\n  initializer: function initializer() {\n    return {};\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"currentTitle\", [_mobx.observable], {\n  enumerable: true,\n  initializer: function initializer() {\n    return \"skin\";\n  }\n})), _class);\nexports.default = Store;"},"hash":"2f7b70d93c82b53c38813957e1a27756"}