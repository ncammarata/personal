{"id":"30bP","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/react-html-parser/package.json","includedInParent":true,"mtime":1511999640000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534115700413},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmptyTextNode;\n/**\n * Tests a htmlparser2 node and returns whether is it a text node at the start and end of the line containing only\n * white space. This allows these node types to be excluded from the rendering because they are unnecessary.\n *\n * @param {Object} node The element object as created by htmlparser2\n * @returns {boolean} Whether the node is an empty text node\n */\nfunction isEmptyTextNode(node) {\n  return node.type === 'text' && /\\r?\\n/.test(node.data) && node.data.trim() === '';\n}","map":{"mappings":[{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"node_modules/react-html-parser/lib/utils/isEmptyTextNode.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmptyTextNode;\n/**\n * Tests a htmlparser2 node and returns whether is it a text node at the start and end of the line containing only\n * white space. This allows these node types to be excluded from the rendering because they are unnecessary.\n *\n * @param {Object} node The element object as created by htmlparser2\n * @returns {boolean} Whether the node is an empty text node\n */\nfunction isEmptyTextNode(node) {\n  return node.type === 'text' && /\\r?\\n/.test(node.data) && node.data.trim() === '';\n}"},"lineCount":16}},"hash":"89b7ae21e4f804147c4cb703558d54cd","cacheData":{"env":{}}}