{"dependencies":[{"name":"mobx-react"},{"name":"react-icons-kit"},{"name":"react-icons-kit/typicons"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _class3;\n\nvar _mobxReact = require(\"mobx-react\");\n\nvar _reactIconsKit = require(\"react-icons-kit\");\n\nvar _typicons = require(\"react-icons-kit/typicons\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar darkBG = \"#1b2733\";\n\nvar Item = (0, _mobxReact.observer)(_class = function (_Component) {\n  _inherits(Item, _Component);\n\n  function Item() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Item);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Item.__proto__ || Object.getPrototypeOf(Item)).call.apply(_ref, [this].concat(args))), _this), _this.state = { hover: false }, _this.styles = {\n      btn: {\n        padding: \"3px 15px\",\n        opacity: 0.6,\n        transition: \"all 150ms ease-in\",\n        animationDelay: \"300ms\",\n        position: \"relative\"\n      },\n      name: {\n        opacity: 0,\n        position: \"absolute\",\n        left: 0,\n        top: -20,\n        pointerEvents: \"none\",\n        background: darkBG,\n        color: \"rgba(255, 255, 255, 0.9)\",\n        transition: \"all 100ms ease-in\",\n        padding: \"5px 8px\",\n        borderRadius: 5,\n        fontSize: 14,\n        fontWeight: 600\n      },\n      showName: {\n        opacity: 1,\n        transform: \"translateY(-20px)\"\n      },\n      hover: {\n        opacity: 1\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Item, [{\n    key: \"show\",\n    value: function show() {\n      var _this2 = this;\n\n      var _props = this.props,\n          icon = _props.icon,\n          onClick = _props.onClick,\n          name = _props.name;\n      var hover = this.state.hover;\n\n\n      return React.createElement(\n        \"btn\",\n        {\n          $hover: hover,\n          onMouseEnter: function onMouseEnter() {\n            _this2.setState({ hover: true });\n          },\n          onMouseLeave: function onMouseLeave() {\n            _this2.setState({ hover: false });\n          },\n          onClick: onClick\n        },\n        React.createElement(_reactIconsKit.Icon, { style: { color: \"white\" }, size: 24, icon: icon }),\n        React.createElement(\n          \"name\",\n          { $showName: hover },\n          name\n        )\n      );\n    }\n  }]);\n\n  return Item;\n}(Component)) || _class;\n\nvar Tooltip = (0, _mobxReact.observer)(_class3 = function (_Component2) {\n  _inherits(Tooltip, _Component2);\n\n  function Tooltip() {\n    var _ref2;\n\n    var _temp2, _this3, _ret2;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _ret2 = (_temp2 = (_this3 = _possibleConstructorReturn(this, (_ref2 = Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call.apply(_ref2, [this].concat(args))), _this3), _this3.state = {\n      show: false,\n      left: 0,\n      top: 0,\n      comment: \"\",\n      selectData: null,\n      showComment: false\n    }, _this3.hide = function () {\n      _this3.setState({ show: false });\n      setTimeout(function () {\n        _this3.setState({ showComment: false, comment: \"\" });\n      }, 150);\n    }, _this3.onKeyDown = function (e) {\n      var store = _this3.props.store;\n      var _this3$state$selectDa = _this3.state.selectData,\n          context = _this3$state$selectDa.context,\n          selected = _this3$state$selectDa.selected;\n\n\n      if (e.keyCode === 27) {\n        _this3.hide();\n      }\n\n      if (e.keyCode === 13 && e.metaKey) {\n        store.addComment(context.hashCode(), {\n          comment: _this3.state.comment,\n          selected: selected\n        });\n        _this3.hide();\n      }\n    }, _this3.styles = {\n      tooltip: {\n        zIndex: 1000,\n        position: \"fixed\",\n        margin: 20,\n        boxShadow: \"0 0 0 1px #000, 0 8px 16px rgba(27,39,51,0.16)\",\n        border: \"1px solid rgba(0, 0, 0, 0.2)\",\n        transition: \"opacity 70ms ease-in, transform 90ms ease-in\",\n        borderRadius: 5,\n        padding: 5\n      },\n      hide: {\n        pointerEvents: \"none\",\n        transform: \"translate(0px, 10px)\",\n        opacity: 0\n      },\n      show: {\n        transform: \"translate(0px, 0px)\",\n        opacity: 1\n      },\n      items: {\n        flexFlow: \"row\"\n      },\n      textarea: {\n        border: \"0px solid rgba(0, 0, 0, 0.2)\",\n        padding: 5,\n        color: \"rgba(0, 0, 0, 0.8)\",\n        width: 300,\n        height: 150,\n        fontSize: 14\n      }\n    }, _temp2), _possibleConstructorReturn(_this3, _ret2);\n  }\n\n  _createClass(Tooltip, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this4 = this;\n\n      window.addEventListener(\"mouseup\", function (_ref3) {\n        var target = _ref3.target;\n\n        var s = window.getSelection();\n        var inTooltip = false;\n        var inContent = false;\n        // special class to disable commenting\n        var noTooltip = false;\n\n        do {\n          if ((target.tagName || \"\").toLowerCase() === \"tooltip\") {\n            inTooltip = true;\n          }\n          if ((target.tagName || \"\").toLowerCase() === \"content\") {\n            inContent = true;\n          }\n\n          if (target.classList && target.classList.contains(\"no-tooltip\")) {\n            noTooltip = true;\n          }\n\n          target = target.parentNode;\n        } while (target);\n\n        if (inTooltip) {\n          return false;\n        }\n\n        if (noTooltip || !inContent || (s + \"\").trim().length === 0) {\n          _this4.setState({ show: false });\n          return;\n        }\n\n        var oRange = s.getRangeAt(0);\n\n        var _oRange$getBoundingCl = oRange.getBoundingClientRect(),\n            left = _oRange$getBoundingCl.left,\n            top = _oRange$getBoundingCl.top;\n\n        var selectData = { selected: s + \"\", context: s.anchorNode.data };\n        _this4.setState({ left: left, top: top, show: true, selectData: selectData });\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this5 = this;\n\n      var _state = this.state,\n          show = _state.show,\n          left = _state.left,\n          top = _state.top,\n          showComment = _state.showComment;\n\n\n      return React.createElement(\n        \"tooltip\",\n        {\n          $hide: !show,\n          $show: show,\n          style: {\n            left: left,\n            top: top,\n            background: showComment ? \"rgba(255, 255, 255, 0.95)\" : darkBG\n          }\n        },\n        showComment && React.createElement(\"textarea\", {\n          onKeyDown: this.onKeyDown,\n          autoFocus: true,\n          onChange: function onChange(e) {\n            return _this5.setState({ comment: e.target.value });\n          },\n          value: this.state.comment,\n          placeholder: \"bravo, brilliant\"\n        }),\n        !showComment && React.createElement(\n          \"items\",\n          null,\n          React.createElement(Item, { icon: _typicons.heart, name: \"like\" }),\n          React.createElement(Item, { icon: _typicons.lightbulb, name: \"save\" }),\n          React.createElement(Item, { icon: _typicons.location, name: \"beacon\" }),\n          React.createElement(Item, {\n            icon: _typicons.pen,\n            name: \"comment\",\n            onClick: function onClick() {\n              return _this5.setState({ showComment: true });\n            }\n          })\n        )\n      );\n    }\n  }]);\n\n  return Tooltip;\n}(Component)) || _class3;\n\nexports.default = Tooltip;"},"hash":"67cad426183e6a36e0c9917c69f7d242"}