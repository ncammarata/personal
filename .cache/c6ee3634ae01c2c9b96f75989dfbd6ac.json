{"id":"9dXP","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/jszip/package.json","includedInParent":true,"mtime":1510180218000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534960276803},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"../utils","loc":{"line":2,"column":20},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/reader/DataReader.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/utils.js"}],"generated":{"js":"'use strict';\nvar utils = require('../utils');\n\nfunction DataReader(data) {\n    this.data = data; // type : see implementation\n    this.length = data.length;\n    this.index = 0;\n    this.zero = 0;\n}\nDataReader.prototype = {\n    /**\n     * Check that the offset will not go too far.\n     * @param {string} offset the additional offset to check.\n     * @throws {Error} an Error if the offset is out of bounds.\n     */\n    checkOffset: function(offset) {\n        this.checkIndex(this.index + offset);\n    },\n    /**\n     * Check that the specified index will not be too far.\n     * @param {string} newIndex the index to check.\n     * @throws {Error} an Error if the index is out of bounds.\n     */\n    checkIndex: function(newIndex) {\n        if (this.length < this.zero + newIndex || newIndex < 0) {\n            throw new Error(\"End of data reached (data length = \" + this.length + \", asked index = \" + (newIndex) + \"). Corrupted zip ?\");\n        }\n    },\n    /**\n     * Change the index.\n     * @param {number} newIndex The new index.\n     * @throws {Error} if the new index is out of the data.\n     */\n    setIndex: function(newIndex) {\n        this.checkIndex(newIndex);\n        this.index = newIndex;\n    },\n    /**\n     * Skip the next n bytes.\n     * @param {number} n the number of bytes to skip.\n     * @throws {Error} if the new index is out of the data.\n     */\n    skip: function(n) {\n        this.setIndex(this.index + n);\n    },\n    /**\n     * Get the byte at the specified index.\n     * @param {number} i the index to use.\n     * @return {number} a byte.\n     */\n    byteAt: function(i) {\n        // see implementations\n    },\n    /**\n     * Get the next number with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {number} the corresponding number.\n     */\n    readInt: function(size) {\n        var result = 0,\n            i;\n        this.checkOffset(size);\n        for (i = this.index + size - 1; i >= this.index; i--) {\n            result = (result << 8) + this.byteAt(i);\n        }\n        this.index += size;\n        return result;\n    },\n    /**\n     * Get the next string with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {string} the corresponding string.\n     */\n    readString: function(size) {\n        return utils.transformTo(\"string\", this.readData(size));\n    },\n    /**\n     * Get raw data without conversion, <size> bytes.\n     * @param {number} size the number of bytes to read.\n     * @return {Object} the raw data, implementation specific.\n     */\n    readData: function(size) {\n        // see implementations\n    },\n    /**\n     * Find the last occurence of a zip signature (4 bytes).\n     * @param {string} sig the signature to find.\n     * @return {number} the index of the last occurence, -1 if not found.\n     */\n    lastIndexOfSignature: function(sig) {\n        // see implementations\n    },\n    /**\n     * Read the signature (4 bytes) at the current position and compare it with sig.\n     * @param {string} sig the expected signature\n     * @return {boolean} true if the signature matches, false otherwise.\n     */\n    readAndCheckSignature: function(sig) {\n        // see implementations\n    },\n    /**\n     * Get the next date.\n     * @return {Date} the date.\n     */\n    readDate: function() {\n        var dostime = this.readInt(4);\n        return new Date(Date.UTC(\n        ((dostime >> 25) & 0x7f) + 1980, // year\n        ((dostime >> 21) & 0x0f) - 1, // month\n        (dostime >> 16) & 0x1f, // day\n        (dostime >> 11) & 0x1f, // hour\n        (dostime >> 5) & 0x3f, // minute\n        (dostime & 0x1f) << 1)); // second\n    }\n};\nmodule.exports = DataReader;\n","map":{"mappings":[{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jszip/lib/reader/DataReader.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}}],"sources":{"node_modules/jszip/lib/reader/DataReader.js":"'use strict';\nvar utils = require('../utils');\n\nfunction DataReader(data) {\n    this.data = data; // type : see implementation\n    this.length = data.length;\n    this.index = 0;\n    this.zero = 0;\n}\nDataReader.prototype = {\n    /**\n     * Check that the offset will not go too far.\n     * @param {string} offset the additional offset to check.\n     * @throws {Error} an Error if the offset is out of bounds.\n     */\n    checkOffset: function(offset) {\n        this.checkIndex(this.index + offset);\n    },\n    /**\n     * Check that the specified index will not be too far.\n     * @param {string} newIndex the index to check.\n     * @throws {Error} an Error if the index is out of bounds.\n     */\n    checkIndex: function(newIndex) {\n        if (this.length < this.zero + newIndex || newIndex < 0) {\n            throw new Error(\"End of data reached (data length = \" + this.length + \", asked index = \" + (newIndex) + \"). Corrupted zip ?\");\n        }\n    },\n    /**\n     * Change the index.\n     * @param {number} newIndex The new index.\n     * @throws {Error} if the new index is out of the data.\n     */\n    setIndex: function(newIndex) {\n        this.checkIndex(newIndex);\n        this.index = newIndex;\n    },\n    /**\n     * Skip the next n bytes.\n     * @param {number} n the number of bytes to skip.\n     * @throws {Error} if the new index is out of the data.\n     */\n    skip: function(n) {\n        this.setIndex(this.index + n);\n    },\n    /**\n     * Get the byte at the specified index.\n     * @param {number} i the index to use.\n     * @return {number} a byte.\n     */\n    byteAt: function(i) {\n        // see implementations\n    },\n    /**\n     * Get the next number with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {number} the corresponding number.\n     */\n    readInt: function(size) {\n        var result = 0,\n            i;\n        this.checkOffset(size);\n        for (i = this.index + size - 1; i >= this.index; i--) {\n            result = (result << 8) + this.byteAt(i);\n        }\n        this.index += size;\n        return result;\n    },\n    /**\n     * Get the next string with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {string} the corresponding string.\n     */\n    readString: function(size) {\n        return utils.transformTo(\"string\", this.readData(size));\n    },\n    /**\n     * Get raw data without conversion, <size> bytes.\n     * @param {number} size the number of bytes to read.\n     * @return {Object} the raw data, implementation specific.\n     */\n    readData: function(size) {\n        // see implementations\n    },\n    /**\n     * Find the last occurence of a zip signature (4 bytes).\n     * @param {string} sig the signature to find.\n     * @return {number} the index of the last occurence, -1 if not found.\n     */\n    lastIndexOfSignature: function(sig) {\n        // see implementations\n    },\n    /**\n     * Read the signature (4 bytes) at the current position and compare it with sig.\n     * @param {string} sig the expected signature\n     * @return {boolean} true if the signature matches, false otherwise.\n     */\n    readAndCheckSignature: function(sig) {\n        // see implementations\n    },\n    /**\n     * Get the next date.\n     * @return {Date} the date.\n     */\n    readDate: function() {\n        var dostime = this.readInt(4);\n        return new Date(Date.UTC(\n        ((dostime >> 25) & 0x7f) + 1980, // year\n        ((dostime >> 21) & 0x0f) - 1, // month\n        (dostime >> 16) & 0x1f, // day\n        (dostime >> 11) & 0x1f, // hour\n        (dostime >> 5) & 0x3f, // minute\n        (dostime & 0x1f) << 1)); // second\n    }\n};\nmodule.exports = DataReader;\n"},"lineCount":117}},"hash":"42f6c41eb50ab8049ca05fca794b7552","cacheData":{"env":{}}}