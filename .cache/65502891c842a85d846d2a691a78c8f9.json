{"id":"node_modules/jszip/lib/zipObject.js","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/jszip/package.json","includedInParent":true,"mtime":1510180218000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534291651885},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"./stream/StreamHelper","loc":{"line":3,"column":27},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipObject.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/stream/StreamHelper.js"},{"name":"./stream/DataWorker","loc":{"line":4,"column":25},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipObject.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/stream/DataWorker.js"},{"name":"./utf8","loc":{"line":5,"column":19},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipObject.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/utf8.js"},{"name":"./compressedObject","loc":{"line":6,"column":31},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipObject.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/compressedObject.js"},{"name":"./stream/GenericWorker","loc":{"line":7,"column":28},"parent":"/Users/nick/projects/tomespark/node_modules/jszip/lib/zipObject.js","resolved":"/Users/nick/projects/tomespark/node_modules/jszip/lib/stream/GenericWorker.js"}],"generated":{"js":"'use strict';\n\nvar StreamHelper = require('./stream/StreamHelper');\nvar DataWorker = require('./stream/DataWorker');\nvar utf8 = require('./utf8');\nvar CompressedObject = require('./compressedObject');\nvar GenericWorker = require('./stream/GenericWorker');\n\n/**\n * A simple object representing a file in the zip file.\n * @constructor\n * @param {string} name the name of the file\n * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data\n * @param {Object} options the options of the file\n */\nvar ZipObject = function(name, data, options) {\n    this.name = name;\n    this.dir = options.dir;\n    this.date = options.date;\n    this.comment = options.comment;\n    this.unixPermissions = options.unixPermissions;\n    this.dosPermissions = options.dosPermissions;\n\n    this._data = data;\n    this._dataBinary = options.binary;\n    // keep only the compression\n    this.options = {\n        compression : options.compression,\n        compressionOptions : options.compressionOptions\n    };\n};\n\nZipObject.prototype = {\n    /**\n     * Create an internal stream for the content of this object.\n     * @param {String} type the type of each chunk.\n     * @return StreamHelper the stream.\n     */\n    internalStream: function (type) {\n        var result = null, outputType = \"string\";\n        try {\n            if (!type) {\n                throw new Error(\"No output type specified.\");\n            }\n            outputType = type.toLowerCase();\n            var askUnicodeString = outputType === \"string\" || outputType === \"text\";\n            if (outputType === \"binarystring\" || outputType === \"text\") {\n                outputType = \"string\";\n            }\n            result = this._decompressWorker();\n\n            var isUnicodeString = !this._dataBinary;\n\n            if (isUnicodeString && !askUnicodeString) {\n                result = result.pipe(new utf8.Utf8EncodeWorker());\n            }\n            if (!isUnicodeString && askUnicodeString) {\n                result = result.pipe(new utf8.Utf8DecodeWorker());\n            }\n        } catch (e) {\n            result = new GenericWorker(\"error\");\n            result.error(e);\n        }\n\n        return new StreamHelper(result, outputType, \"\");\n    },\n\n    /**\n     * Prepare the content in the asked type.\n     * @param {String} type the type of the result.\n     * @param {Function} onUpdate a function to call on each internal update.\n     * @return Promise the promise of the result.\n     */\n    async: function (type, onUpdate) {\n        return this.internalStream(type).accumulate(onUpdate);\n    },\n\n    /**\n     * Prepare the content as a nodejs stream.\n     * @param {String} type the type of each chunk.\n     * @param {Function} onUpdate a function to call on each internal update.\n     * @return Stream the stream.\n     */\n    nodeStream: function (type, onUpdate) {\n        return this.internalStream(type || \"nodebuffer\").toNodejsStream(onUpdate);\n    },\n\n    /**\n     * Return a worker for the compressed content.\n     * @private\n     * @param {Object} compression the compression object to use.\n     * @param {Object} compressionOptions the options to use when compressing.\n     * @return Worker the worker.\n     */\n    _compressWorker: function (compression, compressionOptions) {\n        if (\n            this._data instanceof CompressedObject &&\n            this._data.compression.magic === compression.magic\n        ) {\n            return this._data.getCompressedWorker();\n        } else {\n            var result = this._decompressWorker();\n            if(!this._dataBinary) {\n                result = result.pipe(new utf8.Utf8EncodeWorker());\n            }\n            return CompressedObject.createWorkerFrom(result, compression, compressionOptions);\n        }\n    },\n    /**\n     * Return a worker for the decompressed content.\n     * @private\n     * @return Worker the worker.\n     */\n    _decompressWorker : function () {\n        if (this._data instanceof CompressedObject) {\n            return this._data.getContentWorker();\n        } else if (this._data instanceof GenericWorker) {\n            return this._data;\n        } else {\n            return new DataWorker(this._data);\n        }\n    }\n};\n\nvar removedMethods = [\"asText\", \"asBinary\", \"asNodeBuffer\", \"asUint8Array\", \"asArrayBuffer\"];\nvar removedFn = function () {\n    throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\");\n};\n\nfor(var i = 0; i < removedMethods.length; i++) {\n    ZipObject.prototype[removedMethods[i]] = removedFn;\n}\nmodule.exports = ZipObject;\n","map":{"mappings":[{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/jszip/lib/zipObject.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}}],"sources":{"node_modules/jszip/lib/zipObject.js":"'use strict';\n\nvar StreamHelper = require('./stream/StreamHelper');\nvar DataWorker = require('./stream/DataWorker');\nvar utf8 = require('./utf8');\nvar CompressedObject = require('./compressedObject');\nvar GenericWorker = require('./stream/GenericWorker');\n\n/**\n * A simple object representing a file in the zip file.\n * @constructor\n * @param {string} name the name of the file\n * @param {String|ArrayBuffer|Uint8Array|Buffer} data the data\n * @param {Object} options the options of the file\n */\nvar ZipObject = function(name, data, options) {\n    this.name = name;\n    this.dir = options.dir;\n    this.date = options.date;\n    this.comment = options.comment;\n    this.unixPermissions = options.unixPermissions;\n    this.dosPermissions = options.dosPermissions;\n\n    this._data = data;\n    this._dataBinary = options.binary;\n    // keep only the compression\n    this.options = {\n        compression : options.compression,\n        compressionOptions : options.compressionOptions\n    };\n};\n\nZipObject.prototype = {\n    /**\n     * Create an internal stream for the content of this object.\n     * @param {String} type the type of each chunk.\n     * @return StreamHelper the stream.\n     */\n    internalStream: function (type) {\n        var result = null, outputType = \"string\";\n        try {\n            if (!type) {\n                throw new Error(\"No output type specified.\");\n            }\n            outputType = type.toLowerCase();\n            var askUnicodeString = outputType === \"string\" || outputType === \"text\";\n            if (outputType === \"binarystring\" || outputType === \"text\") {\n                outputType = \"string\";\n            }\n            result = this._decompressWorker();\n\n            var isUnicodeString = !this._dataBinary;\n\n            if (isUnicodeString && !askUnicodeString) {\n                result = result.pipe(new utf8.Utf8EncodeWorker());\n            }\n            if (!isUnicodeString && askUnicodeString) {\n                result = result.pipe(new utf8.Utf8DecodeWorker());\n            }\n        } catch (e) {\n            result = new GenericWorker(\"error\");\n            result.error(e);\n        }\n\n        return new StreamHelper(result, outputType, \"\");\n    },\n\n    /**\n     * Prepare the content in the asked type.\n     * @param {String} type the type of the result.\n     * @param {Function} onUpdate a function to call on each internal update.\n     * @return Promise the promise of the result.\n     */\n    async: function (type, onUpdate) {\n        return this.internalStream(type).accumulate(onUpdate);\n    },\n\n    /**\n     * Prepare the content as a nodejs stream.\n     * @param {String} type the type of each chunk.\n     * @param {Function} onUpdate a function to call on each internal update.\n     * @return Stream the stream.\n     */\n    nodeStream: function (type, onUpdate) {\n        return this.internalStream(type || \"nodebuffer\").toNodejsStream(onUpdate);\n    },\n\n    /**\n     * Return a worker for the compressed content.\n     * @private\n     * @param {Object} compression the compression object to use.\n     * @param {Object} compressionOptions the options to use when compressing.\n     * @return Worker the worker.\n     */\n    _compressWorker: function (compression, compressionOptions) {\n        if (\n            this._data instanceof CompressedObject &&\n            this._data.compression.magic === compression.magic\n        ) {\n            return this._data.getCompressedWorker();\n        } else {\n            var result = this._decompressWorker();\n            if(!this._dataBinary) {\n                result = result.pipe(new utf8.Utf8EncodeWorker());\n            }\n            return CompressedObject.createWorkerFrom(result, compression, compressionOptions);\n        }\n    },\n    /**\n     * Return a worker for the decompressed content.\n     * @private\n     * @return Worker the worker.\n     */\n    _decompressWorker : function () {\n        if (this._data instanceof CompressedObject) {\n            return this._data.getContentWorker();\n        } else if (this._data instanceof GenericWorker) {\n            return this._data;\n        } else {\n            return new DataWorker(this._data);\n        }\n    }\n};\n\nvar removedMethods = [\"asText\", \"asBinary\", \"asNodeBuffer\", \"asUint8Array\", \"asArrayBuffer\"];\nvar removedFn = function () {\n    throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\");\n};\n\nfor(var i = 0; i < removedMethods.length; i++) {\n    ZipObject.prototype[removedMethods[i]] = removedFn;\n}\nmodule.exports = ZipObject;\n"},"lineCount":134}},"hash":"3ce58f0c3da0593d91795441dbd7e467","cacheData":{"env":{}}}