{"id":"node_modules/protobufjs/src/type.js","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/protobufjs/package.json","includedInParent":true,"mtime":499162500000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534960276803},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"./namespace","loc":{"line":5,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/namespace.js"},{"name":"./enum","loc":{"line":8,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/enum.js"},{"name":"./oneof","loc":{"line":9,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/oneof.js"},{"name":"./field","loc":{"line":10,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/field.js"},{"name":"./mapfield","loc":{"line":11,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/mapfield.js"},{"name":"./service","loc":{"line":12,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/service.js"},{"name":"./message","loc":{"line":13,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/message.js"},{"name":"./reader","loc":{"line":14,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/reader.js"},{"name":"./writer","loc":{"line":15,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/writer.js"},{"name":"./util","loc":{"line":16,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/util.js"},{"name":"./encoder","loc":{"line":17,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/encoder.js"},{"name":"./decoder","loc":{"line":18,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/decoder.js"},{"name":"./verifier","loc":{"line":19,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/verifier.js"},{"name":"./converter","loc":{"line":20,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/converter.js"},{"name":"./wrappers","loc":{"line":21,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/type.js","resolved":"/Users/nick/projects/tomespark/node_modules/protobufjs/src/wrappers.js"}],"generated":{"js":"\"use strict\";\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    Service   = require(\"./service\"),\r\n    Message   = require(\"./message\"),\r\n    Reader    = require(\"./reader\"),\r\n    Writer    = require(\"./writer\"),\r\n    util      = require(\"./util\"),\r\n    encoder   = require(\"./encoder\"),\r\n    decoder   = require(\"./decoder\"),\r\n    verifier  = require(\"./verifier\"),\r\n    converter = require(\"./converter\"),\r\n    wrappers  = require(\"./wrappers\");\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n","map":{"mappings":[{"source":"node_modules/protobufjs/src/type.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/protobufjs/src/type.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}}],"sources":{"node_modules/protobufjs/src/type.js":"\"use strict\";\r\nmodule.exports = Type;\r\n\r\n// extends Namespace\r\nvar Namespace = require(\"./namespace\");\r\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\r\n\r\nvar Enum      = require(\"./enum\"),\r\n    OneOf     = require(\"./oneof\"),\r\n    Field     = require(\"./field\"),\r\n    MapField  = require(\"./mapfield\"),\r\n    Service   = require(\"./service\"),\r\n    Message   = require(\"./message\"),\r\n    Reader    = require(\"./reader\"),\r\n    Writer    = require(\"./writer\"),\r\n    util      = require(\"./util\"),\r\n    encoder   = require(\"./encoder\"),\r\n    decoder   = require(\"./decoder\"),\r\n    verifier  = require(\"./verifier\"),\r\n    converter = require(\"./converter\"),\r\n    wrappers  = require(\"./wrappers\");\r\n\r\n/**\r\n * Constructs a new reflected message type instance.\r\n * @classdesc Reflected message type.\r\n * @extends NamespaceBase\r\n * @constructor\r\n * @param {string} name Message name\r\n * @param {Object.<string,*>} [options] Declared options\r\n */\r\nfunction Type(name, options) {\r\n    Namespace.call(this, name, options);\r\n\r\n    /**\r\n     * Message fields.\r\n     * @type {Object.<string,Field>}\r\n     */\r\n    this.fields = {};  // toJSON, marker\r\n\r\n    /**\r\n     * Oneofs declared within this namespace, if any.\r\n     * @type {Object.<string,OneOf>}\r\n     */\r\n    this.oneofs = undefined; // toJSON\r\n\r\n    /**\r\n     * Extension ranges, if any.\r\n     * @type {number[][]}\r\n     */\r\n    this.extensions = undefined; // toJSON\r\n\r\n    /**\r\n     * Reserved ranges, if any.\r\n     * @type {Array.<number[]|string>}\r\n     */\r\n    this.reserved = undefined; // toJSON\r\n\r\n    /*?\r\n     * Whether this type is a legacy group.\r\n     * @type {boolean|undefined}\r\n     */\r\n    this.group = undefined; // toJSON\r\n\r\n    /**\r\n     * Cached fields by id.\r\n     * @type {Object.<number,Field>|null}\r\n     * @private\r\n     */\r\n    this._fieldsById = null;\r\n\r\n    /**\r\n     * Cached fields as an array.\r\n     * @type {Field[]|null}\r\n     * @private\r\n     */\r\n    this._fieldsArray = null;\r\n\r\n    /**\r\n     * Cached oneofs as an array.\r\n     * @type {OneOf[]|null}\r\n     * @private\r\n     */\r\n    this._oneofsArray = null;\r\n\r\n    /**\r\n     * Cached constructor.\r\n     * @type {Constructor<{}>}\r\n     * @private\r\n     */\r\n    this._ctor = null;\r\n}\r\n\r\nObject.defineProperties(Type.prototype, {\r\n\r\n    /**\r\n     * Message fields by id.\r\n     * @name Type#fieldsById\r\n     * @type {Object.<number,Field>}\r\n     * @readonly\r\n     */\r\n    fieldsById: {\r\n        get: function() {\r\n\r\n            /* istanbul ignore if */\r\n            if (this._fieldsById)\r\n                return this._fieldsById;\r\n\r\n            this._fieldsById = {};\r\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\r\n                var field = this.fields[names[i]],\r\n                    id = field.id;\r\n\r\n                /* istanbul ignore if */\r\n                if (this._fieldsById[id])\r\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\r\n\r\n                this._fieldsById[id] = field;\r\n            }\r\n            return this._fieldsById;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fields of this message as an array for iteration.\r\n     * @name Type#fieldsArray\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    fieldsArray: {\r\n        get: function() {\r\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Oneofs of this message as an array for iteration.\r\n     * @name Type#oneofsArray\r\n     * @type {OneOf[]}\r\n     * @readonly\r\n     */\r\n    oneofsArray: {\r\n        get: function() {\r\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The registered constructor, if any registered, otherwise a generic constructor.\r\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\r\n     * @name Type#ctor\r\n     * @type {Constructor<{}>}\r\n     */\r\n    ctor: {\r\n        get: function() {\r\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\r\n        },\r\n        set: function(ctor) {\r\n\r\n            // Ensure proper prototype\r\n            var prototype = ctor.prototype;\r\n            if (!(prototype instanceof Message)) {\r\n                (ctor.prototype = new Message()).constructor = ctor;\r\n                util.merge(ctor.prototype, prototype);\r\n            }\r\n\r\n            // Classes and messages reference their reflected type\r\n            ctor.$type = ctor.prototype.$type = this;\r\n\r\n            // Mix in static methods\r\n            util.merge(ctor, Message, true);\r\n\r\n            this._ctor = ctor;\r\n\r\n            // Messages have non-enumerable default values on their prototype\r\n            var i = 0;\r\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\r\n                this._fieldsArray[i].resolve(); // ensures a proper value\r\n\r\n            // Messages have non-enumerable getters and setters for each virtual oneof field\r\n            var ctorProperties = {};\r\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\r\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\r\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\r\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\r\n                };\r\n            if (i)\r\n                Object.defineProperties(ctor.prototype, ctorProperties);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Generates a constructor function for the specified type.\r\n * @param {Type} mtype Message type\r\n * @returns {Codegen} Codegen instance\r\n */\r\nType.generateConstructor = function generateConstructor(mtype) {\r\n    /* eslint-disable no-unexpected-multiline */\r\n    var gen = util.codegen([\"p\"], mtype.name);\r\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\r\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\r\n        if ((field = mtype._fieldsArray[i]).map) gen\r\n            (\"this%s={}\", util.safeProp(field.name));\r\n        else if (field.repeated) gen\r\n            (\"this%s=[]\", util.safeProp(field.name));\r\n    return gen\r\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\r\n        (\"this[ks[i]]=p[ks[i]]\");\r\n    /* eslint-enable no-unexpected-multiline */\r\n};\r\n\r\nfunction clearCache(type) {\r\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\r\n    delete type.encode;\r\n    delete type.decode;\r\n    delete type.verify;\r\n    return type;\r\n}\r\n\r\n/**\r\n * Message type descriptor.\r\n * @interface IType\r\n * @extends INamespace\r\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\r\n * @property {Object.<string,IField>} fields Field descriptors\r\n * @property {number[][]} [extensions] Extension ranges\r\n * @property {number[][]} [reserved] Reserved ranges\r\n * @property {boolean} [group=false] Whether a legacy group or not\r\n */\r\n\r\n/**\r\n * Creates a message type from a message type descriptor.\r\n * @param {string} name Message name\r\n * @param {IType} json Message type descriptor\r\n * @returns {Type} Created message type\r\n */\r\nType.fromJSON = function fromJSON(name, json) {\r\n    var type = new Type(name, json.options);\r\n    type.extensions = json.extensions;\r\n    type.reserved = json.reserved;\r\n    var names = Object.keys(json.fields),\r\n        i = 0;\r\n    for (; i < names.length; ++i)\r\n        type.add(\r\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\r\n            ? MapField.fromJSON\r\n            : Field.fromJSON )(names[i], json.fields[names[i]])\r\n        );\r\n    if (json.oneofs)\r\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\r\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\r\n    if (json.nested)\r\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\r\n            var nested = json.nested[names[i]];\r\n            type.add( // most to least likely\r\n                ( nested.id !== undefined\r\n                ? Field.fromJSON\r\n                : nested.fields !== undefined\r\n                ? Type.fromJSON\r\n                : nested.values !== undefined\r\n                ? Enum.fromJSON\r\n                : nested.methods !== undefined\r\n                ? Service.fromJSON\r\n                : Namespace.fromJSON )(names[i], nested)\r\n            );\r\n        }\r\n    if (json.extensions && json.extensions.length)\r\n        type.extensions = json.extensions;\r\n    if (json.reserved && json.reserved.length)\r\n        type.reserved = json.reserved;\r\n    if (json.group)\r\n        type.group = true;\r\n    if (json.comment)\r\n        type.comment = json.comment;\r\n    return type;\r\n};\r\n\r\n/**\r\n * Converts this message type to a message type descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IType} Message type descriptor\r\n */\r\nType.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\"    , inherited && inherited.options || undefined,\r\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\r\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\r\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\r\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\r\n        \"group\"      , this.group || undefined,\r\n        \"nested\"     , inherited && inherited.nested || undefined,\r\n        \"comment\"    , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.resolveAll = function resolveAll() {\r\n    var fields = this.fieldsArray, i = 0;\r\n    while (i < fields.length)\r\n        fields[i++].resolve();\r\n    var oneofs = this.oneofsArray; i = 0;\r\n    while (i < oneofs.length)\r\n        oneofs[i++].resolve();\r\n    return Namespace.prototype.resolveAll.call(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nType.prototype.get = function get(name) {\r\n    return this.fields[name]\r\n        || this.oneofs && this.oneofs[name]\r\n        || this.nested && this.nested[name]\r\n        || null;\r\n};\r\n\r\n/**\r\n * Adds a nested object to this type.\r\n * @param {ReflectionObject} object Nested object to add\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\r\n */\r\nType.prototype.add = function add(object) {\r\n\r\n    if (this.get(object.name))\r\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\r\n\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\r\n        // The root object takes care of adding distinct sister-fields to the respective extended\r\n        // type instead.\r\n\r\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\r\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\r\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\r\n        if (this.isReservedId(object.id))\r\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\r\n        if (this.isReservedName(object.name))\r\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\r\n\r\n        if (object.parent)\r\n            object.parent.remove(object);\r\n        this.fields[object.name] = object;\r\n        object.message = this;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n        if (!this.oneofs)\r\n            this.oneofs = {};\r\n        this.oneofs[object.name] = object;\r\n        object.onAdd(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.add.call(this, object);\r\n};\r\n\r\n/**\r\n * Removes a nested object from this type.\r\n * @param {ReflectionObject} object Nested object to remove\r\n * @returns {Type} `this`\r\n * @throws {TypeError} If arguments are invalid\r\n * @throws {Error} If `object` is not a member of this type\r\n */\r\nType.prototype.remove = function remove(object) {\r\n    if (object instanceof Field && object.extend === undefined) {\r\n        // See Type#add for the reason why extension fields are excluded here.\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.fields || this.fields[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.fields[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    if (object instanceof OneOf) {\r\n\r\n        /* istanbul ignore if */\r\n        if (!this.oneofs || this.oneofs[object.name] !== object)\r\n            throw Error(object + \" is not a member of \" + this);\r\n\r\n        delete this.oneofs[object.name];\r\n        object.parent = null;\r\n        object.onRemove(this);\r\n        return clearCache(this);\r\n    }\r\n    return Namespace.prototype.remove.call(this, object);\r\n};\r\n\r\n/**\r\n * Tests if the specified id is reserved.\r\n * @param {number} id Id to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedId = function isReservedId(id) {\r\n    return Namespace.isReservedId(this.reserved, id);\r\n};\r\n\r\n/**\r\n * Tests if the specified name is reserved.\r\n * @param {string} name Name to test\r\n * @returns {boolean} `true` if reserved, otherwise `false`\r\n */\r\nType.prototype.isReservedName = function isReservedName(name) {\r\n    return Namespace.isReservedName(this.reserved, name);\r\n};\r\n\r\n/**\r\n * Creates a new message of this type using the specified properties.\r\n * @param {Object.<string,*>} [properties] Properties to set\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.create = function create(properties) {\r\n    return new this.ctor(properties);\r\n};\r\n\r\n/**\r\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\r\n * @returns {Type} `this`\r\n */\r\nType.prototype.setup = function setup() {\r\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\r\n    // multiple times (V8, soft-deopt prototype-check).\r\n\r\n    var fullName = this.fullName,\r\n        types    = [];\r\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\r\n        types.push(this._fieldsArray[i].resolve().resolvedType);\r\n\r\n    // Replace setup methods with type-specific generated functions\r\n    this.encode = encoder(this)({\r\n        Writer : Writer,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.decode = decoder(this)({\r\n        Reader : Reader,\r\n        types  : types,\r\n        util   : util\r\n    });\r\n    this.verify = verifier(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.fromObject = converter.fromObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n    this.toObject = converter.toObject(this)({\r\n        types : types,\r\n        util  : util\r\n    });\r\n\r\n    // Inject custom wrappers for common types\r\n    var wrapper = wrappers[fullName];\r\n    if (wrapper) {\r\n        var originalThis = Object.create(this);\r\n        // if (wrapper.fromObject) {\r\n            originalThis.fromObject = this.fromObject;\r\n            this.fromObject = wrapper.fromObject.bind(originalThis);\r\n        // }\r\n        // if (wrapper.toObject) {\r\n            originalThis.toObject = this.toObject;\r\n            this.toObject = wrapper.toObject.bind(originalThis);\r\n        // }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encode = function encode_setup(message, writer) {\r\n    return this.setup().encode(message, writer); // overrides this method\r\n};\r\n\r\n/**\r\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\r\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\r\n * @param {Writer} [writer] Writer to encode to\r\n * @returns {Writer} writer\r\n */\r\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\r\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\r\n};\r\n\r\n/**\r\n * Decodes a message of this type.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @param {number} [length] Length of the message, if known beforehand\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError<{}>} If required fields are missing\r\n */\r\nType.prototype.decode = function decode_setup(reader, length) {\r\n    return this.setup().decode(reader, length); // overrides this method\r\n};\r\n\r\n/**\r\n * Decodes a message of this type preceeded by its byte length as a varint.\r\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\r\n * @returns {Message<{}>} Decoded message\r\n * @throws {Error} If the payload is not a reader or valid buffer\r\n * @throws {util.ProtocolError} If required fields are missing\r\n */\r\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\r\n    if (!(reader instanceof Reader))\r\n        reader = Reader.create(reader);\r\n    return this.decode(reader, reader.uint32());\r\n};\r\n\r\n/**\r\n * Verifies that field values are valid and that required fields are present.\r\n * @param {Object.<string,*>} message Plain object to verify\r\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\r\n */\r\nType.prototype.verify = function verify_setup(message) {\r\n    return this.setup().verify(message); // overrides this method\r\n};\r\n\r\n/**\r\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\r\n * @param {Object.<string,*>} object Plain object to convert\r\n * @returns {Message<{}>} Message instance\r\n */\r\nType.prototype.fromObject = function fromObject(object) {\r\n    return this.setup().fromObject(object);\r\n};\r\n\r\n/**\r\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\r\n * @interface IConversionOptions\r\n * @property {Function} [longs] Long conversion type.\r\n * Valid values are `String` and `Number` (the global types).\r\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\r\n * @property {Function} [enums] Enum value conversion type.\r\n * Only valid value is `String` (the global type).\r\n * Defaults to copy the present value, which is the numeric id.\r\n * @property {Function} [bytes] Bytes value conversion type.\r\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\r\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\r\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\r\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\r\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\r\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\r\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\r\n */\r\n\r\n/**\r\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\r\n * @param {Message<{}>} message Message instance\r\n * @param {IConversionOptions} [options] Conversion options\r\n * @returns {Object.<string,*>} Plain object\r\n */\r\nType.prototype.toObject = function toObject(message, options) {\r\n    return this.setup().toObject(message, options);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link Type.d} (TypeScript).\r\n * @typedef TypeDecorator\r\n * @type {function}\r\n * @param {Constructor<T>} target Target constructor\r\n * @returns {undefined}\r\n * @template T extends Message<T>\r\n */\r\n\r\n/**\r\n * Type decorator (TypeScript).\r\n * @param {string} [typeName] Type name, defaults to the constructor's name\r\n * @returns {TypeDecorator<T>} Decorator function\r\n * @template T extends Message<T>\r\n */\r\nType.d = function decorateType(typeName) {\r\n    return function typeDecorator(target) {\r\n        util.decorateType(target, typeName);\r\n    };\r\n};\r\n"},"lineCount":590}},"hash":"933ccf08b26b14ba512305d216d7cd91","cacheData":{"env":{}}}