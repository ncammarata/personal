{"id":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/jszip/node_modules/core-js/package.json","includedInParent":true,"mtime":1461080570000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534291651885},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439}],"generated":{"js":"// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};","map":{"mappings":[{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}}],"sources":{"node_modules/jszip/node_modules/core-js/library/modules/_invoke.js":"// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function(fn, args, that){\n  var un = that === undefined;\n  switch(args.length){\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return              fn.apply(that, args);\n};"},"lineCount":16}},"hash":"c1dec479d31f4537789dd91bca0e9cf2","cacheData":{"env":{}}}