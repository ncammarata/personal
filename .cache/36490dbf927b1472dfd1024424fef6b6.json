{"id":"GkvN","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/no-case/package.json","includedInParent":true,"mtime":1504891841000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1535346284235},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"lower-case","loc":{"line":1,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/no-case/no-case.js","resolved":"/Users/nick/projects/tomespark/node_modules/lower-case/lower-case.js"},{"name":"./vendor/non-word-regexp","loc":{"line":3,"column":30},"parent":"/Users/nick/projects/tomespark/node_modules/no-case/no-case.js","resolved":"/Users/nick/projects/tomespark/node_modules/no-case/vendor/non-word-regexp.js"},{"name":"./vendor/camel-case-regexp","loc":{"line":4,"column":32},"parent":"/Users/nick/projects/tomespark/node_modules/no-case/no-case.js","resolved":"/Users/nick/projects/tomespark/node_modules/no-case/vendor/camel-case-regexp.js"},{"name":"./vendor/camel-case-upper-regexp","loc":{"line":5,"column":38},"parent":"/Users/nick/projects/tomespark/node_modules/no-case/no-case.js","resolved":"/Users/nick/projects/tomespark/node_modules/no-case/vendor/camel-case-upper-regexp.js"}],"generated":{"js":"var lowerCase = require('lower-case')\n\nvar NON_WORD_REGEXP = require('./vendor/non-word-regexp')\nvar CAMEL_CASE_REGEXP = require('./vendor/camel-case-regexp')\nvar CAMEL_CASE_UPPER_REGEXP = require('./vendor/camel-case-upper-regexp')\n\n/**\n * Sentence case a string.\n *\n * @param  {string} str\n * @param  {string} locale\n * @param  {string} replacement\n * @return {string}\n */\nmodule.exports = function (str, locale, replacement) {\n  if (str == null) {\n    return ''\n  }\n\n  replacement = typeof replacement !== 'string' ? ' ' : replacement\n\n  function replace (match, index, value) {\n    if (index === 0 || index === (value.length - match.length)) {\n      return ''\n    }\n\n    return replacement\n  }\n\n  str = String(str)\n    // Support camel case (\"camelCase\" -> \"camel Case\").\n    .replace(CAMEL_CASE_REGEXP, '$1 $2')\n    // Support odd camel case (\"CAMELCase\" -> \"CAMEL Case\").\n    .replace(CAMEL_CASE_UPPER_REGEXP, '$1 $2')\n    // Remove all non-word characters and replace with a single space.\n    .replace(NON_WORD_REGEXP, replace)\n\n  // Lower case the entire string.\n  return lowerCase(str, locale)\n}\n","map":{"mappings":[{"source":"node_modules/no-case/no-case.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/no-case/no-case.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/no-case/no-case.js":"var lowerCase = require('lower-case')\n\nvar NON_WORD_REGEXP = require('./vendor/non-word-regexp')\nvar CAMEL_CASE_REGEXP = require('./vendor/camel-case-regexp')\nvar CAMEL_CASE_UPPER_REGEXP = require('./vendor/camel-case-upper-regexp')\n\n/**\n * Sentence case a string.\n *\n * @param  {string} str\n * @param  {string} locale\n * @param  {string} replacement\n * @return {string}\n */\nmodule.exports = function (str, locale, replacement) {\n  if (str == null) {\n    return ''\n  }\n\n  replacement = typeof replacement !== 'string' ? ' ' : replacement\n\n  function replace (match, index, value) {\n    if (index === 0 || index === (value.length - match.length)) {\n      return ''\n    }\n\n    return replacement\n  }\n\n  str = String(str)\n    // Support camel case (\"camelCase\" -> \"camel Case\").\n    .replace(CAMEL_CASE_REGEXP, '$1 $2')\n    // Support odd camel case (\"CAMELCase\" -> \"CAMEL Case\").\n    .replace(CAMEL_CASE_UPPER_REGEXP, '$1 $2')\n    // Remove all non-word characters and replace with a single space.\n    .replace(NON_WORD_REGEXP, replace)\n\n  // Lower case the entire string.\n  return lowerCase(str, locale)\n}\n"},"lineCount":41}},"hash":"bd8bf8c041acff03dbb7298245b0ed70","cacheData":{"env":{}}}