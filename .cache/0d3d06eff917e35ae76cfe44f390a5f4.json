{"id":"node_modules/fuzzaldrin-plus/lib/filter.js","dependencies":[{"name":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/package.json","includedInParent":true,"mtime":1511210065000},{"name":"/Users/nick/projects/personal/package.json","includedInParent":true,"mtime":1545697594915},{"name":"/Users/nick/projects/personal/.babelrc","includedInParent":true,"mtime":1535748626225},{"name":"./scorer","loc":{"line":4,"column":19},"parent":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/lib/filter.js","resolved":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/lib/scorer.js"},{"name":"./pathScorer","loc":{"line":6,"column":23},"parent":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/lib/filter.js","resolved":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/lib/pathScorer.js"},{"name":"./query","loc":{"line":8,"column":18},"parent":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/lib/filter.js","resolved":"/Users/nick/projects/personal/node_modules/fuzzaldrin-plus/lib/query.js"}],"generated":{"js":"(function() {\n  var Query, pathScorer, pluckCandidates, scorer, sortCandidates;\n\n  scorer = require('./scorer');\n\n  pathScorer = require('./pathScorer');\n\n  Query = require('./query');\n\n  pluckCandidates = function(a) {\n    return a.candidate;\n  };\n\n  sortCandidates = function(a, b) {\n    return b.score - a.score;\n  };\n\n  module.exports = function(candidates, query, options) {\n    var bKey, candidate, key, maxInners, maxResults, score, scoreProvider, scoredCandidates, spotLeft, string, usePathScoring, _i, _len;\n    scoredCandidates = [];\n    key = options.key, maxResults = options.maxResults, maxInners = options.maxInners, usePathScoring = options.usePathScoring;\n    spotLeft = (maxInners != null) && maxInners > 0 ? maxInners : candidates.length + 1;\n    bKey = key != null;\n    scoreProvider = usePathScoring ? pathScorer : scorer;\n    for (_i = 0, _len = candidates.length; _i < _len; _i++) {\n      candidate = candidates[_i];\n      string = bKey ? candidate[key] : candidate;\n      if (!string) {\n        continue;\n      }\n      score = scoreProvider.score(string, query, options);\n      if (score > 0) {\n        scoredCandidates.push({\n          candidate: candidate,\n          score: score\n        });\n        if (!--spotLeft) {\n          break;\n        }\n      }\n    }\n    scoredCandidates.sort(sortCandidates);\n    candidates = scoredCandidates.map(pluckCandidates);\n    if (maxResults != null) {\n      candidates = candidates.slice(0, maxResults);\n    }\n    return candidates;\n  };\n\n}).call(this);\n","map":{"mappings":[{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/fuzzaldrin-plus/lib/filter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"node_modules/fuzzaldrin-plus/lib/filter.js":"(function() {\n  var Query, pathScorer, pluckCandidates, scorer, sortCandidates;\n\n  scorer = require('./scorer');\n\n  pathScorer = require('./pathScorer');\n\n  Query = require('./query');\n\n  pluckCandidates = function(a) {\n    return a.candidate;\n  };\n\n  sortCandidates = function(a, b) {\n    return b.score - a.score;\n  };\n\n  module.exports = function(candidates, query, options) {\n    var bKey, candidate, key, maxInners, maxResults, score, scoreProvider, scoredCandidates, spotLeft, string, usePathScoring, _i, _len;\n    scoredCandidates = [];\n    key = options.key, maxResults = options.maxResults, maxInners = options.maxInners, usePathScoring = options.usePathScoring;\n    spotLeft = (maxInners != null) && maxInners > 0 ? maxInners : candidates.length + 1;\n    bKey = key != null;\n    scoreProvider = usePathScoring ? pathScorer : scorer;\n    for (_i = 0, _len = candidates.length; _i < _len; _i++) {\n      candidate = candidates[_i];\n      string = bKey ? candidate[key] : candidate;\n      if (!string) {\n        continue;\n      }\n      score = scoreProvider.score(string, query, options);\n      if (score > 0) {\n        scoredCandidates.push({\n          candidate: candidate,\n          score: score\n        });\n        if (!--spotLeft) {\n          break;\n        }\n      }\n    }\n    scoredCandidates.sort(sortCandidates);\n    candidates = scoredCandidates.map(pluckCandidates);\n    if (maxResults != null) {\n      candidates = candidates.slice(0, maxResults);\n    }\n    return candidates;\n  };\n\n}).call(this);\n"},"lineCount":51}},"hash":"91e26e61463108f7e51726a98292833a","cacheData":{"env":{}}}