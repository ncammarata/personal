{"id":"node_modules/ml-pca/src/pca.js","dependencies":[{"name":"/Users/nick/projects/personal/node_modules/ml-pca/package.json","includedInParent":true,"mtime":1500895831000},{"name":"/Users/nick/projects/personal/package.json","includedInParent":true,"mtime":1540009868605},{"name":"/Users/nick/projects/personal/.babelrc","includedInParent":true,"mtime":1535748626225},{"name":"ml-matrix","loc":{"line":3,"column":26},"parent":"/Users/nick/projects/personal/node_modules/ml-pca/src/pca.js","resolved":"/Users/nick/projects/personal/node_modules/ml-matrix/src/index.js"},{"name":"ml-stat/matrix","loc":{"line":7,"column":21},"parent":"/Users/nick/projects/personal/node_modules/ml-pca/src/pca.js","resolved":"/Users/nick/projects/personal/node_modules/ml-stat/matrix.js"}],"generated":{"js":"'use strict';\n\nconst matrixLib = require('ml-matrix');\nconst Matrix = matrixLib.Matrix;\nconst EVD = matrixLib.EVD;\nconst SVD = matrixLib.SVD;\nconst Stat = require('ml-stat/matrix');\nconst mean = Stat.mean;\nconst stdev = Stat.standardDeviation;\n\nconst defaultOptions = {\n    isCovarianceMatrix: false,\n    center: true,\n    scale: false\n};\n\n/**\n * Creates new PCA (Principal Component Analysis) from the dataset\n * @param {Matrix} dataset - dataset or covariance matrix\n * @param {Object} options\n * @param {boolean} [options.isCovarianceMatrix=false] - true if the dataset is a covariance matrix\n * @param {boolean} [options.center=true] - should the data be centered (subtract the mean)\n * @param {boolean} [options.scale=false] - should the data be scaled (divide by the standard deviation)\n * */\nclass PCA {\n    constructor(dataset, options) {\n        if (dataset === true) {\n            const model = options;\n            this.center = model.center;\n            this.scale = model.scale;\n            this.means = model.means;\n            this.stdevs = model.stdevs;\n            this.U = Matrix.checkMatrix(model.U);\n            this.S = model.S;\n            return;\n        }\n\n        options = Object.assign({}, defaultOptions, options);\n\n        this.center = false;\n        this.scale = false;\n        this.means = null;\n        this.stdevs = null;\n\n        if (options.isCovarianceMatrix) { // user provided a covariance matrix instead of dataset\n            this._computeFromCovarianceMatrix(dataset);\n            return;\n        }\n\n        var useCovarianceMatrix;\n        if (typeof options.useCovarianceMatrix === 'boolean') {\n            useCovarianceMatrix = options.useCovarianceMatrix;\n        } else {\n            useCovarianceMatrix = dataset.length > dataset[0].length;\n        }\n\n        if (useCovarianceMatrix) { // user provided a dataset but wants us to compute and use the covariance matrix\n            dataset = this._adjust(dataset, options);\n            const covarianceMatrix = dataset.transposeView().mmul(dataset).div(dataset.rows - 1);\n            this._computeFromCovarianceMatrix(covarianceMatrix);\n        } else {\n            dataset = this._adjust(dataset, options);\n            var svd = new SVD(dataset, {\n                computeLeftSingularVectors: false,\n                computeRightSingularVectors: true,\n                autoTranspose: true\n            });\n\n            this.U = svd.rightSingularVectors;\n\n            const singularValues = svd.diagonal;\n            const eigenvalues = new Array(singularValues.length);\n            for (var i = 0; i < singularValues.length; i++) {\n                eigenvalues[i] = singularValues[i] * singularValues[i] / (dataset.length - 1);\n            }\n            this.S = eigenvalues;\n        }\n    }\n\n    /**\n     * Load a PCA model from JSON\n     * @param {Object} model\n     * @return {PCA}\n     */\n    static load(model) {\n        if (model.name !== 'PCA')\n            throw new RangeError('Invalid model: ' + model.name);\n        return new PCA(true, model);\n    }\n\n\n    /**\n     * Project the dataset into the PCA space\n     * @param {Matrix} dataset\n     * @param {Object} options\n     * @return {Matrix} dataset projected in the PCA space\n     */\n    predict(dataset, options = {}) {\n        const {\n           nComponents = this.U.columns\n        } = options;\n\n        dataset = new Matrix(dataset);\n        if (this.center) {\n            dataset.subRowVector(this.means);\n            if (this.scale) {\n                dataset.divRowVector(this.stdevs);\n            }\n        }\n\n        var predictions = dataset.mmul(this.U);\n        return predictions.subMatrix(0, predictions.rows - 1, 0, nComponents - 1);\n    }\n\n    /**\n     * Returns the proportion of variance for each component\n     * @return {[number]}\n     */\n    getExplainedVariance() {\n        var sum = 0;\n        for (var i = 0; i < this.S.length; i++) {\n            sum += this.S[i];\n        }\n        return this.S.map(value => value / sum);\n    }\n\n    /**\n     * Returns the cumulative proportion of variance\n     * @return {[number]}\n     */\n    getCumulativeVariance() {\n        var explained = this.getExplainedVariance();\n        for (var i = 1; i < explained.length; i++) {\n            explained[i] += explained[i - 1];\n        }\n        return explained;\n    }\n\n    /**\n     * Returns the Eigenvectors of the covariance matrix\n     * @returns {Matrix}\n     */\n    getEigenvectors() {\n        return this.U;\n    }\n\n    /**\n     * Returns the Eigenvalues (on the diagonal)\n     * @returns {[number]}\n     */\n    getEigenvalues() {\n        return this.S;\n    }\n\n    /**\n     * Returns the standard deviations of the principal components\n     * @returns {[number]}\n     */\n    getStandardDeviations() {\n        return this.S.map(x => Math.sqrt(x));\n    }\n\n    /**\n     * Returns the loadings matrix\n     * @return {Matrix}\n     */\n    getLoadings() {\n        return this.U.transpose();\n    }\n\n    /**\n     * Export the current model to a JSON object\n     * @return {Object} model\n     */\n    toJSON() {\n        return {\n            name: 'PCA',\n            center: this.center,\n            scale: this.scale,\n            means: this.means,\n            stdevs: this.stdevs,\n            U: this.U,\n            S: this.S,\n        };\n    }\n\n    _adjust(dataset, options) {\n        this.center = !!options.center;\n        this.scale = !!options.scale;\n\n        dataset = new Matrix(dataset);\n\n        if (this.center) {\n            const means = mean(dataset);\n            const stdevs = this.scale ? stdev(dataset, means, true) : null;\n            this.means = means;\n            dataset.subRowVector(means);\n            if (this.scale) {\n                for (var i = 0; i < stdevs.length; i++) {\n                    if (stdevs[i] === 0) {\n                        throw new RangeError('Cannot scale the dataset (standard deviation is zero at index ' + i);\n                    }\n                }\n                this.stdevs = stdevs;\n                dataset.divRowVector(stdevs);\n            }\n        }\n\n        return dataset;\n    }\n\n    _computeFromCovarianceMatrix(dataset) {\n        const evd = new EVD(dataset, {assumeSymmetric: true});\n        this.U = evd.eigenvectorMatrix;\n        for (var i = 0; i < this.U.length; i++) {\n            this.U[i].reverse();\n        }\n        this.S = evd.realEigenvalues.reverse();\n    }\n}\n\nmodule.exports = PCA;\n","map":{"mappings":[{"source":"node_modules/ml-pca/src/pca.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ml-pca/src/pca.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}}],"sources":{"node_modules/ml-pca/src/pca.js":"'use strict';\n\nconst matrixLib = require('ml-matrix');\nconst Matrix = matrixLib.Matrix;\nconst EVD = matrixLib.EVD;\nconst SVD = matrixLib.SVD;\nconst Stat = require('ml-stat/matrix');\nconst mean = Stat.mean;\nconst stdev = Stat.standardDeviation;\n\nconst defaultOptions = {\n    isCovarianceMatrix: false,\n    center: true,\n    scale: false\n};\n\n/**\n * Creates new PCA (Principal Component Analysis) from the dataset\n * @param {Matrix} dataset - dataset or covariance matrix\n * @param {Object} options\n * @param {boolean} [options.isCovarianceMatrix=false] - true if the dataset is a covariance matrix\n * @param {boolean} [options.center=true] - should the data be centered (subtract the mean)\n * @param {boolean} [options.scale=false] - should the data be scaled (divide by the standard deviation)\n * */\nclass PCA {\n    constructor(dataset, options) {\n        if (dataset === true) {\n            const model = options;\n            this.center = model.center;\n            this.scale = model.scale;\n            this.means = model.means;\n            this.stdevs = model.stdevs;\n            this.U = Matrix.checkMatrix(model.U);\n            this.S = model.S;\n            return;\n        }\n\n        options = Object.assign({}, defaultOptions, options);\n\n        this.center = false;\n        this.scale = false;\n        this.means = null;\n        this.stdevs = null;\n\n        if (options.isCovarianceMatrix) { // user provided a covariance matrix instead of dataset\n            this._computeFromCovarianceMatrix(dataset);\n            return;\n        }\n\n        var useCovarianceMatrix;\n        if (typeof options.useCovarianceMatrix === 'boolean') {\n            useCovarianceMatrix = options.useCovarianceMatrix;\n        } else {\n            useCovarianceMatrix = dataset.length > dataset[0].length;\n        }\n\n        if (useCovarianceMatrix) { // user provided a dataset but wants us to compute and use the covariance matrix\n            dataset = this._adjust(dataset, options);\n            const covarianceMatrix = dataset.transposeView().mmul(dataset).div(dataset.rows - 1);\n            this._computeFromCovarianceMatrix(covarianceMatrix);\n        } else {\n            dataset = this._adjust(dataset, options);\n            var svd = new SVD(dataset, {\n                computeLeftSingularVectors: false,\n                computeRightSingularVectors: true,\n                autoTranspose: true\n            });\n\n            this.U = svd.rightSingularVectors;\n\n            const singularValues = svd.diagonal;\n            const eigenvalues = new Array(singularValues.length);\n            for (var i = 0; i < singularValues.length; i++) {\n                eigenvalues[i] = singularValues[i] * singularValues[i] / (dataset.length - 1);\n            }\n            this.S = eigenvalues;\n        }\n    }\n\n    /**\n     * Load a PCA model from JSON\n     * @param {Object} model\n     * @return {PCA}\n     */\n    static load(model) {\n        if (model.name !== 'PCA')\n            throw new RangeError('Invalid model: ' + model.name);\n        return new PCA(true, model);\n    }\n\n\n    /**\n     * Project the dataset into the PCA space\n     * @param {Matrix} dataset\n     * @param {Object} options\n     * @return {Matrix} dataset projected in the PCA space\n     */\n    predict(dataset, options = {}) {\n        const {\n           nComponents = this.U.columns\n        } = options;\n\n        dataset = new Matrix(dataset);\n        if (this.center) {\n            dataset.subRowVector(this.means);\n            if (this.scale) {\n                dataset.divRowVector(this.stdevs);\n            }\n        }\n\n        var predictions = dataset.mmul(this.U);\n        return predictions.subMatrix(0, predictions.rows - 1, 0, nComponents - 1);\n    }\n\n    /**\n     * Returns the proportion of variance for each component\n     * @return {[number]}\n     */\n    getExplainedVariance() {\n        var sum = 0;\n        for (var i = 0; i < this.S.length; i++) {\n            sum += this.S[i];\n        }\n        return this.S.map(value => value / sum);\n    }\n\n    /**\n     * Returns the cumulative proportion of variance\n     * @return {[number]}\n     */\n    getCumulativeVariance() {\n        var explained = this.getExplainedVariance();\n        for (var i = 1; i < explained.length; i++) {\n            explained[i] += explained[i - 1];\n        }\n        return explained;\n    }\n\n    /**\n     * Returns the Eigenvectors of the covariance matrix\n     * @returns {Matrix}\n     */\n    getEigenvectors() {\n        return this.U;\n    }\n\n    /**\n     * Returns the Eigenvalues (on the diagonal)\n     * @returns {[number]}\n     */\n    getEigenvalues() {\n        return this.S;\n    }\n\n    /**\n     * Returns the standard deviations of the principal components\n     * @returns {[number]}\n     */\n    getStandardDeviations() {\n        return this.S.map(x => Math.sqrt(x));\n    }\n\n    /**\n     * Returns the loadings matrix\n     * @return {Matrix}\n     */\n    getLoadings() {\n        return this.U.transpose();\n    }\n\n    /**\n     * Export the current model to a JSON object\n     * @return {Object} model\n     */\n    toJSON() {\n        return {\n            name: 'PCA',\n            center: this.center,\n            scale: this.scale,\n            means: this.means,\n            stdevs: this.stdevs,\n            U: this.U,\n            S: this.S,\n        };\n    }\n\n    _adjust(dataset, options) {\n        this.center = !!options.center;\n        this.scale = !!options.scale;\n\n        dataset = new Matrix(dataset);\n\n        if (this.center) {\n            const means = mean(dataset);\n            const stdevs = this.scale ? stdev(dataset, means, true) : null;\n            this.means = means;\n            dataset.subRowVector(means);\n            if (this.scale) {\n                for (var i = 0; i < stdevs.length; i++) {\n                    if (stdevs[i] === 0) {\n                        throw new RangeError('Cannot scale the dataset (standard deviation is zero at index ' + i);\n                    }\n                }\n                this.stdevs = stdevs;\n                dataset.divRowVector(stdevs);\n            }\n        }\n\n        return dataset;\n    }\n\n    _computeFromCovarianceMatrix(dataset) {\n        const evd = new EVD(dataset, {assumeSymmetric: true});\n        this.U = evd.eigenvectorMatrix;\n        for (var i = 0; i < this.U.length; i++) {\n            this.U[i].reverse();\n        }\n        this.S = evd.realEigenvalues.reverse();\n    }\n}\n\nmodule.exports = PCA;\n"},"lineCount":223}},"hash":"b96e35be8ccd6c187968b7d9c8e951b9","cacheData":{"env":{}}}