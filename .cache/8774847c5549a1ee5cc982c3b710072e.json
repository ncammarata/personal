{"id":"node_modules/react-lines-ellipsis/lib/index.js","dependencies":[{"name":"/Users/nick/projects/tomespark/node_modules/react-lines-ellipsis/package.json","includedInParent":true,"mtime":499162500000},{"name":"/Users/nick/projects/tomespark/package.json","includedInParent":true,"mtime":1534960244874},{"name":"/Users/nick/projects/tomespark/.babelrc","includedInParent":true,"mtime":1533367520439},{"name":"react","loc":{"line":17,"column":20},"parent":"/Users/nick/projects/tomespark/node_modules/react-lines-ellipsis/lib/index.js","resolved":"/Users/nick/projects/tomespark/node_modules/react/index.js"},{"name":"./common","loc":{"line":19,"column":23},"parent":"/Users/nick/projects/tomespark/node_modules/react-lines-ellipsis/lib/index.js","resolved":"/Users/nick/projects/tomespark/node_modules/react-lines-ellipsis/lib/common.js"},{"name":"./helpers","loc":{"line":23,"column":24},"parent":"/Users/nick/projects/tomespark/node_modules/react-lines-ellipsis/lib/index.js","resolved":"/Users/nick/projects/tomespark/node_modules/react-lines-ellipsis/lib/helpers.js"}],"generated":{"js":"'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = require('react');\n\nvar _require = require('./common'),\n    canvasStyle = _require.canvasStyle,\n    mirrorProps = _require.mirrorProps;\n\nvar _require2 = require('./helpers'),\n    omit = _require2.omit;\n\nfunction prevSibling(node, count) {\n  while (node && count--) {\n    node = node.previousElementSibling;\n  }\n  return node;\n}\n\nvar defaultProps = {\n  basedOn: undefined,\n  className: '',\n  component: 'div',\n  ellipsis: 'â€¦', // &hellip;\n  maxLine: 1,\n  onReflow: function onReflow() {},\n\n  text: '',\n  trimRight: true,\n  winWidth: undefined // for the HOC\n};\nvar usedProps = Object.keys(defaultProps);\n/**\n * props.text {String} the text you want to clamp\n * props.maxLine {Number|String} max lines allowed\n * props.ellipsis {String} the ellipsis indicator\n * props.trimRight {Boolean} should we trimRight the clamped text?\n * props.basedOn {String} letters|words\n * props.className {String}\n */\n\nvar LinesEllipsis = function (_React$PureComponent) {\n  _inherits(LinesEllipsis, _React$PureComponent);\n\n  function LinesEllipsis(props) {\n    _classCallCheck(this, LinesEllipsis);\n\n    var _this = _possibleConstructorReturn(this, (LinesEllipsis.__proto__ || Object.getPrototypeOf(LinesEllipsis)).call(this, props));\n\n    _this.state = {\n      text: props.text,\n      clamped: false\n    };\n    _this.units = [];\n    _this.maxLine = 0;\n    _this.canvas = null;\n    return _this;\n  }\n\n  _createClass(LinesEllipsis, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initCanvas();\n      this.reflow(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.winWidth !== this.props.winWidth) {\n        this.copyStyleToCanvas();\n      }\n      this.reflow(nextProps);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.canvas.parentNode.removeChild(this.canvas);\n    }\n  }, {\n    key: 'setState',\n    value: function setState(state, callback) {\n      if (typeof state.clamped !== 'undefined') {\n        this.clamped = state.clamped;\n      }\n      return _get(LinesEllipsis.prototype.__proto__ || Object.getPrototypeOf(LinesEllipsis.prototype), 'setState', this).call(this, state, callback);\n    }\n  }, {\n    key: 'initCanvas',\n    value: function initCanvas() {\n      if (this.canvas) return;\n      var canvas = this.canvas = document.createElement('div');\n      canvas.className = 'LinesEllipsis-canvas ' + this.props.className;\n      canvas.setAttribute('aria-hidden', 'true');\n      this.copyStyleToCanvas();\n      Object.keys(canvasStyle).forEach(function (key) {\n        canvas.style[key] = canvasStyle[key];\n      });\n      document.body.appendChild(canvas);\n    }\n  }, {\n    key: 'copyStyleToCanvas',\n    value: function copyStyleToCanvas() {\n      var _this2 = this;\n\n      var targetStyle = window.getComputedStyle(this.target);\n      mirrorProps.forEach(function (key) {\n        _this2.canvas.style[key] = targetStyle[key];\n      });\n    }\n  }, {\n    key: 'reflow',\n    value: function reflow(props) {\n      /* eslint-disable no-control-regex */\n      var basedOn = props.basedOn || (/^[\\x00-\\x7F]+$/.test(props.text) ? 'words' : 'letters');\n      switch (basedOn) {\n        case 'words':\n          this.units = props.text.split(/\\b|(?=\\W)/);\n          break;\n        case 'letters':\n          this.units = Array.from(props.text);\n          break;\n        default:\n          throw new Error('Unsupported options basedOn: ' + basedOn);\n      }\n      this.maxLine = +props.maxLine || 1;\n      this.canvas.innerHTML = this.units.map(function (c) {\n        return '<span class=\\'LinesEllipsis-unit\\'>' + c + '</span>';\n      }).join('');\n      var ellipsisIndex = this.putEllipsis(this.calcIndexes());\n      var clamped = ellipsisIndex > -1;\n      var newState = {\n        clamped: clamped,\n        text: clamped ? this.units.slice(0, ellipsisIndex).join('') : props.text\n      };\n      this.setState(newState, props.onReflow.bind(this, newState));\n    }\n  }, {\n    key: 'calcIndexes',\n    value: function calcIndexes() {\n      var indexes = [0];\n      var elt = this.canvas.firstElementChild;\n      if (!elt) return indexes;\n\n      var index = 0;\n      var line = 1;\n      var offsetTop = elt.offsetTop;\n      while (elt = elt.nextElementSibling) {\n        if (elt.offsetTop > offsetTop) {\n          line++;\n          indexes.push(index);\n          offsetTop = elt.offsetTop;\n        }\n        index++;\n        if (line > this.maxLine) {\n          break;\n        }\n      }\n      return indexes;\n    }\n  }, {\n    key: 'putEllipsis',\n    value: function putEllipsis(indexes) {\n      if (indexes.length <= this.maxLine) return -1;\n      var lastIndex = indexes[this.maxLine];\n      var units = this.units.slice(0, lastIndex);\n      var maxOffsetTop = this.canvas.children[lastIndex].offsetTop;\n      this.canvas.innerHTML = units.map(function (c, i) {\n        return '<span class=\\'LinesEllipsis-unit\\'>' + c + '</span>';\n      }).join('') + ('<wbr><span class=\\'LinesEllipsis-ellipsis\\'>' + this.props.ellipsis + '</span>');\n      var ndEllipsis = this.canvas.lastElementChild;\n      var ndPrevUnit = prevSibling(ndEllipsis, 2);\n      while (ndPrevUnit && (ndEllipsis.offsetTop > maxOffsetTop || // IE & Edge: doesn't support <wbr>\n      ndEllipsis.offsetHeight > ndPrevUnit.offsetHeight || ndEllipsis.offsetTop > ndPrevUnit.offsetTop)) {\n        this.canvas.removeChild(ndPrevUnit);\n        ndPrevUnit = prevSibling(ndEllipsis, 2);\n        units.pop();\n      }\n      return units.length;\n    }\n\n    // expose\n\n  }, {\n    key: 'isClamped',\n    value: function isClamped() {\n      return this.clamped; // do not use state.clamped. #27\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _state = this.state,\n          text = _state.text,\n          clamped = _state.clamped;\n\n      var _props = this.props,\n          Component = _props.component,\n          ellipsis = _props.ellipsis,\n          trimRight = _props.trimRight,\n          className = _props.className,\n          rest = _objectWithoutProperties(_props, ['component', 'ellipsis', 'trimRight', 'className']);\n\n      return React.createElement(\n        Component,\n        _extends({\n          className: 'LinesEllipsis ' + (clamped ? 'LinesEllipsis--clamped' : '') + ' ' + className,\n          ref: function ref(node) {\n            return _this3.target = node;\n          }\n        }, omit(rest, usedProps)),\n        clamped && trimRight ? text.replace(/[\\s\\uFEFF\\xA0]+$/, '') : text,\n        React.createElement('wbr', null),\n        clamped && React.createElement(\n          'span',\n          { className: 'LinesEllipsis-ellipsis' },\n          ellipsis\n        )\n      );\n    }\n  }]);\n\n  return LinesEllipsis;\n}(React.PureComponent);\n\nLinesEllipsis.defaultProps = defaultProps;\n\nmodule.exports = LinesEllipsis;\n\n","map":{"mappings":[{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/react-lines-ellipsis/lib/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}}],"sources":{"node_modules/react-lines-ellipsis/lib/index.js":"'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = require('react');\n\nvar _require = require('./common'),\n    canvasStyle = _require.canvasStyle,\n    mirrorProps = _require.mirrorProps;\n\nvar _require2 = require('./helpers'),\n    omit = _require2.omit;\n\nfunction prevSibling(node, count) {\n  while (node && count--) {\n    node = node.previousElementSibling;\n  }\n  return node;\n}\n\nvar defaultProps = {\n  basedOn: undefined,\n  className: '',\n  component: 'div',\n  ellipsis: 'â€¦', // &hellip;\n  maxLine: 1,\n  onReflow: function onReflow() {},\n\n  text: '',\n  trimRight: true,\n  winWidth: undefined // for the HOC\n};\nvar usedProps = Object.keys(defaultProps);\n/**\n * props.text {String} the text you want to clamp\n * props.maxLine {Number|String} max lines allowed\n * props.ellipsis {String} the ellipsis indicator\n * props.trimRight {Boolean} should we trimRight the clamped text?\n * props.basedOn {String} letters|words\n * props.className {String}\n */\n\nvar LinesEllipsis = function (_React$PureComponent) {\n  _inherits(LinesEllipsis, _React$PureComponent);\n\n  function LinesEllipsis(props) {\n    _classCallCheck(this, LinesEllipsis);\n\n    var _this = _possibleConstructorReturn(this, (LinesEllipsis.__proto__ || Object.getPrototypeOf(LinesEllipsis)).call(this, props));\n\n    _this.state = {\n      text: props.text,\n      clamped: false\n    };\n    _this.units = [];\n    _this.maxLine = 0;\n    _this.canvas = null;\n    return _this;\n  }\n\n  _createClass(LinesEllipsis, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initCanvas();\n      this.reflow(this.props);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.winWidth !== this.props.winWidth) {\n        this.copyStyleToCanvas();\n      }\n      this.reflow(nextProps);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.canvas.parentNode.removeChild(this.canvas);\n    }\n  }, {\n    key: 'setState',\n    value: function setState(state, callback) {\n      if (typeof state.clamped !== 'undefined') {\n        this.clamped = state.clamped;\n      }\n      return _get(LinesEllipsis.prototype.__proto__ || Object.getPrototypeOf(LinesEllipsis.prototype), 'setState', this).call(this, state, callback);\n    }\n  }, {\n    key: 'initCanvas',\n    value: function initCanvas() {\n      if (this.canvas) return;\n      var canvas = this.canvas = document.createElement('div');\n      canvas.className = 'LinesEllipsis-canvas ' + this.props.className;\n      canvas.setAttribute('aria-hidden', 'true');\n      this.copyStyleToCanvas();\n      Object.keys(canvasStyle).forEach(function (key) {\n        canvas.style[key] = canvasStyle[key];\n      });\n      document.body.appendChild(canvas);\n    }\n  }, {\n    key: 'copyStyleToCanvas',\n    value: function copyStyleToCanvas() {\n      var _this2 = this;\n\n      var targetStyle = window.getComputedStyle(this.target);\n      mirrorProps.forEach(function (key) {\n        _this2.canvas.style[key] = targetStyle[key];\n      });\n    }\n  }, {\n    key: 'reflow',\n    value: function reflow(props) {\n      /* eslint-disable no-control-regex */\n      var basedOn = props.basedOn || (/^[\\x00-\\x7F]+$/.test(props.text) ? 'words' : 'letters');\n      switch (basedOn) {\n        case 'words':\n          this.units = props.text.split(/\\b|(?=\\W)/);\n          break;\n        case 'letters':\n          this.units = Array.from(props.text);\n          break;\n        default:\n          throw new Error('Unsupported options basedOn: ' + basedOn);\n      }\n      this.maxLine = +props.maxLine || 1;\n      this.canvas.innerHTML = this.units.map(function (c) {\n        return '<span class=\\'LinesEllipsis-unit\\'>' + c + '</span>';\n      }).join('');\n      var ellipsisIndex = this.putEllipsis(this.calcIndexes());\n      var clamped = ellipsisIndex > -1;\n      var newState = {\n        clamped: clamped,\n        text: clamped ? this.units.slice(0, ellipsisIndex).join('') : props.text\n      };\n      this.setState(newState, props.onReflow.bind(this, newState));\n    }\n  }, {\n    key: 'calcIndexes',\n    value: function calcIndexes() {\n      var indexes = [0];\n      var elt = this.canvas.firstElementChild;\n      if (!elt) return indexes;\n\n      var index = 0;\n      var line = 1;\n      var offsetTop = elt.offsetTop;\n      while (elt = elt.nextElementSibling) {\n        if (elt.offsetTop > offsetTop) {\n          line++;\n          indexes.push(index);\n          offsetTop = elt.offsetTop;\n        }\n        index++;\n        if (line > this.maxLine) {\n          break;\n        }\n      }\n      return indexes;\n    }\n  }, {\n    key: 'putEllipsis',\n    value: function putEllipsis(indexes) {\n      if (indexes.length <= this.maxLine) return -1;\n      var lastIndex = indexes[this.maxLine];\n      var units = this.units.slice(0, lastIndex);\n      var maxOffsetTop = this.canvas.children[lastIndex].offsetTop;\n      this.canvas.innerHTML = units.map(function (c, i) {\n        return '<span class=\\'LinesEllipsis-unit\\'>' + c + '</span>';\n      }).join('') + ('<wbr><span class=\\'LinesEllipsis-ellipsis\\'>' + this.props.ellipsis + '</span>');\n      var ndEllipsis = this.canvas.lastElementChild;\n      var ndPrevUnit = prevSibling(ndEllipsis, 2);\n      while (ndPrevUnit && (ndEllipsis.offsetTop > maxOffsetTop || // IE & Edge: doesn't support <wbr>\n      ndEllipsis.offsetHeight > ndPrevUnit.offsetHeight || ndEllipsis.offsetTop > ndPrevUnit.offsetTop)) {\n        this.canvas.removeChild(ndPrevUnit);\n        ndPrevUnit = prevSibling(ndEllipsis, 2);\n        units.pop();\n      }\n      return units.length;\n    }\n\n    // expose\n\n  }, {\n    key: 'isClamped',\n    value: function isClamped() {\n      return this.clamped; // do not use state.clamped. #27\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _state = this.state,\n          text = _state.text,\n          clamped = _state.clamped;\n\n      var _props = this.props,\n          Component = _props.component,\n          ellipsis = _props.ellipsis,\n          trimRight = _props.trimRight,\n          className = _props.className,\n          rest = _objectWithoutProperties(_props, ['component', 'ellipsis', 'trimRight', 'className']);\n\n      return React.createElement(\n        Component,\n        _extends({\n          className: 'LinesEllipsis ' + (clamped ? 'LinesEllipsis--clamped' : '') + ' ' + className,\n          ref: function ref(node) {\n            return _this3.target = node;\n          }\n        }, omit(rest, usedProps)),\n        clamped && trimRight ? text.replace(/[\\s\\uFEFF\\xA0]+$/, '') : text,\n        React.createElement('wbr', null),\n        clamped && React.createElement(\n          'span',\n          { className: 'LinesEllipsis-ellipsis' },\n          ellipsis\n        )\n      );\n    }\n  }]);\n\n  return LinesEllipsis;\n}(React.PureComponent);\n\nLinesEllipsis.defaultProps = defaultProps;\n\nmodule.exports = LinesEllipsis;\n\n"},"lineCount":243}},"hash":"c77aaf99ee545c2833435b690c198375","cacheData":{"env":{}}}